!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("@donkeyclip/motorcortex")):"function"==typeof define&&define.amd?define(["@donkeyclip/motorcortex"],n):(t="undefined"!=typeof globalThis?globalThis:t||self)["@donkeyclip/motorcortex-textfxs"]=n(t.MotorCortex)}(this,(function(t){"use strict";function n(t,n){let a=t.split(" ").join("+");return n&&(a+=":wght@".concat(n)),a}class a extends t.HTMLClip{get fonts(){const t=n(this.attrs.fontFamily,this.attrs.fontWeight);return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=".concat(t,"&display=swap")}]}get html(){const{text:t,colors:n,width:a}=this.attrs;this.textSize=a/t.length;let p="",x="",c="";for(let a=0;a<t.length;a++){const o="color : ".concat(n[a%n.length],";"),e=t.slice(a,a+1);p+='<span \n          id="text"\n          style="'.concat(o,'"\n          class="letter letter-').concat(a,'"\n        >\n            ').concat(e,"\n        </span>");for(let t=0;t<8;t++){const p=.1*this.textSize*2,o=.1*this.textSize,e=.1*this.textSize*2;x+='\n          <polygon \n            class="poligon-'.concat(a,"-").concat(t,' poligon"\n            points="0,0 ').concat(p,",0 ").concat(o,",").concat(e,'"\n            style="fill: ').concat(n[a%n.length],';"\n          ></polygon>'),c+='\n          <circle \n            r="'.concat(.052*this.textSize,'"\n            class="circ circ-').concat(a,"-").concat(t,'"\n            style="fill:rgb(238, 238, 238);"\n          ></circle>')}}return'\n      <div class="wrapper">\n        <div class="container">\n          <p \n            id="text"\n            style="font-size:'.concat(this.textSize,'px"\n            class="text"\n          >').concat(p,'</p>\n          <svg id="svg">\n          ').concat(x,"\n          ").concat(c,"\n          </svg>\n        </div>\n      </div>\n      ")}get css(){return"\n      svg {\n        width: 100%;\n        position: absolute;\n        top: 0px;\n        left: 0px;\n        z-index: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        overflow: overlay;\n      }\n      \n      .text, .offscreen-text {\n        width: 100%;\n        top: 50%;\n        transform: translateY(-50%);\n        display: block;\n        margin: 0;\n        text-align: center;\n        font-family: ".concat(this.attrs.fontFamily,"\n      }\n      \n      .offscreen-text {\n        text-align: center;\n        top: -9999px;\n      }\n      \n      .letter{\n        display:inline-block;\n        font-weight: 800;\n      }\n\n      .poligon{\n        opacity:0\n      }\n\n      .container{\n        width: ").concat(this.attrs.width,"px;\n        height: ").concat(this.attrs.height,"px;\n        overflow: hidden;\n        background: ").concat(this.attrs.background,";\n        display: flex;\n        align-content: center;\n        align-items: center;\n        position: relative;\n      }\n\n      .wrapper{\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-content: center;\n        justify-content: center;\n        align-items: center;\n      }\n  ")}buildTree(){let n=this.textSize*this.attrs.text.length/2;for(let a=0;a<this.attrs.text.length;a++){const p=100*Math.random()-50,x=new t.CSSEffect({animatedAttrs:{width:"".concat(this.textSize,"px"),opacity:1,transform:{translateY:"0%",scale:1,rotate:p+"deg"}},initialValues:{width:"0px",opacity:0,transform:{translateY:"100%",scale:0}}},{duration:200,selector:".letter-"+a,easing:"easeOutExpo"}),c=new t.Group;let o=0;for(let p=0;p<8;p++){const x=Math.random(),o=x+(.4*Math.random()-.2),e=.52*this.textSize,r=e+this.textSize*Math.random()*.2,i=n+e*Math.cos(2*Math.PI*x),s=50+e*Math.sin(2*Math.PI*x),g=n+r*Math.cos(2*Math.PI*o),l=50+r*Math.sin(2*Math.PI*o),b=.1*this.textSize,d=.3+.7*Math.random(),h=b*d,f=.05*this.textSize*Math.random(),u=new t.CSSEffect({animatedAttrs:{opacity:1},initialValues:{opacity:0}},{duration:1,selector:".poligon-".concat(a,"-").concat(p,",.circ-").concat(a,"-").concat(p),easing:"easeOutExpo"}),y=new t.CSSEffect({animatedAttrs:{transform:{rotate:360*Math.random()+"deg",translateX:g-f+"px",translateY:l-f+"px"},opacity:0},initialValues:{transform:{scale:.15*f,rotate:360*Math.random()+"deg",translateX:i-h+"px",translateY:s-h+"px"},opacity:1}},{duration:600,selector:".circ-".concat(a,"-").concat(p),easing:"easeOutQuint"}),m=new t.CSSEffect({animatedAttrs:{transform:{rotate:360*Math.random()+"deg",translateX:g-h+"px",translateY:l-h+"px"},opacity:0},initialValues:{transform:{scale:d,rotate:360*Math.random()+"deg",translateX:i-h+"px",translateY:s-h+"px"},opacity:1}},{duration:600,selector:".poligon-".concat(a,"-").concat(p),easing:"easeOutQuint"});c.addIncident(u,0),c.addIncident(m,1),c.addIncident(y,1)}n+=this.textSize/2;const e=new t.CSSEffect({animatedAttrs:{transform:{translateY:"50%",rotate:"0deg"}},initialValues:{transform:{translateY:"0%"}}},{duration:200,selector:".letter-"+a,easing:"easeOutExpo"});this.addIncident(x,200*(a+1)+o),this.addIncident(c,200*(a+1)+o),this.addIncident(e,this.duration-200),o=200*(a+1)}}}class p extends t.HTMLClip{get fonts(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=".concat(n(this.attrs.fontFamily,this.attrs.fontWeight),"&display=swap")}]}get html(){const t=this.attrs.verticalAlign||"50%";return'\n        <div class="container">\n          <svg>\n            <symbol id="s-text">\n              <text text-anchor="middle" x="50%" y="'.concat(t,'" class="text--line">').concat(this.attrs.text,'</text>\n            </symbol>\n            <g class="g-ants">\n              <use xlink:href="#s-text" class="text-copy"></use>\n              <use xlink:href="#s-text" class="text-copy"></use>\n              <use xlink:href="#s-text" class="text-copy"></use>\n              <use xlink:href="#s-text" class="text-copy"></use>\n              <use xlink:href="#s-text" class="text-copy"></use>\n            </g>\n          </svg> \n        </div>\n    ')}get css(){return"\n    .container{\n      width: ".concat(this.attrs.width,"px;\n      height: ").concat(this.attrs.height,"px;\n      overflow: hidden;\n      background: ").concat(this.attrs.background,";\n      display: flex;\n      align-content: center;\n      align-items: center;\n      position: relative;\n    }\n    .g-ants{\n      position: relative;\n    }\n    .text--line {\n      font-size: ").concat(this.attrs.fontSize,"px;\n      font-family: ").concat(this.attrs.fontFamily,"\n    }\n    svg {\n      width: 100%;\n      height: 100%;\n    }\n    .text-copy {\n      fill: none;\n      stroke: white;\n      stroke-dasharray: 100% 28%;\n      stroke-width: ").concat(this.attrs.strokeWidth,"px;\n    }\n    .text-copy:nth-child(1) {\n      stroke: ").concat(this.attrs.colors[0],";\n      stroke-dashoffset: 7%;\n    }\n    .text-copy:nth-child(2) {\n      stroke: ").concat(this.attrs.colors[1],";\n      stroke-dashoffset: 14%;\n    }\n    .text-copy:nth-child(3) {\n      stroke: ").concat(this.attrs.colors[2],";\n      stroke-dashoffset: 21%;\n    }\n    .text-copy:nth-child(4) {\n      stroke: ").concat(this.attrs.colors[3],";\n      stroke-dashoffset: 28%;\n    }\n    .text-copy:nth-child(5) {\n      stroke: ").concat(this.attrs.colors[4],";\n      stroke-dashoffset: 35%;\n    }\n  ")}buildTree(){const n=new t.CSSEffect({animatedAttrs:{strokeDashoffset:"35%",strokeDasharray:" 0 87.5%"}},{duration:4e3,selector:".text-copy"});this.addIncident(n,0)}}class x extends t.HTMLClip{get fonts(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=".concat(n(this.attrs.fontFamily,this.attrs.fontWeight),"&display=swap")}]}get html(){return'\n        <div class="container">\n          <div class="text">'.concat(this.attrs.text,"</div>\n        </div>\n    ")}get css(){return this.colorsRGB=this.attrs.colors.map((t=>function(t){let n=0,a=0,p=0;return 4===t.length?(n="0x"+t[1]+t[1],a="0x"+t[2]+t[2],p="0x"+t[3]+t[3]):7===t.length&&(n="0x"+t[1]+t[2],a="0x"+t[3]+t[4],p="0x"+t[5]+t[6]),"".concat(+n,",").concat(+a,",").concat(+p)}(t))),"\n      .container {\n        width: ".concat(this.attrs.width,"px;\n        height: ").concat(this.attrs.height,"px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        overflow: hidden;\n        color: ").concat(this.attrs.textColor,";\n      }\n\n      .text{\n        font-size: ").concat(this.attrs.fontSize,"px;\n        text-align: center;\n        width: 100%;\n        color: ").concat(this.attrs.textColor,";\n        background: ").concat(this.attrs.background,";\n        font-family: ").concat(this.attrs.fontFamily,", cursive;\n        font-weight: 700;\n        height:100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    ")}buildTree(){const n=(a=t.CSSEffect,p=this.colorsRGB,x=500,[new a({animatedAttrs:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 0), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:"5px 5px 0px rgba(".concat(p[0],",0), \n          10px 10px 0px rgba(").concat(p[1],", 0), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 0), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 1), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 1), \n          30px 30px 0px rgba(").concat(p[5],", 1), \n          35px 35px 0px rgba(").concat(p[5],", 1), \n          40px 40px 0px rgba(").concat(p[5],", 1), \n          45px 45px 0px rgba(").concat(p[5],", 1)")},initialValues:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 1), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 1), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 1), \n          30px 30px 0px rgba(").concat(p[5],", 1), \n          35px 35px 0px rgba(").concat(p[5],", 1), \n          40px 40px 0px rgba(").concat(p[5],", 1), \n          45px 45px 0px rgba(").concat(p[5],", 1)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 1), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 1), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 1), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:"5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 0), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 1), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"}),new a({animatedAttrs:{textShadow:"5px 5px 0px rgba(".concat(p[0],",0), \n          10px 10px 0px rgba(").concat(p[1],", 0), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")},initialValues:{textShadow:" 5px 5px 0px rgba(".concat(p[0],",1), \n          10px 10px 0px rgba(").concat(p[1],", 0), \n          15px 15px 0px rgba(").concat(p[2],", 0), \n          20px 20px 0px rgba(").concat(p[3],", 0), \n          25px 25px 0px rgba(").concat(p[4],", 0), \n          30px 30px 0px rgba(").concat(p[5],", 0), \n          35px 35px 0px rgba(").concat(p[5],", 0), \n          40px 40px 0px rgba(").concat(p[5],", 0), \n          45px 45px 0px rgba(").concat(p[5],", 0)")}},{duration:x,selector:".text"})]);var a,p,x;const c=this.attrs.reverse?n.length:n.length/2;for(let t=0;t<c;t++)this.addIncident(n[t],500*t)}}class c extends t.HTMLClip{get fonts(){let t=this.attrs.fontFamily.split(" ").join("+");t+=":wght@".concat(this.attrs.fontWeightList.join(";"));return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=".concat(t,"&display=swap")}]}get html(){const t=[];for(let n=1;n<=this.attrs.repeats;n++)t.push('<div class="text-item">'.concat(this.attrs.text,"</div>"));return'\n    <div class="wrapper">\n      <div class="text">\n      '.concat(t.join(""),"\n      </div>\n    </div>\n    ")}get css(){return"\n    .wrapper{\n      width: ".concat(this.attrs.width,"px;\n      height: ").concat(this.attrs.height,"px;\n      display: flex;\n      align-content: center;\n      justify-content: center;\n      align-items: center;\n    }\n    .text{\n      font-size:").concat(this.attrs.fontSize,"px;\n      color:").concat(this.attrs.textColor,";\n      text-transform:uppercase;\n      font-family: ").concat(this.attrs.fontFamily,";\n      position: absolute;\n      font-weight: 100;\n      transform:rotate(").concat(this.attrs.rotate||0,"deg);\n    }\n   \n  ")}buildTree(){const n=new t.Combo({incidents:[{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{fontWeight:"900"}},props:{duration:300},position:0},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{fontWeight:"100"}},props:{duration:300},position:300}]},{selector:".text-item",delay:"@expression(index * 20)"});this.addIncident(n,0)}}return{npm_name:"@donkeyclip/motorcortex-textfxs",version:"0.2.0",incidents:[{exportable:a,name:"SvgExplosion",attributesValidationRules:{text:{type:"string"},colors:{optional:!0,type:"array",min:2,items:{optional:!0,type:"color"}},width:{type:"number"},height:{type:"number"},background:{optional:!0,type:"color"},fontFamily:{type:"string"}}},{exportable:p,name:"SvgLines",attributesValidationRules:{text:{type:"string"},colors:{optional:!0,type:"array",min:2,items:{optional:!0,type:"color"}},width:{type:"number"},fontSize:{type:"number"},strokeWidth:{type:"number"},height:{type:"number"},background:{optional:!0,type:"color"},fontFamily:{type:"string"},verticalAlign:{type:"string"}}},{exportable:x,name:"Shadow",attributesValidationRules:{text:{type:"string"},colors:{optional:!0,type:"array",min:2,items:{optional:!0,type:"color"}},width:{type:"number"},fontSize:{type:"number"},fontFamily:{type:"string"},textColor:{type:"string"},height:{type:"number"},background:{optional:!0,type:"color"},reverse:{type:"boolean"}}},{exportable:c,name:"FontWeight",attributesValidationRules:{text:{type:"string"},fontWeightList:{type:"array",items:{type:"number"}},repeats:{type:"number",min:1},width:{type:"number"},height:{type:"number"},fontSize:{type:"number"},fontFamily:{type:"string"},textColor:{type:"color"}}}]}}));
