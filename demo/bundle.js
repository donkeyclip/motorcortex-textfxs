/******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
/******/ 	window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadUpdateChunk(chunkId) {
/******/ 		var script = document.createElement("script");
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		if (null) script.crossOrigin = null;
/******/ 		document.head.appendChild(script);
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadManifest(requestTimeout) {
/******/ 		requestTimeout = requestTimeout || 10000;
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if (typeof XMLHttpRequest === "undefined") {
/******/ 				return reject(new Error("No browser support"));
/******/ 			}
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = requestTimeout;
/******/ 				request.send(null);
/******/ 			} catch (err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if (request.readyState !== 4) return;
/******/ 				if (request.status === 0) {
/******/ 					// timeout
/******/ 					reject(
/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
/******/ 					);
/******/ 				} else if (request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if (request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch (e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	var hotApplyOnUpdate = true;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentHash = "86cef3792c56cf7bb24f";
/******/ 	var hotRequestTimeout = 10000;
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParents = [];
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = [];
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateRequire(moduleId) {
/******/ 		var me = installedModules[moduleId];
/******/ 		if (!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if (me.hot.active) {
/******/ 				if (installedModules[request]) {
/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					}
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if (me.children.indexOf(request) === -1) {
/******/ 					me.children.push(request);
/******/ 				}
/******/ 			} else {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" +
/******/ 						request +
/******/ 						") from disposed module " +
/******/ 						moduleId
/******/ 				);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for (var name in __webpack_require__) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
/******/ 				name !== "e" &&
/******/ 				name !== "t"
/******/ 			) {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if (hotStatus === "prepare") {
/******/ 					if (!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		fn.t = function(value, mode) {
/******/ 			if (mode & 1) value = fn(value);
/******/ 			return __webpack_require__.t(value, mode & ~1);
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateModule(moduleId) {
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_selfInvalidated: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if (dep === undefined) hot._selfAccepted = true;
/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if (dep === undefined) hot._selfDeclined = true;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 			invalidate: function() {
/******/ 				this._selfInvalidated = true;
/******/ 				switch (hotStatus) {
/******/ 					case "idle":
/******/ 						hotUpdate = {};
/******/ 						hotUpdate[moduleId] = modules[moduleId];
/******/ 						hotSetStatus("ready");
/******/ 						break;
/******/ 					case "ready":
/******/ 						hotApplyInvalidatedModule(moduleId);
/******/ 						break;
/******/ 					case "prepare":
/******/ 					case "check":
/******/ 					case "dispose":
/******/ 					case "apply":
/******/ 						(hotQueuedInvalidatedModules =
/******/ 							hotQueuedInvalidatedModules || []).push(moduleId);
/******/ 						break;
/******/ 					default:
/******/ 						// ignore requests in error states
/******/ 						break;
/******/ 				}
/******/ 			},
/******/
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if (!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash, hotQueuedInvalidatedModules;
/******/
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = +id + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/
/******/ 	function hotCheck(apply) {
/******/ 		if (hotStatus !== "idle") {
/******/ 			throw new Error("check() is only allowed in idle status");
/******/ 		}
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
/******/ 			if (!update) {
/******/ 				hotSetStatus(hotApplyInvalidatedModules() ? "ready" : "idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = "main";
/******/ 			// eslint-disable-next-line no-lone-blocks
/******/ 			{
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if (
/******/ 				hotStatus === "prepare" &&
/******/ 				hotChunksLoading === 0 &&
/******/ 				hotWaitingFiles === 0
/******/ 			) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for (var moduleId in moreModules) {
/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if (!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if (!deferred) return;
/******/ 		if (hotApplyOnUpdate) {
/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
/******/ 			// avoid triggering uncaught exception warning in Chrome.
/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
/******/ 			Promise.resolve()
/******/ 				.then(function() {
/******/ 					return hotApply(hotApplyOnUpdate);
/******/ 				})
/******/ 				.then(
/******/ 					function(result) {
/******/ 						deferred.resolve(result);
/******/ 					},
/******/ 					function(err) {
/******/ 						deferred.reject(err);
/******/ 					}
/******/ 				);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for (var id in hotUpdate) {
/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApply(options) {
/******/ 		if (hotStatus !== "ready")
/******/ 			throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/ 		return hotApplyInternal(options);
/******/ 	}
/******/
/******/ 	function hotApplyInternal(options) {
/******/ 		hotApplyInvalidatedModules();
/******/
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/
/******/ 			var queue = outdatedModules.map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while (queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if (
/******/ 					!module ||
/******/ 					(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 				)
/******/ 					continue;
/******/ 				if (module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if (module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for (var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if (!parent) continue;
/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if (!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/
/******/ 		function addAllToSet(a, b) {
/******/ 			for (var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if (a.indexOf(item) === -1) a.push(item);
/******/ 			}
/******/ 		}
/******/
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn(
/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
/******/ 			);
/******/ 		};
/******/
/******/ 		for (var id in hotUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				/** @type {TODO} */
/******/ 				var result;
/******/ 				if (hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				/** @type {Error|false} */
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if (result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch (result.type) {
/******/ 					case "self-declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of self decline: " +
/******/ 									result.moduleId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of declined dependency: " +
/******/ 									result.moduleId +
/******/ 									" in " +
/******/ 									result.parentId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 						if (!options.ignoreUnaccepted)
/******/ 							abortError = new Error(
/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if (options.onAccepted) options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if (options.onDisposed) options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if (abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if (doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for (moduleId in result.outdatedDependencies) {
/******/ 						if (
/******/ 							Object.prototype.hasOwnProperty.call(
/******/ 								result.outdatedDependencies,
/******/ 								moduleId
/******/ 							)
/******/ 						) {
/******/ 							if (!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(
/******/ 								outdatedDependencies[moduleId],
/******/ 								result.outdatedDependencies[moduleId]
/******/ 							);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if (doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for (i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if (
/******/ 				installedModules[moduleId] &&
/******/ 				installedModules[moduleId].hot._selfAccepted &&
/******/ 				// removed self-accepted modules should not be required
/******/ 				appliedUpdate[moduleId] !== warnUnexpectedRequire &&
/******/ 				// when called invalidate self-accepting is not possible
/******/ 				!installedModules[moduleId].hot._selfInvalidated
/******/ 			) {
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					parents: installedModules[moduleId].parents.slice(),
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 			}
/******/ 		}
/******/
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while (queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if (!module) continue;
/******/
/******/ 			var data = {};
/******/
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/
/******/ 			// when disposing there is no need to call dispose handler
/******/ 			delete outdatedDependencies[moduleId];
/******/
/******/ 			// remove "parents" references from all children
/******/ 			for (j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if (!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if (idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if (idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Now in "apply" phase
/******/ 		hotSetStatus("apply");
/******/
/******/ 		if (hotUpdateNewHash !== undefined) {
/******/ 			hotCurrentHash = hotUpdateNewHash;
/******/ 			hotUpdateNewHash = undefined;
/******/ 		}
/******/ 		hotUpdate = undefined;
/******/
/******/ 		// insert new code
/******/ 		for (moduleId in appliedUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					var callbacks = [];
/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 						dependency = moduleOutdatedDependencies[i];
/******/ 						cb = module.hot._acceptedDependencies[dependency];
/******/ 						if (cb) {
/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
/******/ 							callbacks.push(cb);
/******/ 						}
/******/ 					}
/******/ 					for (i = 0; i < callbacks.length; i++) {
/******/ 						cb = callbacks[i];
/******/ 						try {
/******/ 							cb(moduleOutdatedDependencies);
/******/ 						} catch (err) {
/******/ 							if (options.onErrored) {
/******/ 								options.onErrored({
/******/ 									type: "accept-errored",
/******/ 									moduleId: moduleId,
/******/ 									dependencyId: moduleOutdatedDependencies[i],
/******/ 									error: err
/******/ 								});
/******/ 							}
/******/ 							if (!options.ignoreErrored) {
/******/ 								if (!error) error = err;
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Load self accepted modules
/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = item.parents;
/******/ 			hotCurrentChildModule = moduleId;
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch (err) {
/******/ 				if (typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch (err2) {
/******/ 						if (options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								originalError: err
/******/ 							});
/******/ 						}
/******/ 						if (!options.ignoreErrored) {
/******/ 							if (!error) error = err2;
/******/ 						}
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if (options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if (!options.ignoreErrored) {
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if (error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/
/******/ 		if (hotQueuedInvalidatedModules) {
/******/ 			return hotApplyInternal(options).then(function(list) {
/******/ 				outdatedModules.forEach(function(moduleId) {
/******/ 					if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 				});
/******/ 				return list;
/******/ 			});
/******/ 		}
/******/
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	function hotApplyInvalidatedModules() {
/******/ 		if (hotQueuedInvalidatedModules) {
/******/ 			if (!hotUpdate) hotUpdate = {};
/******/ 			hotQueuedInvalidatedModules.forEach(hotApplyInvalidatedModule);
/******/ 			hotQueuedInvalidatedModules = undefined;
/******/ 			return true;
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApplyInvalidatedModule(moduleId) {
/******/ 		if (!Object.prototype.hasOwnProperty.call(hotUpdate, moduleId))
/******/ 			hotUpdate[moduleId] = modules[moduleId];
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire("./index.js")(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Promise) {!function(t,n){ true?module.exports=n(__webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\")):undefined}(this,(function(t){\"use strict\";function n(t,n){if(!(t instanceof n))throw new TypeError(\"Cannot call a class as a function\")}function e(t,n){for(var e=0;e<n.length;e++){var o=n[e];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function o(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}function r(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,o)}return e}function a(t,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),n&&p(t,n)}function s(t){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,n){return(p=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t})(t,n)}function u(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function l(t,n){return!n||\"object\"!=typeof n&&\"function\"!=typeof n?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):n}function c(t){return function(){var n,e=s(t);if(u()){var o=s(this).constructor;n=Reflect.construct(e,arguments,o)}else n=e.apply(this,arguments);return l(this,n)}}t=t&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t;var f={},y={duration:1e3,round:0},d=[\"translateX\",\"translateY\",\"translateZ\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"scale\",\"scaleX\",\"scaleY\",\"scaleZ\",\"skew\",\"skewX\",\"skewY\",\"perspective\"],g={CSS:{}};function m(t,n,e){return Math.min(Math.max(t,n),e)}function h(t,n){return t.indexOf(n)>-1}var b={arr:function(t){return Array.isArray(t)},obj:function(t){return h(Object.prototype.toString.call(t),\"Object\")},pth:function(t){return b.obj(t)&&t.hasOwnProperty(\"totalLength\")},svg:function(t){return t instanceof SVGElement},inp:function(t){return t instanceof HTMLInputElement},dom:function(t){return t.nodeType||b.svg(t)},str:function(t){return\"string\"==typeof t},fnc:function(t){return\"function\"==typeof t},und:function(t){return void 0===t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},hsl:function(t){return/^hsl/.test(t)},col:function(t){return b.hex(t)||b.rgb(t)||b.hsl(t)},key:function(t){return!f.hasOwnProperty(t)&&!y.hasOwnProperty(t)&&\"targets\"!==t&&\"keyframes\"!==t}},v={linear:function(){return function(t){return t}}};function x(t,n){for(var e=t.length,o=arguments.length>=2?arguments[1]:void 0,r=[],i=0;i<e;i++)if(i in t){var a=t[i];n.call(o,a,i,t)&&r.push(a)}return r}function w(t){return t.reduce((function(t,n){return t.concat(b.arr(n)?w(n):n)}),[])}function P(t){return b.arr(t)?t:(b.str(t)&&(t=function(t){try{return document.querySelectorAll(t)}catch(t){return}}(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function O(t,n){return t.some((function(t){return t===n}))}function k(t){var n={};for(var e in t)n[e]=t[e];return n}function S(t,n){var e=k(t);for(var o in t)e[o]=n.hasOwnProperty(o)?n[o]:t[o];return e}function M(t,n){var e=k(t);for(var o in n)e[o]=b.und(t[o])?n[o]:t[o];return e}function j(t){return b.rgb(t)?(e=/rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(n=t))?\"rgba(\"+e[1]+\",1)\":n:b.hex(t)?function(t){var n=t.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,(function(t,n,e,o){return n+n+e+e+o+o})),e=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(n);return\"rgba(\"+parseInt(e[1],16)+\",\"+parseInt(e[2],16)+\",\"+parseInt(e[3],16)+\",1)\"}(t):b.hsl(t)?function(t){var n,e,o,r=/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(t)||/hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(t),i=parseInt(r[1],10)/360,a=parseInt(r[2],10)/100,s=parseInt(r[3],10)/100,p=r[4]||1;function u(t,n,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?t+6*(n-t)*e:e<.5?n:e<2/3?t+(n-t)*(2/3-e)*6:t}if(0==a)n=e=o=s;else{var l=s<.5?s*(1+a):s+a-s*a,c=2*s-l;n=u(c,l,i+1/3),e=u(c,l,i),o=u(c,l,i-1/3)}return\"rgba(\"+255*n+\",\"+255*e+\",\"+255*o+\",\"+p+\")\"}(t):void 0;var n,e}function C(t){var n=/[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(t);if(n)return n[1]}function R(t,n){return b.fnc(t)?t(n.target,n.id,n.total):t}function I(t,n){return t.getAttribute(n)}function E(t,n,e){if(O([e,\"deg\",\"rad\",\"turn\"],C(n)))return n;var o=g.CSS[n+e];if(!b.und(o))return o;var r=document.createElement(t.tagName),i=t.parentNode&&t.parentNode!==document?t.parentNode:document.body;i.appendChild(r),r.style.position=\"absolute\",r.style.width=100+e;var a=100/r.offsetWidth;i.removeChild(r);var s=a*parseFloat(n);return g.CSS[n+e]=s,s}function T(t,n,e){if(n in t.style){var o=n.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase(),r=t.style[n]||getComputedStyle(t).getPropertyValue(o)||\"0\";return e?E(t,r,e):r}}function B(t,n){return b.dom(t)&&!b.inp(t)&&(I(t,n)||b.svg(t)&&t[n])?\"attribute\":b.dom(t)&&O(d,n)?\"transform\":b.dom(t)&&\"transform\"!==n&&T(t,n)?\"css\":null!=t[n]?\"object\":void 0}function L(t){if(b.dom(t)){for(var n,e=t.style.transform||\"\",o=/(\\w+)\\(([^)]*)\\)/g,r=new Map;n=o.exec(e);)r.set(n[1],n[2]);return r}}function A(t,n,e,o){var r=h(n,\"scale\")?1:0+function(t){return h(t,\"translate\")||\"perspective\"===t?\"px\":h(t,\"rotate\")||h(t,\"skew\")?\"deg\":void 0}(n),i=L(t).get(n)||r;return e&&(e.transforms.list.set(n,i),e.transforms.last=n),o?E(t,i,o):i}function X(t,n,e,o){switch(B(t,n)){case\"transform\":return A(t,n,o,e);case\"css\":return T(t,n,e);case\"attribute\":return I(t,n);default:return t[n]||0}}function Y(t,n){var e=/^(\\*=|\\+=|-=)/.exec(t);if(!e)return t;var o=C(t)||0,r=parseFloat(n),i=parseFloat(t.replace(e[0],\"\"));switch(e[0][0]){case\"+\":return r+i+o;case\"-\":return r-i+o;case\"*\":return r*i+o}}function V(t,n){if(b.col(t))return j(t);if(/\\s/g.test(t))return t;var e=C(t),o=e?t.substr(0,t.length-e.length):t;return n?o+n:o}function W(t,n){var e=/[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g,o=V(b.pth(t)?t.totalLength:t,n)+\"\";return{original:o,numbers:o.match(e)?o.match(e).map(Number):[0],strings:b.str(t)||n?o.split(e):[]}}function G(t){var n=function(t){return x(t?w(b.arr(t)?t.map(P):P(t)):[],(function(t,n,e){return e.indexOf(t)===n}))}(t);return n.map((function(t,e){return{target:t,id:e,total:n.length,transforms:{list:L(t)}}}))}function N(t,n){var e=k(n);if(b.arr(t)){var o=t.length;2===o&&!b.obj(t[0])?t={value:t}:b.fnc(n.duration)||(e.duration=n.duration/o)}return(b.arr(t)?t:[t]).map((function(t,n){return b.obj(t)&&!b.pth(t)?t:{value:t}})).map((function(t){return M(t,e)}))}function D(t,n){var e;return t.tweens.map((function(o){var r=function(t,n){var e={};for(var o in t){var r=R(t[o],n);b.arr(r)&&1===(r=r.map((function(t){return R(t,n)}))).length&&(r=r[0]),e[o]=r}return e.duration=parseFloat(e.duration),e}(o,n),i=r.value,a=b.arr(i)?i[1]:i,s=C(a),p=X(n.target,t.name,s,n),u=e?e.to.original:p,l=b.arr(i)?i[0]:u,c=C(l)||C(p),f=s||c;return b.und(a)&&(a=u),r.from=W(l,f),r.to=W(Y(a,l),f),r.start=e?e.end:0,r.end=r.start+r.duration,r.isPath=!1,r.isColor=b.col(r.from.original),r.isColor&&(r.round=1),e=r,r}))}var z={css:function(t,n,e){return t.style[n]=e},attribute:function(t,n,e){return t.setAttribute(n,e)},object:function(t,n,e){return t[n]=e},transform:function(t,n,e,o,r){if(o.list.set(n,e),n===o.last||r){var i=\"\";o.list.forEach((function(t,n){i+=n+\"(\"+t+\") \"})),t.style.transform=i}}};function Z(t,n){G(t).forEach((function(t){for(var e in n){var o=R(n[e],t),r=t.target,i=C(o),a=X(r,e,i,t),s=Y(V(o,i||C(a)),a),p=B(r,e);z[p](r,e,s,t.transforms,!0)}}))}function _(t,n){return x(w(t.map((function(t){return n.map((function(n){return function(t,n){var e=B(t.target,n.name);if(e){var o=D(n,t),r=o[o.length-1];return{type:e,property:n.name,animatable:t,tweens:o,duration:r.end}}}(t,n)}))}))),(function(t){return!b.und(t)}))}var F=0;function $(t){var n=S(f,t),e=S(y,t),o=function(t,n){var e=[];for(var o in n)b.key(o)&&e.push({name:o,tweens:N(n[o],t)});return e}(e,t),r=G(t.targets),i=_(r,o),a=function(t,n){var e=t.length,o={};return o.duration=e?Math.max.apply(Math,t.map((function(t){return t.duration}))):n.duration,o}(i,e),s=F;return F++,M(n,{id:s,children:[],animatables:r,animations:i,duration:a.duration})}function K(t){void 0===t&&(t={});var n,e=0,o=null;function r(t){var n=window.Promise&&new Promise((function(t){return o=t}));return t.finished=n,n}var i=$(t);r(i);function a(t,n){n&&n.seek(t)}function s(t){var s=i.duration,p=t;i.progress=m(p/s*100,0,100),i.reversePlayback=p<i.currentTime,n&&function(t){if(i.reversePlayback)for(var o=e;o--;)a(t,n[o]);else for(var r=0;r<e;r++)a(t,n[r])}(p),!i.began&&i.currentTime>0&&(i.began=!0),function(t){for(var n=0,e=i.animations,o=e.length;n<o;){var r=e[n],a=r.animatable,s=r.tweens,p=s.length-1,u=s[p];p&&(u=x(s,(function(n){return t<n.end}))[0]||u);for(var l=m(t-u.start,0,u.duration)/u.duration,c=u.to.strings,f=u.round,y=[],d=u.to.numbers.length,g=void 0,h=0;h<d;h++){var b=void 0,v=u.to.numbers[h],w=u.from.numbers[h]||0;b=w+l*(v-w),f&&(u.isColor&&h>2||(b=Math.round(b*f)/f)),y.push(b)}var P=c.length;if(P){g=c[0];for(var O=0;O<P;O++){c[O];var k=c[O+1],S=y[O];isNaN(S)||(g+=k?S+k:S+\" \")}}else g=y[0];z[r.type](a.target,r.property,g,a.transforms),r.currentValue=g,n++}}(p),i.currentTime=m(p,0,s),t>=s&&(i.paused=!0,i.completed||(i.completed=!0,!i.passThrough&&\"Promise\"in window&&(o(),r(i))))}return i.reset=function(){i.passThrough=!1,i.currentTime=0,i.progress=0,i.paused=!0,i.began=!1,i.completed=!1,i.reversePlayback=!1,n=i.children;for(var t=e=n.length;t--;)i.children[t].reset()},i.set=function(t,n){return Z(t,n),i},i.seek=function(t){s(t)},i.reset(),i}function H(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))}function q(t){for(var n,e=t.points,o=0,r=0;r<e.numberOfItems;r++){var i=e.getItem(r);r>0&&(o+=H(n,i)),n=i}return o}function U(t){if(t.getTotalLength)return t.getTotalLength();switch(t.tagName.toLowerCase()){case\"circle\":return function(t){return 2*Math.PI*I(t,\"r\")}(t);case\"rect\":return function(t){return 2*I(t,\"width\")+2*I(t,\"height\")}(t);case\"line\":return function(t){return H({x:I(t,\"x1\"),y:I(t,\"y1\")},{x:I(t,\"x2\"),y:I(t,\"y2\")})}(t);case\"polyline\":return q(t);case\"polygon\":return function(t){var n=t.points;return q(t)+H(n.getItem(n.numberOfItems-1),n.getItem(0))}(t)}}function J(t,n){var e=n||{},o=e.el||function(t){for(var n=t.parentNode;b.svg(n)&&b.svg(n.parentNode);)n=n.parentNode;return n}(t),r=o.getBoundingClientRect(),i=I(o,\"viewBox\"),a=r.width,s=r.height,p=e.viewBox||(i?i.split(\" \"):[0,0,a,s]);return{el:o,viewBox:p,x:p[0]/1,y:p[1]/1,w:a,h:s,vW:p[2],vH:p[3]}}K.version=\"3.1.0\",K.get=X,K.set=Z,K.convertPx=E,K.penner=v,K.path=function(t){return{el:t,svg:J(t),totalLength:U(t),deltaCorrections:{x:4,y:5}}},K.getPathProgress=function(t,n,e){function o(e){void 0===e&&(e=0);var o=n*t.totalLength,r=o+e>=1?o+e:0;return t.el.getPointAtLength(r)}var r=J(t.el,t.svg),i=o(),a=o(-1),s=o(1);return{x:1*(i.x-r.x),y:1*(i.y-r.y),angle:180*Math.atan2(s.y-a.y,s.x-a.x)/Math.PI}};var Q=K,tt={transform:[\"translateX\",\"translateY\",\"translateZ\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"scale\",\"scaleX\",\"scaleY\",\"scaleZ\",\"skewX\",\"skewY\",\"perspective\"]};var nt=[\"cm\",\"mm\",\"in\",\"px\",\"pt\",\"pc\",\"em\",\"ex\",\"ch\",\"rem\",\"vw\",\"vh\",\"vmin\",\"vmax\",\"%\"],et=[\"deg\",\"rad\",\"grad\",\"turn\"],ot=\"measurement\",rt=\"color\";return{npm_name:\"@kissmybutton/motorcortex-anime\",version:\"2.1.12\",incidents:[{exportable:function(t){a(s,t);var e=c(s);function s(){return n(this,s),e.apply(this,arguments)}return o(s,[{key:\"onGetContext\",value:function(){var t={};if(Object.prototype.hasOwnProperty.call(tt,this.attributeKey))for(var n=tt[this.attributeKey],e=0;e<n.length;e++)Object.prototype.hasOwnProperty.call(this.targetValue,n[e])&&(t[n[e]]=[this.getInitialValue()[n[e]],this.targetValue[n[e]]]);else t[this.attributeKey]=[this.getInitialValue(),this.targetValue];this.target=Q(function(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){r(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}({autoplay:!1,duration:this.props.duration,easing:\"linear\",targets:this.element},(this.attrs||{}).attrs||{},{},t))}},{key:\"getScratchValue\",value:function(){if(\"transform\"===this.attributeKey){for(var t={},n=tt[this.attributeKey],e=function(t,n){var e=t.getComputedStyle(n).transform;if(\"\"===e||\"none\"===e)return{};var o,r,i,a,s,p,u,l,c=e.split(\"(\")[1].split(\")\")[0].split(\",\");return o=c,r=Math.atan2(o[1],o[0]),i=Math.pow(o[0],2)+Math.pow(o[1],2),a=Math.pow(o[2],2)+Math.pow(o[3],2),s=Math.sqrt(i),p=(o[0]*o[3]-o[2]*o[1])/s,u=Math.atan2(o[0]*o[2]+o[1]*o[3],i),l=Math.atan2(o[1]*o[3]+o[0]*o[2],a),{rotate:r/(Math.PI/180)+\"deg\",scaleX:s,scaleY:p,skewX:(1===i?u/(Math.PI/180):0)+\"deg\",skewY:(1===a?l/(Math.PI/180):0)+\"deg\",translateX:o[4]+\"px\",translateY:o[5]+\"px\"}}(this.context.window,this.element),o=0;o<n.length;o++)Object.prototype.hasOwnProperty.call(e,n[o])?t[n[o]]=e[n[o]]:t[n[o]]=Q.get(this.element,n[o]);return t}return Q.get(this.element,this.attributeKey)}},{key:\"onProgress\",value:function(t){return this.target.seek(this.target.duration*t)}}]),s}(t.Effect),name:\"Anime\",attributesValidationRules:{animatedAttrs:{type:\"object\",props:{background:{optional:!0,type:rt},backgroundColor:{optional:!0,type:rt},backgroundPosition:{optional:!0,type:\"string\"},backgroundSize:{optional:!0,type:\"string\"},border:{optional:!0,type:\"string\"},borderBottom:{optional:!0,type:\"string\"},borderBottomColor:{optional:!0,type:rt},borderBottomLeftRadius:{optional:!0,type:ot,units:nt},borderBottomRightRadius:{optional:!0,type:ot,units:nt},borderBottomWidth:{optional:!0,type:ot,units:nt},borderColor:{optional:!0,type:rt},borderEndEndRadius:{optional:!0,type:ot,units:nt},borderEndStartRadius:{optional:!0,type:ot,units:nt},borderImageOutset:{optional:!0,type:ot,units:nt,min:0},borderImageSlice:{optional:!0,type:ot,units:nt,min:0},borderImageWidth:{optional:!0,type:ot,units:nt,min:0},borderLeft:{optional:!0,type:\"string\"},borderLeftColor:{optional:!0,type:rt},borderLeftWidth:{optional:!0,type:ot,units:nt},borderRadius:{optional:!0,type:ot,units:nt},borderRight:{optional:!0,type:\"string\"},borderRightColor:{optional:!0,type:rt},borderRightWidth:{optional:!0,type:ot,units:nt},borderStartEndRadius:{optional:!0,type:ot,units:nt},borderStartStartRadius:{optional:!0,type:ot,units:nt},borderTop:{optional:!0,type:\"string\"},borderTopColor:{optional:!0,type:rt},borderTopLeftRadius:{optional:!0,type:ot,units:nt},borderTopRightRadius:{optional:!0,type:ot,units:nt},borderTopWidth:{optional:!0,type:ot,units:nt},borderWidth:{optional:!0,type:ot,units:nt},bottom:{optional:!0,type:ot,units:nt},boxShadow:{optional:!0,type:\"string\"},caretColor:{optional:!0,type:rt},color:{optional:!0,type:rt},columnCount:{optional:!0,type:\"number\",min:0,integer:!0},columnGap:{optional:!0,type:ot,units:nt},columnRule:{optional:!0,type:\"string\"},columnRuleColor:{optional:!0,type:rt},columnRuleWidth:{optional:!0,type:ot,units:nt},columns:{optional:!0,type:\"number\",min:0,integer:!0},columnWidth:{optional:!0,type:ot,units:nt},flex:{optional:!0,type:\"number\",min:0,integer:!0},flexBasis:{optional:!0,type:ot,units:nt},flexGrow:{optional:!0,type:\"number\",min:0,integer:!0},flexShrink:{optional:!0,type:\"number\",min:0,integer:!0},font:{optional:!0,type:\"string\"},fontSize:{optional:!0,type:ot,units:nt},fontSizeAdjust:{optional:!0,type:ot,units:nt,min:0},fontStretch:{optional:!0,type:ot,units:[\"%\"]},fontWeight:{optional:!0,type:\"string\"},gap:{optional:!0,type:ot,units:nt},gridColumnGap:{optional:!0,type:ot,units:nt},gridGap:{optional:!0,type:ot,units:nt},gridRowGap:{optional:!0,type:ot,units:nt},gridTemplateColumns:{optional:!0,type:ot,units:nt},gridTemplateRows:{optional:!0,type:ot,units:nt},height:{optional:!0,type:ot,units:nt,min:0},inset:{optional:!0,type:ot,units:nt,min:0},insetBlock:{optional:!0,type:ot,units:nt},insetBlockEnd:{optional:!0,type:ot,units:nt},insetBlockStart:{optional:!0,type:ot,units:nt},insetInline:{optional:!0,type:ot,units:nt},insetInlineEnd:{optional:!0,type:ot,units:nt},insetInlineStart:{optional:!0,type:ot,units:nt},left:{optional:!0,type:ot,units:nt},letterSpacing:{optional:!0,type:ot,units:nt},lineClamp:{optional:!0,type:\"number\",min:0,integer:!0},lineHeight:{optional:!0,type:ot,units:nt,min:0},margin:{optional:!0,type:\"string\"},marginBottom:{optional:!0,type:ot,units:nt},marginLeft:{optional:!0,type:ot,units:nt},marginRight:{optional:!0,type:ot,units:nt},marginTop:{optional:!0,type:ot,units:nt},maskBorder:{optional:!0,type:ot,units:nt,min:0},maskPosition:{optional:!0,type:\"string\"},maskSize:{optional:!0,type:\"string\"},maxHeight:{optional:!0,type:ot,units:nt,min:0},maxWidth:{optional:!0,type:ot,units:nt,min:0},objectPosition:{optional:!0,type:\"string\"},offset:{optional:!0,type:ot,units:nt},offsetAnchor:{optional:!0,type:\"string\"},offsetDistance:{optional:!0,type:ot,units:nt},offsetPath:{optional:!0,type:\"string\"},offsetPosition:{optional:!0,type:\"string\"},offsetRotate:{optional:!0,type:ot,units:et},opacity:{optional:!0,type:\"number\",min:0,max:1},order:{optional:!0,type:\"number\",integer:!0},outline:{optional:!0,type:\"string\"},outlineColor:{optional:!0,type:rt},outlineOffset:{optional:!0,type:ot,units:nt},outlineRadius:{optional:!0,type:ot,units:nt},outlineRadiusBottomleft:{optional:!0,type:ot,units:nt},outlineRadiusBottomright:{optional:!0,type:ot,units:nt},outlineRadiusTopleft:{optional:!0,type:ot,units:nt},outlineRadiusTopright:{optional:!0,type:ot,units:nt},outlineWidth:{optional:!0,type:ot,units:nt},padding:{optional:!0,type:ot,units:nt},paddingBottom:{optional:!0,type:ot,units:nt},paddingLeft:{optional:!0,type:ot,units:nt},paddingRight:{optional:!0,type:ot,units:nt},paddingTop:{optional:!0,type:ot,units:nt},perspective:{optional:!0,type:ot,units:nt},perspectiveOrigin:{optional:!0,type:\"string\"},right:{optional:!0,type:ot,units:nt},rotate:{optional:!0,type:ot,units:et},rowGap:{optional:!0,type:ot,units:nt},scale:{optional:!0,type:\"number\",min:0},scrollbarColor:{optional:!0,type:rt},scrollMargin:{optional:!0,type:ot,units:nt},scrollMarginBlock:{optional:!0,type:ot,units:nt},scrollMarginBlockEnd:{optional:!0,type:ot,units:nt},scrollMarginBlockStart:{optional:!0,type:ot,units:nt},scrollMarginBottom:{optional:!0,type:ot,units:nt},scrollMarginInline:{optional:!0,type:ot,units:nt},scrollMarginInlineEnd:{optional:!0,type:ot,units:nt},scrollMarginInlineStart:{optional:!0,type:ot,units:nt},scrollMarginLeft:{optional:!0,type:ot,units:nt},scrollMarginRight:{optional:!0,type:ot,units:nt},scrollMarginTop:{optional:!0,type:ot,units:nt},scrollPadding:{optional:!0,type:ot,units:nt},scrollPaddingBlock:{optional:!0,type:ot,units:nt},scrollPaddingBlockEnd:{optional:!0,type:ot,units:nt},scrollPaddingBlockStart:{optional:!0,type:ot,units:nt},scrollPaddingBottom:{optional:!0,type:ot,units:nt},scrollPaddingInline:{optional:!0,type:ot,units:nt},scrollPaddingInlineEnd:{optional:!0,type:ot,units:nt},scrollPaddingInlineStart:{optional:!0,type:ot,units:nt},scrollPaddingLeft:{optional:!0,type:ot,units:nt},scrollPaddingRight:{optional:!0,type:ot,units:nt},scrollPaddingTop:{optional:!0,type:ot,units:nt},scrollSnapCoordinate:{optional:!0,type:\"string\"},scrollSnapDestination:{optional:!0,type:ot,units:nt},shapeImageThreshold:{optional:!0,type:\"string\"},shapeMargin:{optional:!0,type:ot,units:nt},shapeOutside:{optional:!0,type:\"string\"},tabSize:{optional:!0,type:\"string\"},textDecoration:{optional:!0,type:\"string\"},textDecorationColor:{optional:!0,type:rt},textDecorationThickness:{optional:!0,type:ot,units:nt},textEmphasis:{optional:!0,type:\"string\"},textEmphasisColor:{optional:!0,type:rt},textFillColor:{optional:!0,type:rt},textIndent:{optional:!0,type:ot,units:nt},textShadow:{optional:!0,type:\"string\"},textStroke:{optional:!0,type:\"string\"},textStrokeColor:{optional:!0,type:rt},textUnderlineOffset:{optional:!0,type:ot,units:nt},top:{optional:!0,type:ot,units:nt},transform:{optional:!0,type:\"object\",props:{translateX:{type:ot,units:nt,optional:!0},translateY:{type:ot,units:nt,optional:!0},translateZ:{type:ot,units:nt,optional:!0},rotate:{type:ot,units:et,optional:!0},rotateX:{type:ot,units:et,optional:!0},rotateY:{type:ot,units:et,optional:!0},rotateZ:{type:ot,units:et,optional:!0},scale:{type:\"number\",min:0,optional:!0},scaleX:{type:\"number\",min:0,optional:!0},scaleY:{type:\"number\",min:0,optional:!0},scaleZ:{type:\"number\",min:0,optional:!0},skewX:{type:ot,units:et,optional:!0},skewY:{type:ot,units:et,optional:!0},perspective:{type:ot,units:nt,optional:!0}}},transformOrigin:{optional:!0,type:\"string\"},verticalAlign:{optional:!0,type:\"string\"},visibility:{optional:!0,type:\"string\"},width:{optional:!0,type:ot,units:nt},wordSpacing:{optional:!0,type:ot,units:nt},zIndex:{optional:!0,type:\"number\",integer:!0},zoom:{optional:!0,type:ot,units:[\"%\"],min:0}},transformOrigin:{type:\"string\"},verticalAlign:{type:\"string\"},visibility:{type:\"string\"},width:{type:ot,units:nt},wordSpacing:{type:ot,units:nt},zIndex:{type:\"number\",integer:!0},zoom:{type:ot,units:[\"%\"],min:0}}}},{exportable:function(t){a(r,t);var e=c(r);function r(){return n(this,r),e.apply(this,arguments)}return o(r,[{key:\"onGetContext\",value:function(){this.pixelsAccuracy=this.attrs.pixelsAccuracy||4,this.calculatedPoints=[];var t=this.context.getElements(this.targetValue.pathElement)[0];this.path=Q.path(t),this.isPathTargetInsideSVG=this.element instanceof SVGElement}},{key:\"onProgress\",value:function(t){var n,e=Math.round(this.path.totalLength/this.pixelsAccuracy*t)*this.pixelsAccuracy;if(null!==this.calculatedPoints[e]&&void 0!==this.calculatedPoints[e])n=this.calculatedPoints[e];else{var o=Q.getPathProgress(this.path,e/this.path.totalLength,this.isPathTargetInsideSVG);n=\"\\n            translateX(\".concat(o.x,\"px)\\n            translateY(\").concat(o.y,\"px)\\n            rotate(\").concat(o.angle,\"deg)\\n        \"),this.calculatedPoints[e]=n}this.element.style.transform=n}}]),r}(t.Effect),name:\"MotionPath\",attributesValidationRules:{animatedAttrs:{type:\"object\",props:{positionOn:{type:\"object\",props:{pathElement:{type:\"string\"}}}}}}}],compositeAttributes:tt}}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! es6-promise */ \"../node_modules/es6-promise/dist/es6-promise.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js\n");

/***/ }),

/***/ "../node_modules/@kissmybutton/motorcortex-player/dist/motorcortex-player.umd.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@kissmybutton/motorcortex-player/dist/motorcortex-player.umd.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\")):undefined}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var n=t(e);function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var r=function(e){return document.querySelectorAll(e)},c=function(e){return document.getElementById(e)},p=function(e){return document.getElementsByTagName(e)},d=function(e){return document.createElement(e)},u=function(){var e;return(e=document).addEventListener.apply(e,arguments)},m=function(){var e;return(e=document).removeEventListener.apply(e,arguments)},h=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];function o(e){return\"number\"==typeof e&&isFinite(e)}var s=new RegExp(\"^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)\",\"gi\"),i=null,a=null;if(Object.prototype.hasOwnProperty.call(e,\"width\")){var l=e.width.match(s)[0],r=e.width.substring(l.length);i=!o(Number(l))||\"%\"!==r&&\"px\"!==r?null:{number:Number(l),unit:r}}if(Object.prototype.hasOwnProperty.call(e,\"height\")){var c=e.height.match(s)[0],p=e.height.substring(c.length);a=!o(Number(c))||\"%\"!==p&&\"px\"!==p?null:{number:Number(c),unit:p}}var d=1,u=1;null!==i&&\"px\"===i.unit&&i.number!==t.width&&(d=t.width/i.number),null!==a&&\"px\"===a.unit&&a.number!==t.height&&(u=t.height/a.number);var m=1;m=n?u>d?u:d:u<=d?u:d;var h={};if(null!==i){var g;g=\"px\"===i.unit?i.number*m:i.number/100*t.width*m;var v=t.width-g;h.left=v/2}if(null!==i){var f;f=\"px\"===a.unit?a.number*m:a.number/100*t.height*m;var b=t.height-f;h.top=b/2}return{scale:m,position:h}},g=function(){var e=(new Date).getTime();return\"xxxxxxxx-xxxx\".replace(/[xy]/g,(function(t){var n=(e+16*Math.random())%16|0;e=Math.floor(e/16);var o=Math.random()>.5,s=(\"x\"==t?n:3&n|8).toString(16);return o?s.toUpperCase():s}))};var v=function(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e){var t=e.exports={};t.playSVG='\\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"20\" viewBox=\"0 0 18 20\">\\n    <path fill=\"#999\" fill-rule=\"nonzero\" d=\"M16.224 8.515L2.582.245A1.7 1.7 0 0 0 0 1.702V18.24a1.7 1.7 0 0 0 2.582 1.455l13.642-8.27a1.7 1.7 0 0 0 0-2.91z\"/>\\n</svg>\\n\\n',t.dcSVG='\\n  <svg class=\"svg\" style=\"transform:scale(0.55)\" version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\\n width=\"1705.000000pt\" height=\"1903.000000pt\" viewBox=\"0 0 1705.000000 1903.000000\"\\n preserveAspectRatio=\"xMidYMid meet\">\\n<metadata>\\nCreated by potrace 1.15, written by Peter Selinger 2001-2017\\n</metadata>\\n<g transform=\"translate(0.000000,1903.000000) scale(0.100000,-0.100000)\"\\nfill=\"#000000\" stroke=\"none\">\\n<path d=\"M0 9515 l0 -9515 1583 0 1582 0 4430 4655 c2437 2561 4457 4687 4490\\n4726 33 38 1164 1227 2513 2642 l2452 2572 0 2192 c0 1206 -2 2193 -4 2193 -3\\n0 -1597 -1652 -3542 -3671 l-3538 -3671 -31 35 c-16 20 -1497 1683 -3290 3696\\nl-3260 3661 -1692 0 -1693 0 0 -9515z m5504 2412 c1253 -1413 2279 -2574 2282\\n-2580 3 -9 -3274 -3438 -4597 -4811 -5 -6 -9 1968 -9 4999 l0 5010 24 -25 c13\\n-14 1048 -1181 2300 -2593z\"/>\\n<path d=\"M13924 7584 c-34 -17 -2029 -2158 -2029 -2178 0 -15 5121 -5400 5141\\n-5404 12 -3 14 295 14 2241 l0 2245 -1478 1543 c-813 849 -1490 1550 -1505\\n1557 -38 16 -105 15 -143 -4z\"/>\\n</g>\\n</svg>\\n',t.pauseSVG='\\n  <svg class=\"svg\" style=\"transform:scale(1.5)\" width=\"100%\" height=\"100%\" viewBox=\"0 0 36 36\" >\\n    <path id=\"pause-icon\" data-state=\"playing\" d=\"M11,10 L17,10 17,26 11,26 M20,10 L26,10 26,26 20,26\" />\\n  </svg>\\n',t.replaySVG='\\n  <svg class=\"svg\" width=\"100%\" height=\"100%\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enable-background=\"new 0 0 1000 1000\" xml:space=\"preserve\">\\n    <metadata> Svg Vector Icons : http://www.onlinewebfonts.com/icon </metadata>\\n    <g><g transform=\"translate(0.000000,511.000000) scale(0.100000,-0.100000)\">\\n      <path d=\"M5356.3,4203.8c-1247.8-153.1-2324.2-811.3-3000.7-1839.7c-379.4-578.2-596.5-1209-660.5-1933.4l-27.4-294.8H883.9c-431.9,0-783.9-6.9-783.9-18.3c0-9.2,477.6-493.7,1062.7-1078.7l1062.7-1062.7L3288.1-961.1C3873.1-376,4350.8,108.5,4350.8,117.6c0,11.4-356.5,18.3-790.7,18.3h-793l18.3,189.7C2831,876.3,2991,1338,3288.1,1779.1C4122.3,3026.9,5706,3472.5,7065.8,2841.8C7639.4,2578.9,8197,2035,8487.3,1461.4C8581,1274,8709,896.9,8754.7,666.1c48-246.8,54.8-811.3,9.1-1055.8C8567.3-1491.3,7788-2394,6720.7-2750.5c-315.4-107.4-541.6-139.4-941.6-139.4c-287.9,0-415.9,11.4-598.8,50.3c-523.3,112-973.6,335.9-1371.2,681c-75.4,68.6-148.5,123.4-160,123.4c-9.1,0-187.4-169.1-393.1-374.8c-434.2-434.2-420.5-363.4-105.1-628.5c852.4-710.7,1972.3-1055.8,3046.4-937c1627.2,176,2977.8,1257,3489.8,2790.4c457.1,1368.9,169.1,2843-777,3969.7C8322.7,3484,7417.8,4000.4,6503.6,4160.4C6197.4,4213,5619.2,4235.8,5356.3,4203.8z\"/>\\n      <path d=\"M4990.7,124.5c0-1503.8,4.6-1794,32-1778c16,9.1,505.1,413.6,1085.6,895.8C7113.8,78.8,7161.8,122.2,7122.9,161c-80,75.4-2109.4,1757.5-2120.8,1757.5C4995.3,1918.5,4990.7,1111.8,4990.7,124.5z\"/>\\n    </g></g>\\n  </svg>\\n',t.volumeSVG='\\n  <svg class=\"svg\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\\n   viewBox=\"0 0 286.374 286.374\" enable-background=\"new 0 0 286.374 286.374\" xml:space=\"preserve\">\\n    <g id=\"Volume_2\">\\n      <path style=\"fill-rule:evenodd;clip-rule:evenodd;\" d=\"M233.636,26.767l-33.372,28.5c25.659,21.07,42.006,52.616,42.006,87.92\\n        c0,35.305-16.347,66.851-42.006,87.921l33.372,28.499c32.324-28.869,52.738-70.268,52.738-116.421\\n        C286.374,97.034,265.96,55.635,233.636,26.767z M177.737,74.513l-34.69,29.64c15.14,6.818,27.19,21.681,27.19,39.034\\n        s-12.05,32.216-27.19,39.034l34.69,29.64c21.294-15.717,36.051-40.586,36.051-68.674C213.788,115.099,199.03,90.23,177.737,74.513z\\n         M108.672,48.317L44.746,98.441H17.898C4.671,98.441,0,103.268,0,116.34v53.695c0,13.072,4.951,17.898,17.898,17.898h26.848\\n        l63.926,50.068c7.668,4.948,16.558,6.505,16.558-7.365V55.683C125.23,41.813,116.34,43.37,108.672,48.317z\"/>\\n    </g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\\n  </svg>\\n',t.volumeMuteSVG='\\n  <svg class=\"svg\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\\n   viewBox=\"0 0 286.277 286.277\" enable-background=\"new 0 0 286.277 286.277\" xml:space=\"preserve\">\\n    <g id=\"Volume_none\">\\n      <path style=\"fill-rule:evenodd;clip-rule:evenodd;\" d=\"M245.102,143.151l36.98-37.071c5.593-5.605,5.593-14.681,0-20.284\\n        l-10.124-10.142c-5.593-5.604-14.655-5.604-20.247,0l-36.98,37.071l-36.977-37.043c-5.594-5.603-14.654-5.603-20.247,0\\n        l-10.124,10.143c-5.594,5.603-5.594,14.679,0,20.282l36.987,37.053l-36.961,37.051c-5.591,5.604-5.591,14.681,0,20.284\\n        l10.126,10.141c5.593,5.604,14.654,5.604,20.247,0l36.96-37.05l36.97,37.035c5.592,5.605,14.654,5.605,20.247,0l10.124-10.141\\n        c5.593-5.603,5.593-14.68,0-20.282L245.102,143.151z M108.674,48.296L44.747,98.42H17.9c-13.228,0-17.899,4.826-17.899,17.898\\n        L0,142.719l0.001,27.295c0,13.072,4.951,17.898,17.899,17.898h26.847l63.927,50.068c7.667,4.948,16.557,6.505,16.557-7.365V55.662\\n        C125.23,41.792,116.341,43.349,108.674,48.296z\"/>\\n    </g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\\n  </svg>\\n',t.settingsSVG='\\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\">\\n    <path fill=\"#999\" fill-rule=\"nonzero\" d=\"M17.812 7.52h-1.474a7.09 7.09 0 0 0-.604-1.456l1.043-1.042a1.187 1.187 0 0 0 0-1.68l-1.12-1.118a1.188 1.188 0 0 0-1.68 0l-1.043 1.042a7.05 7.05 0 0 0-1.455-.604V1.188C11.48.531 10.948 0 10.292 0H8.708c-.656 0-1.187.532-1.187 1.188v1.474a7.1 7.1 0 0 0-1.456.604L5.022 2.224a1.187 1.187 0 0 0-1.68 0l-1.12 1.12a1.188 1.188 0 0 0 0 1.68l1.044 1.042c-.256.46-.458.949-.604 1.455H1.188C.531 7.52 0 8.052 0 8.708v1.584c0 .656.532 1.187 1.188 1.187h1.474c.146.507.348.995.604 1.456L2.22 13.979a1.188 1.188 0 0 0 0 1.68l1.12 1.119a1.223 1.223 0 0 0 1.68 0l1.043-1.043c.462.255.95.458 1.457.605v1.472c0 .656.531 1.188 1.187 1.188h1.584c.656 0 1.187-.532 1.187-1.188V16.34c.506-.147.995-.35 1.456-.604l1.043 1.043a1.188 1.188 0 0 0 1.68 0l1.119-1.12a1.187 1.187 0 0 0 0-1.679l-1.043-1.043c.256-.461.458-.95.604-1.456h1.474A1.188 1.188 0 0 0 19 10.29V8.709c0-.656-.532-1.187-1.188-1.187zM9.5 13.459a3.958 3.958 0 1 1 0-7.916 3.958 3.958 0 0 1 0 7.916z\"/>\\n</svg>\\n\\n',t.arrowRightSVG='\\n  <svg class=\"svg arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\" viewBox=\"0 0 50 80\" xml:space=\"preserve\">\\n    <polyline fill=\"none\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" points=\"0.375,0.375 45.63,38.087 0.375,75.8 \"/>\\n  </svg>\\n',t.arrowLeftSVG='\\n  <svg class=\"svg arrow\" class=\"svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 50 80\" xml:space=\"preserve\">\\n    <polyline fill=\"none\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" points=\"45.63,75.8 0.375,38.087 45.63,0.375 \"/>\\n  </svg> \\n',t.fullScreenSVG='\\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\">\\n    <g fill=\"#999\" fill-rule=\"nonzero\">\\n        <path d=\"M18.802 1.942A1.746 1.746 0 0 0 17.06.2h-4.537a.99.99 0 1 0 0 1.98h4.102c.11 0 .198.088.198.197v2.588a.99.99 0 1 0 1.98 0V1.942zM.198 4.965a.99.99 0 0 0 1.98 0v-2.59a.198.198 0 0 1 .197-.199h4.102a.99.99 0 0 0 0-1.979H1.944C.983.2.204.978.202 1.94L.198 4.965zM18.802 17.056v-3.023a.99.99 0 1 0-1.98 0v2.592c0 .11-.088.198-.197.198h-4.102a.99.99 0 1 0 0 1.98h4.533c.964-.001 1.746-.783 1.746-1.747zM.198 17.056a1.746 1.746 0 0 0 1.746 1.742h4.533a.99.99 0 1 0 0-1.979H2.375a.198.198 0 0 1-.198-.194v-2.592a.99.99 0 1 0-1.98 0v3.023z\"/>\\n        <rect width=\"10.651\" height=\"6.117\" x=\"4.174\" y=\"6.441\" rx=\"1.954\"/>\\n    </g>\\n</svg>\\n\\n',t.loopSVG='\\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"22\" viewBox=\"0 0 24 22\">\\n    <g fill=\"#999\" fill-rule=\"nonzero\">\\n        <path d=\"M16.773 15.476H16.3a1.25 1.25 0 0 0 0 2.5h.478a6.944 6.944 0 0 0 .98-13.823.251.251 0 0 1-.208-.246V1.93A1.25 1.25 0 0 0 15.584.906l-4.778 3.341a1.25 1.25 0 0 0 .717 2.274h4.764c2.829 0 4.963 1.925 4.963 4.478a4.482 4.482 0 0 1-4.477 4.477zM6.247 17.845c.12.02.208.124.208.246v1.976a1.249 1.249 0 0 0 1.966 1.024l4.773-3.34a1.251 1.251 0 0 0-.717-2.275H7.713c-2.829 0-4.963-1.925-4.963-4.476a4.482 4.482 0 0 1 4.477-4.479h.478a1.25 1.25 0 1 0 0-2.5h-.478a6.945 6.945 0 0 0-.98 13.824z\"/>\\n    </g>\\n</svg>\\n',t.loadingSVG='<svg class=\"lds-spinner\" style=\"transform:scale(.3)\" width=\"200px\"  height=\"200px\"  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" style=\"background: none;\"><g transform=\"rotate(0 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.9166666666666666s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(30 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.8333333333333334s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(60 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(90 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.6666666666666666s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(120 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5833333333333334s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(150 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(180 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.4166666666666667s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(210 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.3333333333333333s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(240 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.25s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(270 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.16666666666666666s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(300 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.08333333333333333s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g><g transform=\"rotate(330 50 50)\">\\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"#999\">\\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\\n  </rect>\\n</g></svg>'})),f={name:\"mc-player\",set playerName(e){this.name+=\"-\"+e}},b=function(e,t){var n={default:{\"settings-background-color\":\"whitesmoke\",\"hms-background-color\":\"whitesmoke\",\"background-color\":\"whitesmoke\",\"grad-height\":\"0px\",color:\"black\",\"svg-color\":\"black\",\"loopbar-color\":\"#808086\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"red\",\"cursor-color\":\"red\",\"speedbar-cursor-color\":\"red\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(200, 200, 200, 0.5)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"red\",\"preview-border\":\"2px solid #fff\",border:\"1px solid rgba(255,255,255,0.2)\",\"controls-border\":\"none\",\"svg-selected-color\":\"red\",\"loopbar-boundaries-style::before\":\"\",\"loopbar-boundaries-style::after\":\"\",\"theme-style\":\"\",\"loopbar-boundaries-color\":\"#808086\"},dark:{\"settings-background-color\":\"black\",\"hms-background-color\":\"black\",\"background-color\":\"black\",\"grad-height\":\"0px\",color:\"white\",\"svg-color\":\"white\",\"loopbar-color\":\"#808086\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"red\",\"cursor-color\":\"red\",\"speedbar-cursor-color\":\"red\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(90, 90, 90, 0.5)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"red\",\"preview-border\":\"2px solid rgba(0,0,0,1)\",border:\"1px solid rgba(255,255,255,0.2)\",\"controls-border\":\"none\",\"svg-selected-color\":\"red\",\"loopbar-boundaries-style::before\":\"\",\"loopbar-boundaries-style::after\":\"\",\"theme-style\":\"\",\"loopbar-boundaries-color\":\"#808086\"},whiteGold:{\"settings-background-color\":\"white\",\"hms-background-color\":\"white\",\"background-color\":\"white\",\"grad-height\":\"0px\",color:\"#a17f1a\",\"svg-color\":\"#a17f1a\",\"loopbar-color\":\"#808086\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"#a17f1a\",\"cursor-color\":\"#a17f1a\",\"speedbar-cursor-color\":\"#a17f1a\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(200, 200, 200, 0.5)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"#a17f1a\",\"preview-border\":\"2px solid #808086\",border:\"1px solid rgba(255,255,255,0.2)\",\"controls-border\":\"none\",\"svg-selected-color\":\"red\",\"loopbar-boundaries-style::before\":\"\",\"loopbar-boundaries-style::after\":\"\",\"theme-style\":\"\",\"loopbar-boundaries-color\":\"#808086\"},darkGold:{\"settings-background-color\":\"black\",\"hms-background-color\":\"black\",\"background-color\":\"black\",\"grad-height\":\"0px\",color:\"#a17f1a\",\"svg-color\":\"#a17f1a\",\"loopbar-color\":\"#808086\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"#a17f1a\",\"cursor-color\":\"#a17f1a\",\"speedbar-cursor-color\":\"#a17f1a\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(90, 90, 90, 0.5)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"#a17f1a\",\"preview-border\":\"2px solid #808086\",border:\"1px solid rgba(255,255,255,0.2)\",\"controls-border\":\"none\",\"svg-selected-color\":\"red\",\"loopbar-boundaries-style::before\":\"\",\"loopbar-boundaries-style::after\":\"\",\"theme-style\":\"\",\"loopbar-boundaries-color\":\"#808086\"},transparent:{\"background-color\":\"transparent\",\"settings-background-color\":\"rgba(0,0,0,0.9)\",\"hms-background-color\":\"rgba(0,0,0,0.5)\",\"preview-border\":\"2px solid #fff\",color:\"#e8eaeb\",\"grad-height\":\"200px\",\"svg-color\":\"#e8eaeb\",\"loopbar-color\":\"#cfcfd0\",\"totalbar-color\":\"#797979\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"red\",\"cursor-color\":\"#9e2d11\",\"cursor-style::before\":'\\n        box-shadow: 0px 0px 6px 6px red;\\n        width: 6px;\\n        height: 6px;\\n        border-radius: 100%;\\n        display: block;\\n        content: \"\";\\n        background-color: red;\\n        position: relative;\\n        left: -2px;\\n        top: -2px;\\n    ',\"cursor-style::after\":'\\n        width: 6px;\\n        height: 6px;\\n        border-radius: 100%;\\n        box-shadow: 0px 0px 6px 6px red;\\n        content: \"\";\\n        display: block;\\n        position: absolute;\\n        background-color: red;\\n        right: -2px;\\n        bottom: -2px;\\n    ',\"speedbar-cursor-color\":\"red\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(200, 200, 200, 0.5)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"red\",border:\"1px solid rgba(255,255,255,0.1)\",\"svg-selected-color\":\"red\",\"loopbar-boundaries-style\":\"\\n        transform: translate(-50%,-37%);\\n        position: absolute;\\n        width: 18px;\\n        background-color: #ff0000;\\n        height: 18px;\\n        border-radius: 10px;\\n        z-index: 40;\\n        position: absolute;\\n        width: 18px;\\n        background-color: #ff0000;\\n        height: 18px;\\n        border-radius: 10px;\\n        z-index: 40;\\n        width: 18px;\\n        height: 9px;\\n        border-radius: 100%;\\n        top: 1.5px;\\n    \",\"loopbar-boundaries-style::before\":'\\n            width: 16px;\\n        height: 5px;\\n        background: #ff0000;\\n        border-radius: 100%;\\n        display: block;\\n        content: \"\";\\n        position: relative;\\n        left: -2px;\\n        top: 2px;\\n    ',\"loopbar-boundaries-style::after\":'\\n        width: 14px;\\n        height: 11px;\\n        border-radius: 100%;\\n        background: #ff0000;\\n        content: \"\";\\n        display: block;\\n        position: relative;\\n        top: -6px;\\n        left: 5px;\\n    ',\"theme-style\":\"\\n        #\".concat(t,\"-loopbar-start {\\n            left: -9px !important;\\n            transform: rotate(180deg);\\n            top: -2px;\\n        }\\n    \")},\"mc-green\":{\"background-color\":\"#141416\",\"settings-background-color\":\"rgba(0,0,0,0.9)\",\"hms-background-color\":\"rgba(0,0,0,0.5)\",\"preview-border\":\"2px solid #254a42\",color:\"#999\",\"grad-height\":\"0px\",\"svg-color\":\"#999\",\"loopbar-color\":\"rgba(0,184,139,0.2)\",\"loopbar-boundaries-color\":\"#00b88b\",\"totalbar-color\":\"rgba(255, 255, 255, 0.11)\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"#00b88b\",\"cursor-color\":\"#00b88b\",\"speedbar-cursor-color\":\"#00b88b\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(0,184,139,0.2)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"#00b88b\",border:\"1px solid rgba(255,255,255,0.1)\",\"controls-border\":\"1px solid #151515\",\"svg-selected-color\":\"#00b88b\",\"loopbar-boundaries-style\":\"\\n        transform: translate(-50%,-37%);\\n        position: absolute;\\n        width: 18px;\\n        background-color: #00b88b;\\n        height: 18px;\\n        border-radius: 10px;\\n        z-index: 40;\\n        position: absolute;\\n        width: 18px;\\n        background-color: #00b88b;\\n        height: 18px;\\n        border-radius: 10px;\\n        z-index: 40;\\n        width: 18px;\\n        height: 9px;\\n        border-radius: 100%;\\n        top: 1.5px;\\n    \",\"loopbar-boundaries-style::before\":'\\n            width: 16px;\\n        height: 5px;\\n        background: #00b88b;\\n        border-radius: 100%;\\n        display: block;\\n        content: \"\";\\n        position: relative;\\n        left: -2px;\\n        top: 2px;\\n    ',\"loopbar-boundaries-style::after\":'\\n        width: 14px;\\n        height: 11px;\\n        border-radius: 100%;\\n        background: #00b88b;\\n        content: \"\";\\n        display: block;\\n        position: relative;\\n        top: -6px;\\n        left: 5px;\\n    ',\"theme-style\":\"\\n        #\".concat(t,\"-loopbar-start {\\n            left: -9px !important;\\n            transform: rotate(180deg);\\n            top: -2px;\\n        }\\n    \")},\"mc-blue\":{\"background-color\":\"#141416\",\"settings-background-color\":\"rgba(0,0,0,0.9)\",\"hms-background-color\":\"rgba(0,0,0,0.5)\",\"preview-border\":\"2px solid #254453\",color:\"#999\",\"grad-height\":\"0px\",\"svg-color\":\"#999\",\"loopbar-color\":\"rgba(0,153,225,0.2)\",\"loopbar-boundaries-color\":\"#0099e1\",\"totalbar-color\":\"rgba(255, 255, 255, 0.11)\",\"speedbar-color\":\"#999\",\"runningbar-color\":\"#0099e1\",\"cursor-color\":\"#0099e1\",\"speedbar-cursor-color\":\"#0099e1\",\"button-opacity\":\"1\",\"hover-color\":\"rgba(0,153,225,0.2)\",\"slider-off-color\":\"#ccc\",\"slider-on-color\":\"#0099e1\",border:\"1px solid rgba(255,255,255,0.1)\",\"controls-border\":\"1px solid #151515\",\"svg-selected-color\":\"#0099e1\",\"loopbar-boundaries-style\":\"\\n        transform: translate(-50%,-37%);\\n        position: absolute;\\n        width: 18px;\\n        background-color: #0099e1;\\n        height: 18px;\\n        border-radius: 10px;\\n        z-index: 40;\\n        position: absolute;\\n        width: 18px;\\n        background-color: #0099e1;\\n        height: 18px;\\n        border-radius: 10px;\\n        z-index: 40;\\n        width: 18px;\\n        height: 9px;\\n        border-radius: 100%;\\n        top: 1.5px;\\n    \",\"loopbar-boundaries-style::before\":'\\n            width: 16px;\\n        height: 5px;\\n        background: #0099e1;\\n        border-radius: 100%;\\n        display: block;\\n        content: \"\";\\n        position: relative;\\n        left: -2px;\\n        top: 2px;\\n    ',\"loopbar-boundaries-style::after\":'\\n        width: 14px;\\n        height: 11px;\\n        border-radius: 100%;\\n        background: #0099e1;\\n        content: \"\";\\n        display: block;\\n        position: relative;\\n        top: -6px;\\n        left: 5px;\\n    ',\"theme-style\":\"\\n        #\".concat(t,\"-loopbar-start {\\n            left: -9px !important;\\n            transform: rotate(180deg);\\n            top: -2px;\\n        }\\n    \")},\"on-top\":{\"background-height\":\"100%\",\"pointer-event-panel-height\":\"calc(100% - 44px)\",\"controls-bottom\":\"0px\",\"settings-panel-bottom\":\"48px\",\"controls-position\":\"0px\"},\"position-bottom\":{\"background-height\":\"calc(100% - 44px)\",\"pointer-event-panel-height\":\"calc(100% - 44px)\",\"controls-bottom\":\"-0px\",\"settings-panel-bottom\":\"48px\",\"controls-position\":\"40px\"}};return n[e]},y=c,x=d,w=u,B=m,k=c,L=function(e,t,n){if(void 0!==o(n)){if(!1===n){e.elements.volumeBarActive.style.width=100*e.settings.previousVolume+\"%\",e.clip.setVolume(e.settings.previousVolume),e.settings.volumeMute=!1;var s=document.createElement(\"span\");s.innerHTML=v.volumeSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(s)}else if(!0===n){e.settings.volumeMute=!0,e.elements.volumeBarActive.style.width=\"0%\",e.clip.setVolume(0);var i=document.createElement(\"span\");i.innerHTML=v.volumeMuteSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(i)}e.options.muted=e.settings.volumeMute,e.eventBroadcast(\"mute-change\",e.settings.volumeMute)}if(void 0!==o(t)){if(e.settings.volume=t,e.settings.volume>0&&(e.settings.previousVolume=t),e.elements.volumeBarActive.style.width=100*e.settings.volume+\"%\",e.clip.setVolume(e.settings.volume),e.settings.volume>0){e.settings.volumeMute=!1;var a=document.createElement(\"span\");a.innerHTML=v.volumeSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(a)}else if(0===e.settings.volume){e.settings.volumeMute=!0;var l=document.createElement(\"span\");l.innerHTML=v.volumeMuteSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(l)}e.options.volume=e.settings.volume,e.eventBroadcast(\"volume-change\",e.settings.volume),e.eventBroadcast(\"mute-change\",e.settings.volumeMute)}},M=function(e){var t=!1;e.elements.volumeBtn.onclick=function(){if(e.settings.volumeMute){e.elements.volumeBarActive.style.width=100*e.settings.previousVolume+\"%\",e.clip.setVolume(e.settings.previousVolume),e.settings.volumeMute=!1;var t=document.createElement(\"span\");t.innerHTML=v.volumeSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(t)}else{e.settings.volumeMute=!0,e.elements.volumeBarActive.style.width=\"0%\",e.clip.setVolume(0);var n=document.createElement(\"span\");n.innerHTML=v.volumeMuteSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(n)}e.eventBroadcast(\"volume-change\",e.settings.previousVolume),e.eventBroadcast(\"mute-change\",e.settings.volumeMute)};var n=!1;e.elements.volumeBtn.onmouseover=function(){n=!0,e.elements.volumeCursor.classList.add(\"\".concat(e.name,\"-volume-cursor-transition\")),e.elements.volumeBar.classList.add(\"\".concat(e.name,\"-volume-width-transition\")),e.elements.volumeBarHelper.classList.add(\"\".concat(e.name,\"-volume-width-transition\")),e.elements.timeDisplay.classList.add(\"\".concat(e.name,\"-time-width-transition\"))},k(\"\".concat(e.name,\"-left-controls\")).onmouseout=function(){if(n&&!t){var o=event.toElement||event.relatedTarget||event.target;(function(e,t){var n=t.parentNode;for(;null!=n;){if(n==e)return!0;n=n.parentNode}return!1})(k(\"\".concat(e.name,\"-left-controls\")),o)||o===k(\"\".concat(e.name,\"-left-controls\"))||(n=!1,e.elements.volumeCursor.classList.remove(\"\".concat(e.name,\"-volume-cursor-transition\")),e.elements.volumeBar.classList.remove(\"\".concat(e.name,\"-volume-width-transition\")),e.elements.volumeBarHelper.classList.remove(\"\".concat(e.name,\"-volume-width-transition\")),e.elements.timeDisplay.classList.remove(\"\".concat(e.name,\"-time-width-transition\")))}},e.listeners.onCursorMoveVolumeBar=function(t){t.preventDefault();var n=(t.clientX||((t.touches||[])[0]||{}).clientX)-e.elements.volumeBarHelper.getBoundingClientRect().left;if(n<0?n=0:n>e.elements.volumeBarHelper.offsetWidth&&(n=e.elements.volumeBarHelper.offsetWidth),e.settings.volume=Number((n/e.elements.volumeBarHelper.offsetWidth).toFixed(2)),e.elements.volumeBarActive.style.width=100*e.settings.volume+\"%\",e.clip.setVolume(e.settings.volume),e.settings.volume>0){e.settings.volumeMute=!1;var o=document.createElement(\"span\");o.innerHTML=v.volumeSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(o)}else if(0===e.settings.volume){e.settings.volumeMute=!0;var s=document.createElement(\"span\");s.innerHTML=v.volumeMuteSVG,e.elements.volumeBtn.getElementsByTagName(\"svg\")[0].replaceWith(s)}e.eventBroadcast(\"volume-change\",e.settings.volume),e.eventBroadcast(\"mute-change\",e.settings.volumeMute)},e.listeners.onMouseUpVolumeBar=function(n){t=!1,e.elements.listenerHelper.style.pointerEvents=\"none\",n.preventDefault(),e.settings.volume>0&&(e.settings.previousVolume=e.settings.volume),B(\"mouseup\",e.listeners.onMouseUpVolumeBar,!1),B(\"touchend\",e.listeners.onMouseUpVolumeBar,!1),B(\"mousemove\",e.listeners.onCursorMoveVolumeBar,!1),B(\"touchmove\",e.listeners.onCursorMoveVolumeBar,!1)},e.listeners.onMouseDownVolumeBar=function(n){t=!0,e.elements.listenerHelper.style.pointerEvents=\"auto\",n.preventDefault(),e.listeners.onCursorMoveVolumeBar(n),w(\"mouseup\",e.listeners.onMouseUpVolumeBar,!1),w(\"touchend\",e.listeners.onMouseUpVolumeBar,!1),w(\"mousemove\",e.listeners.onCursorMoveVolumeBar,!1),w(\"touchmove\",e.listeners.onCursorMoveVolumeBar,!1)},e.elements.volumeBarHelper.addEventListener(\"mousedown\",e.listeners.onMouseDownVolumeBar,!1),e.elements.volumeCursor.addEventListener(\"mousedown\",e.listeners.onMouseDownVolumeBar,!1),e.elements.volumeBarHelper.addEventListener(\"touchstart\",e.listeners.onMouseDownVolumeBar,{passive:!1},!1),e.elements.volumeCursor.addEventListener(\"touchstart\",e.listeners.onMouseDownVolumeBar,{passive:!1},!1)};var E=u,T=m,S=u,C=m,V=u,P=m,z=c,H=u,D=m,N=function(e,t){t&&t.preventDefault();var n=z(\"\".concat(e.name,\"-show-indicator-checkbox\"));n.checked?(n.checked=!1,e.elements.indicator.style.visibility=\"hidden\"):(n.checked=!0,e.elements.indicator.style.visibility=\"visible\"),e.eventBroadcast(\"show-indicator-change\",n.checked)},W=function(e,t){t&&t.preventDefault();var n=z(\"\".concat(e.name,\"-pointer-events-checkbox\"));n.checked?(n.checked=!1,e.elements.mcPlayer.style.pointerEvents=\"none\",e.elements.pointerEventPanel.style.pointerEvents=\"auto\",z(\"\".concat(e.name,\"-controls\")).style.pointerEvents=\"auto\",e.elements.settingsPanel.style.pointerEvents=\"auto\"):(n.checked=!0,e.options.pointerEvents=!1,e.elements.mcPlayer.style.pointerEvents=\"none\",e.elements.pointerEventPanel.style.pointerEvents=\"none\",z(\"\".concat(e.name,\"-controls\")).style.pointerEvents=\"auto\",e.elements.settingsPanel.style.pointerEvents=\"auto\"),e.eventBroadcast(\"show-pointer-events-change\",n.checked)},F=function(e,t){t&&t.preventDefault(),e.elements.volumeControl.classList.toggle(\"\".concat(e.name,\"-volume-width-transition\")),e.elements.volumeControl.classList.toggle(\"\".concat(e.name,\"-hide\"));var n=z(\"\".concat(e.name,\"-show-volume-checkbox\"));n.checked?(n.checked=!1,e.elements.volumeControl.style.visibility=\"hidden\",e.elements.timeDisplay.style.left=\"45px\"):(n.checked=!0,e.elements.volumeControl.style.visibility=\"visible\",e.elements.timeDisplay.style.left=\"\"),e.eventBroadcast(\"show-volume-change\",n.checked)},I=function(e,t){t&&t.preventDefault();var n=z(\"\".concat(e.name,\"-show-preview-checkbox\"));n.checked?(n.checked=!1,z(\"\".concat(e.name,\"-hover-display\")).style.visibility=\"hidden\",z(\"\".concat(e.name,\"-hover-display\")).style.display=\"none\",e.options.preview=!1):(e.previewClip||e.createPreviewDisplay(),n.checked=!0,z(\"\".concat(e.name,\"-hover-display\")).style.visibility=\"visible\",z(\"\".concat(e.name,\"-hover-display\")).style.display=\"flex\",e.options.preview=!0),e.eventBroadcast(\"show-preview-change\",n.checked)},O=function(e){e.elements.settingsShowIndicator.onclick=function(t){return N(e,t)},e.elements.settingsPointerEvents.onclick=function(t){return W(e,t)},e.elements.settingsShowVolume.onclick=function(t){return F(e,t)},e.elements.settingsShowPreview.onclick=function(t){return I(e,t)},e.elements.settingsButton.onclick=function(t){t.preventDefault();var n=z(\"\".concat(e.name,\"-controls\")),o=function t(n){if(e.elements.settingsPanel.contains(n.target))return!0;e.elements.settingsPanel.classList.toggle(\"\".concat(e.name,\"-hide\")),e.elements.settingsPanel.classList.toggle(\"m-fadeOut\"),e.elements.settingsPanel.classList.toggle(\"m-fadeIn\"),e.elements.settingsPanel.className.includes(\"m-fadeOut\")&&(D(\"click\",t,!1),e.eventBroadcast(\"state-change\",e.state))};e.elements.settingsPanel.className.includes(\"m-fadeOut\")?(n.classList.value.includes(\"force-show-controls\")||n.classList.toggle(\"force-show-controls\"),H(\"click\",o,!1)):D(\"click\",o,!1)}},A=function(e,t){\"showIndicator\"===t?N(e):\"showPointerEvents\"===t?W(e):\"showVolume\"===t?F(e):\"showPreview\"===t&&I(e)},G=c,U=u,R=m,j=function(e){e.elements.settingsSpeedButtonShow.onclick=e.elements.settingsSpeedButtonHide.onclick=function(t){t.preventDefault(),e.elements.settingsPanel.classList.toggle(\"\".concat(e.name,\"-settings-speed-panel\")),e.elements.settingsPanel.className.includes(\"\".concat(e.name,\"-settings-speed-panel\"))?(e.elements.settingsMainPanel.style.display=\"none\",e.elements.settingsSpeedPanel.style.display=\"block\"):(e.elements.settingsSpeedPanel.style.display=\"none\",e.elements.settingsMainPanel.style.display=\"block\")};var t=function(t){t.preventDefault();var n=e.elements.speedBar.getBoundingClientRect(),o=(t.clientY||((t.touches||[])[0]||{}).clientY)-n.top;(o-=8)<0?o=0:o>e.elements.speedBar.offsetHeight-16&&(o=e.elements.speedBar.offsetHeight-16);var s=-1*((o=Math.floor(o))/(16*(e.options.speedValues.length-1))-1),i=1/(e.options.speedValues.length-1),a=e.calculateSpeed(i,e.options.speedValues,s);G(\"\".concat(e.name,\"-speed-runtime\")).innerHTML=a+\"0\",G(\"\".concat(e.name,\"-speed-cursor\")).style.top=o+\"px\",e.clip.executionSpeed=a,e.eventBroadcast(\"speed-change\",e.clip.executionSpeed)},n=function n(o){var s;e.elements.listenerHelper.style.pointerEvents=\"none\",o.preventDefault(),R(\"mouseup\",n,!1),R(\"touchend\",n,!1),R(\"mousemove\",t,!1),R(\"touchmove\",t,!1),G(\"\".concat(e.name,\"-speed-runtime\")).innerHTML=\"Speed\",s=1==e.clip.speed?\"Normal\":e.clip.speed,e.elements.speedCurrent.innerHTML=s},o=function(o){e.elements.listenerHelper.style.pointerEvents=\"auto\",o.preventDefault(),t(o),U(\"mouseup\",n,!1),U(\"touchend\",n,!1),U(\"mousemove\",t,!1),U(\"touchmove\",t,!1)};e.elements.speedBarHelper.addEventListener(\"mousedown\",o,!1),e.elements.speedBarHelper.addEventListener(\"touchstart\",o,{passive:!1},!1)},X=function(e,t){var n;t=parseFloat(t)||1,e.eventBroadcast(\"speed-change\",t),n=1==t?\"Normal\":t,e.clip.executionSpeed=t,e.elements.speedCurrent.innerHTML=n},J=c,q=function(e){e.settings.loopActivated=!e.settings.loopActivated,e.eventBroadcast(\"loop-change\",e.settings.loopActivated),e.elements.loopButton.classList.toggle(\"svg-selected\"),e.elements.loopBarStart.classList.toggle(\"m-fadeOut\"),e.elements.loopBarEnd.classList.toggle(\"m-fadeOut\"),e.elements.loopBarStart.classList.toggle(\"m-fadeIn\"),e.elements.loopBarStart.classList.toggle(\"\".concat(e.name,\"-hide\")),e.elements.loopBarEnd.classList.toggle(\"m-fadeIn\"),e.elements.loopBarEnd.classList.toggle(\"\".concat(e.name,\"-hide\")),J(\"\".concat(e.name,\"-loop-time\")).classList.toggle(\"m-fadeOut\"),J(\"\".concat(e.name,\"-loop-time\")).classList.toggle(\"m-fadeIn\"),J(\"\".concat(e.name,\"-loop-time\")).classList.toggle(\"\".concat(e.name,\"-hide\")),e.elements.loopEndTime.innerHTML=e.settings.loopEndMillisecond,e.elements.loopStartTime.innerHTML=e.settings.loopStartMillisecond,e.settings.needsUpdate=!0,e.settings.loopActivated||(e.elements.loopBar.style.left=\"0%\",e.elements.loopBar.style.width=\"100%\",e.settings.loopStartMillisecond=0,e.settings.loopEndMillisecond=e.clip.duration,e.settings.loopLastPositionXPxls=0,e.settings.loopLastPositionXPercentage=0,e.elements.runningBar.style.width=e.clip.runTimeInfo.currentMillisecond/e.clip.duration*100+\"%\")},Y=q,_=function(e){e.elements.loopButton.onclick=function(){return q(e)}},K=c;function Q(e,t){for(var n=t.parentNode;null!=n;){if(n==e)return!0;n=n.parentNode}return!1}var Z=function(e){var t=e.clip.props.host.className.includes(\"full-screen\");e.clip.props.host!==e.options.host&&!t&&e.clip.props.host.appendChild(e.elements.mcPlayer),e.clip.props.host!==e.options.host&&t&&e.options.host.appendChild(e.elements.mcPlayer),t?e.exitFullscreen():e.launchIntoFullscreen(e.clip.props.host)},$=Z,ee=function(e){e.elements.fullScreenButton.onclick=function(){return Z(e)}},te=g,ne=c,oe=u,se=m,ie=r,ae=c,le=new n.default.TimeCapsule,re=c,ce=p,pe=d,de=h;return function(){function e(t){var n,o=this;for(var s in function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),t.id=t.id||Date.now(),t.preview=t.preview||!1,t.showVolume=t.showVolume||!1,t.showIndicator=t.showIndicator||!1,t.theme=t.theme||\"transparent on-top\",t.host=t.host||t.clip.props.host,t.buttons=t.buttons||{},t.timeFormat=t.timeFormat||\"ss\",t.backgroundColor=t.backgroundColor||\"black\",t.fullscreen=t.fullscreen||!1,t.scaleToFit=null===(n=t.scaleToFit)||void 0===n||n,void 0===t.pointerEvents||null===t.pointerEvents?t.pointerEvents=!1:t.pointerEvents=Boolean(t.pointerEvents),t.onMillisecondChange=t.onMillisecondChange||null,t.speedValues=t.speedValues||[-2,-1,-.5,0,.5,1,2],t.muted=t.muted||!1,t.controls=0!=t.controls,t.loop=t.loop||!1,t.volume=void 0!==t.volume?t.volume:1,t.currentScript=t.currentScript||null,t.speedValues)isFinite(t.speedValues[s])||t.speedValues.splice(s,1);t.speedValues.sort((function(e,t){return e-t})),this.className=f.name,f.playerName=t.id,this.options=t,this.id=this.options.id,this.name=f.name,this.previewClip=null,this.clip=t.clip,this.clipClass=t.clipClass,this.state=this.clip.runTimeInfo.state,this.listeners={},this.previewScale=.25,this.settings={volume:1,journey:null,previousVolume:1,volumeMute:!1,needsUpdate:!0,resizeLoop:!1,loopJourney:!1,previewJourney:null,loopActivated:!1,requestingLoop:!1,playAfterResize:!1,loopStartMillisecond:0,loopLastPositionXPxls:0,loopLastPositionXPercentage:0,loopEndMillisecond:this.clip.duration,controls:!0},function(e){e.elements={};var t=e.clip.props.host;t.offsetWidth||(t.style.width=e.clip.props.containerParams.width),t.offsetHeight||(t.style.height=e.clip.props.containerParams.height);var n=document.createElement(\"link\");n.rel=\"preconnect\",n.href=\"https://fonts.gstatic.com\";var o=document.createElement(\"link\");o.rel=\"stylesheet\",o.href=\"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300&display=swap\";var s=document.getElementsByTagName(\"head\")[0];if(s.appendChild(n),s.appendChild(o),t.style.display=\"flex\",t.style.justifyContent=\"center\",t.style.alignItems=\"center\",t.style.overflow=\"hidden\",e.clip.props.host.style.position=\"relative\",e.clip.props.host.style.zIndex=\"0\",e.elements.mcPlayer=x(\"div\"),e.elements.mcPlayer.id=\"\".concat(e.name),e.elements.mcPlayer.className=\"\".concat(e.className),e.elements.mcPlayer.innerHTML=function(e){return'\\n  <div\\n    class=\"pointer-event-panel\"\\n    id=\"'.concat(e.name,'-pointer-event-panel\"\\n  ></div>\\n  <div\\n    class=\"pointer-event-panel\"\\n    id=\"').concat(e.name,'-listener-helper\"\\n  ></div>\\n  <div class=\"background\"></div>\\n  <div id=\"').concat(e.name,'-controls\">\\n    <div class=\"grad\"></div>\\n    <div id=\"').concat(e.name,'-totalbar\">\\n      <div id=\"').concat(e.name,'-hover-display\">\\n        <div id=\"').concat(e.name,'-hover-display-border\"> </div>\\n        <div id=\"').concat(e.name,'-hover-display-clip\"> </div>\\n        <div id=\"').concat(e.name,'-hover-millisecond\"></div>\\n      </div>\\n      <div id=\"').concat(e.name,'-loopbar\">\\n        <div\\n          class=\"').concat(e.name,'-loop-boundaries\"\\n          id=\"').concat(e.name,'-loopbar-start\"\\n        ></div>\\n        <div\\n          class=\"').concat(e.name,'-loop-boundaries\"\\n          id=\"').concat(e.name,'-loopbar-end\"\\n        ></div>\\n        <div id=\"').concat(e.name,'-helperbar\"></div>\\n        <div id=\"').concat(e.name,'-runningbar\">\\n          <div id=\"').concat(e.name,'-cursor\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div id=\"').concat(e.name,'-left-controls\">\\n      <div id=\"').concat(e.name,'-status-btn\">\\n        ').concat(e.svg.playSVG,'\\n        <span id=\"').concat(e.name,'-indicator\"></span>\\n      </div>\\n      <div id=\"').concat(e.name,'-volume\">\\n        <div id=\"').concat(e.name,'-volume-btn\">\\n          ').concat(e.svg.volumeSVG,'\\n        </div>\\n        <div id=\"').concat(e.name,'-volumebar-helper\"></div>\\n        <div id=\"').concat(e.name,'-volumebar\">\\n            <div id=\"').concat(e.name,'-volumebar-active\">\\n              <div id=\"').concat(e.name,'-volume-cursor\"></div>\\n            </div>\\n        </div>\\n      </div>\\n      <div id=\"').concat(e.name,'-time-display\">\\n        <span id=\"').concat(e.name,'-time-current\"></span>\\n        <span id=\"').concat(e.name,'-time-separator\"></span>\\n        <span id=\"').concat(e.name,'-time-total\"></span>\\n      </div>\\n    </div>\\n    <div id=\"').concat(e.name,'-right-controls\">\\n      <div\\n        id=\"').concat(e.name,'-loop-btn-container\"\\n      >\\n        <div\\n          id=\"').concat(e.name,'-loop-btn\"\\n        >').concat(e.svg.loopSVG,'</div>\\n        <div\\n          id=\"').concat(e.name,'-loop-time\"\\n        >\\n          <span\\n            id=\"').concat(e.name,'-loopbar-start-time\"\\n            class=\"').concat(e.name,'-loopbar-time\"\\n          ></span>\\n          <span>:</span>\\n          <span\\n            id=\"').concat(e.name,'-loopbar-end-time\"\\n            class=\"').concat(e.name,'-loopbar-time\"\\n          ></span>\\n        </div>\\n      </div>\\n      <div\\n        id=\"').concat(e.name,'-settings-btn\"\\n      >').concat(e.svg.settingsSVG,'</div>\\n      <div\\n        id=\"').concat(e.name,'-dc-btn\"\\n      >\\n        ').concat(e.svg.dcSVG,'\\n      </div>\\n      \\n      <div\\n        id=\"').concat(e.name,'-full-screen-btn\"\\n      >').concat(e.svg.fullScreenSVG,'</div>\\n    </div>\\n    \\n\\n  </div>\\n  <div id=\"').concat(e.name,'-settings-panel\">\\n    <ul id=\"').concat(e.name,'-main-settings\">\\n      <li id=\"').concat(e.name,'-settings-pointer-events\">\\n        <label>Pointer Events</label>\\n        <label class=\"switch settings-switch\">\\n          <input id=\"').concat(e.name,'-pointer-events-checkbox\" type=\"checkbox\">\\n          <span class=\"slider round\"></span>\\n        </label>\\n      </li>\\n      <li id=\"').concat(e.name,'-settings-preview\">\\n        <label>Show Preview</label>\\n        <label class=\"switch settings-switch\">\\n          <input id=\"').concat(e.name,'-show-preview-checkbox\" type=\"checkbox\">\\n          <span class=\"slider round\"></span>\\n        </label>\\n      </li>\\n      <li id=\"').concat(e.name,'-settings-indicator\">\\n        <label>Show Indicator</label>\\n        <label class=\"switch settings-switch\">\\n          <input id=\"').concat(e.name,'-show-indicator-checkbox\" type=\"checkbox\">\\n          <span class=\"slider round\"></span>\\n        </label>\\n      </li>\\n      <li id=\"').concat(e.name,'-settings-volume\">\\n        <label>Show Volume</label>\\n        <label class=\"switch settings-switch\">\\n          <input id=\"').concat(e.name,'-show-volume-checkbox\" type=\"checkbox\">\\n          <span class=\"slider round\"></span>\\n        </label>\\n      </li>\\n      <li id=\"').concat(e.name,'-settings-speed-show\">\\n        <label>Speed</label>\\n        <div class=\"').concat(e.name,'-speed-btn\">').concat(e.svg.arrowRightSVG,'</div>\\n        <span id=\"').concat(e.name,'-speed-current\"></span>\\n      </li>\\n    </ul>\\n    <ul id=\"').concat(e.name,'-speed-settings\">\\n      <li id=\"').concat(e.name,'-settings-speed-hide\">\\n        <div class=\"').concat(e.name,'-speed-btn\">').concat(e.svg.arrowLeftSVG,\"</div>\\n        <label id=\").concat(e.name,'-speed-runtime>Speed</label>\\n      </li>\\n      <li>\\n        <div id=\"').concat(e.name,'-speed-value-helperbar\"></div>\\n        <div id=\"').concat(e.name,'-speed-value-bar\">\\n          <div\\n            class=\"').concat(e.name,'-speed-value-step\"\\n            id=\"').concat(e.name,'-speed-cursor\"\\n          >\\n            <div></div>\\n          </div>\\n        </div>\\n        <div id=\"').concat(e.name,'-speed-value\">\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n')}({svg:v,name:e.name}),\"string\"==typeof e.options.host){var i=document.querySelectorAll(e.options.host);for(var a in i)isNaN(a)||i[a].appendChild(e.elements.mcPlayer)}else e.options.host.appendChild(e.elements.mcPlayer);for(var l in e.elements.pointerEventPanel=y(\"\".concat(e.name,\"-pointer-event-panel\")),e.elements.listenerHelper=y(\"\".concat(e.name,\"-listener-helper\")),e.elements.loopBar=y(\"\".concat(e.name,\"-loopbar\")),e.elements.totalBar=y(\"\".concat(e.name,\"-totalbar\")),e.elements.indicator=y(\"\".concat(e.name,\"-indicator\")),e.elements.loopButton=y(\"\".concat(e.name,\"-loop-btn\")),e.elements.volumeBar=y(\"\".concat(e.name,\"-volumebar\")),e.elements.totalTime=y(\"\".concat(e.name,\"-time-total\")),e.elements.volumeControl=y(\"\".concat(e.name,\"-volume\")),e.elements.volumeBtn=y(\"\".concat(e.name,\"-volume-btn\")),e.elements.runningBar=y(\"\".concat(e.name,\"-runningbar\")),e.elements.loopBarEnd=y(\"\".concat(e.name,\"-loopbar-end\")),e.elements.statusButton=y(\"\".concat(e.name,\"-status-btn\")),e.elements.speedBar=y(\"\".concat(e.name,\"-speed-value-bar\")),e.elements.currentTime=y(\"\".concat(e.name,\"-time-current\")),e.elements.timeDisplay=y(\"\".concat(e.name,\"-time-display\")),e.elements.speedCurrent=y(\"\".concat(e.name,\"-speed-current\")),e.elements.loopBarStart=y(\"\".concat(e.name,\"-loopbar-start\")),e.elements.volumeCursor=y(\"\".concat(e.name,\"-volume-cursor\")),e.elements.settingsButton=y(\"\".concat(e.name,\"-settings-btn\")),e.elements.donkeyclipButton=y(\"\".concat(e.name,\"-dc-btn\")),e.elements.timeSeparator=y(\"\".concat(e.name,\"-time-separator\")),e.elements.settingsPanel=y(\"\".concat(e.name,\"-settings-panel\")),e.elements.settingsMainPanel=y(\"\".concat(e.name,\"-main-settings\")),e.elements.fullScreenButton=y(\"\".concat(e.name,\"-full-screen-btn\")),e.elements.volumeBarHelper=y(\"\".concat(e.name,\"-volumebar-helper\")),e.elements.volumeBarActive=y(\"\".concat(e.name,\"-volumebar-active\")),e.elements.settingsSpeedPanel=y(\"\".concat(e.name,\"-speed-settings\")),e.elements.settingsShowVolume=y(\"\".concat(e.name,\"-settings-volume\")),e.elements.settingsShowPreview=y(\"\".concat(e.name,\"-settings-preview\")),e.elements.settingsPointerEvents=y(\"\".concat(e.name,\"-settings-pointer-events\")),e.elements.speedBarHelper=y(\"\".concat(e.name,\"-speed-value-helperbar\")),e.elements.settingsShowIndicator=y(\"\".concat(e.name,\"-settings-indicator\")),e.elements.settingsSpeedButtonShow=y(\"\".concat(e.name,\"-settings-speed-show\")),e.elements.settingsSpeedButtonHide=y(\"\".concat(e.name,\"-settings-speed-hide\")),e.elements.volumeBarActive.style.width=100*e.settings.volume+\"%\",e.elements.currentTime.innerHTML=e.timeFormat(0),e.elements.totalTime.innerHTML=e.timeFormat(e.clip.duration),e.elements.timeSeparator.innerHTML=\"/\",e.elements.settingsPanel.classList.add(\"m-fadeOut\",\"\".concat(e.name,\"-hide\")),e.options.showIndicator?(e.elements.indicator.style.visibility=\"visible\",e.elements.statusButton.style.width=\"35px\",e.elements.statusButton.style.height=\"20px\",e.elements.statusButton.style.bottom=\"5px\"):e.elements.indicator.style.visibility=\"hidden\",e.elements.indicator.innerHTML=e.clip.runTimeInfo.state,e.elements.settingsSpeedPanel.style.display=\"none\",e.elements.settingsSpeedPanel.getElementsByTagName(\"li\")[1].classList.add(\"no-hover\"),e.elements.loopBarStart.style.left=\"0%\",e.elements.loopBarStart.classList.add(\"m-fadeOut\",\"\".concat(e.name,\"-hide\")),e.elements.loopBarEnd.style.left=\"100%\",e.elements.loopBarEnd.classList.add(\"m-fadeOut\",\"\".concat(e.name,\"-hide\")),e.elements.loopStartTime=y(\"\".concat(e.name,\"-loopbar-start-time\")),e.elements.loopEndTime=y(\"\".concat(e.name,\"-loopbar-end-time\")),e.elements.editableLoopStartTime=document.createElement(\"input\"),e.elements.editableLoopStartTime.type=\"text\",e.elements.editableLoopStartTime.size=y(\"\".concat(e.name,\"-time-total\")).innerHTML.length+1,e.elements.editableLoopStartTime.maxLength=y(\"\".concat(e.name,\"-time-total\")).innerHTML.length,e.elements.editableLoopStartTime.style.height=y(\"\".concat(e.name,\"-time-total\")).offsetHeight,e.elements.editableLoopStartTime.value=y(\"\".concat(e.name,\"-loopbar-start-time\")).innerHTML,e.elements.editableLoopStartTime.style.fontSize=\"8px\",e.elements.editableLoopEndTime=document.createElement(\"input\"),e.elements.editableLoopEndTime.type=\"text\",e.elements.editableLoopEndTime.size=y(\"\".concat(e.name,\"-time-total\")).innerHTML.length+1,e.elements.editableLoopEndTime.maxLength=y(\"\".concat(e.name,\"-time-total\")).innerHTML.length,e.elements.editableLoopEndTime.style.height=y(\"\".concat(e.name,\"-time-total\")).offsetHeight,e.elements.editableLoopEndTime.value=y(\"\".concat(e.name,\"-loopbar-start-time\")).innerHTML,e.elements.editableLoopEndTime.pattern=\"d*\",e.elements.editableLoopEndTime.style.fontSize=\"8px\",y(\"\".concat(e.name,\"-loop-time\")).classList.add(\"m-fadeOut\",\"\".concat(e.name,\"-hide\")),y(\"\".concat(e.name,\"-hover-display\")).classList.add(\"m-fadeOut\"),y(\"\".concat(e.name,\"-show-volume-checkbox\")).checked=e.options.showVolume,y(\"\".concat(e.name,\"-show-indicator-checkbox\")).checked=e.options.showIndicator,y(\"\".concat(e.name,\"-show-preview-checkbox\")).checked=e.options.preview,y(\"\".concat(e.name,\"-pointer-events-checkbox\")).checked=e.options.pointerEvents,e.options.pointerEvents?(e.elements.mcPlayer.style.pointerEvents=\"none\",e.elements.pointerEventPanel.style.pointerEvents=\"none\",y(\"\".concat(e.name,\"-controls\")).style.pointerEvents=\"auto\",e.elements.settingsPanel.style.pointerEvents=\"auto\"):(e.elements.mcPlayer.style.pointerEvents=\"none\",e.elements.pointerEventPanel.style.pointerEvents=\"auto\",y(\"\".concat(e.name,\"-controls\")).style.pointerEvents=\"auto\",e.elements.settingsPanel.style.pointerEvents=\"auto\"),e.elements.listenerHelper.style.pointerEvents=\"none\",e.options.showVolume?(e.elements.timeDisplay.style.left=\"\",e.elements.volumeControl.style.visibility=\"visible\"):(e.elements.timeDisplay.style.left=\"45px\",e.elements.volumeControl.style.visibility=\"hidden\",e.elements.volumeControl.classList.toggle(\"\".concat(e.name,\"-hide\")),e.elements.volumeControl.classList.toggle(\"\".concat(e.name,\"-volume-width-transition\"))),e.options.speedValues){var r=x(\"div\");r.className=\"\".concat(e.name,\"-speed-value-step\");var c=x(\"div\");c.className=\"\".concat(e.name,\"-speed-value\"),c.dataset.speedValue=e.options.speedValues[l],c.innerHTML=e.options.speedValues[l],c.dataset.zone=l,y(\"\".concat(e.name,\"-speed-value\")).prepend(c),e.elements.speedBar.prepend(r)}!1===e.options.buttons.fullScreen&&e.elements.fullScreenButton.remove(),!1===e.options.buttons.settings&&e.elements.settingsButton.remove(),!1===e.options.buttons.donkeyclip&&e.elements.donkeyclipButton.remove(),!1===e.options.buttons.loop&&e.elements.loopButton.remove()}(this),this.setTheme(),this.setSpeed(),this.subscribeToTimer(),this.subscribeToDurationChange(),this.addEventListeners(),this.scaleClipHost(),this.eventBroadcast(\"state-change\",this.state),this.options.preview&&this.createPreviewDisplay(),this.resizeTimeout=setTimeout((function(){}),20),window.addEventListener(\"resize\",(function(){clearTimeout(o.resizeTimeout),o.resizeTimeout=setTimeout((function(){o.options.preview&&o.setPreviewDimentions(),o.options.scaleToFit&&o.scaleClipHost()}),20)})),this.changeSettings(t,!0)}var t,n,o;return t=e,(n=[{key:\"changeSettings\",value:function(e,t){e.theme=e.theme||\"transparent on-top\",e.speed=e.speed||1,e.volume=e.volume||1,e.clip=e.clip||this.clip,e.clip!==this.options.clip&&(t=!0,this.clip=e.clip,this.options.clip=e.clip),!1===e.controls?re(this.name).style.display=\"none\":!0===e.controls&&(re(this.name).style.display=\"unset\"),void 0!==e.loop&&(this.options.loop!==e.loop||t&&this.options.loop)&&Y(this),void 0!==e.fullscreen&&(this.options.fullscreen!==e.fullscreen||t&&this.options.fullscreen)&&$(this),void 0!==e.muted&&(this.options.muted!==e.muted||t&&this.options.muted)&&L(this,void 0,e.mute),void 0!==e.volume&&(this.options.volume!==e.volume||t&&this.options.volume)&&L(this,e.volume,void 0),void 0!==e.speed&&(this.options.speed!==e.speed||t&&this.options.speed)&&X(this,e.speed),void 0!==e.scaleToFit&&(this.options.scaleToFit!==e.scaleToFit||t&&this.options.scaleToFit)&&(this.options.scaleToFit=e.scaleToFit,this.scaleClipHost()),void 0!==e.showVolume&&this.options.showVolume!==e.showVolume&&A(this,\"showVolume\"),void 0!==e.preview&&this.options.preview!==e.preview&&A(this,\"showPreview\"),void 0!==e.theme&&this.options.theme!==e.theme&&(this.options.theme=e.theme,this.setTheme()),this.options=l(l({},this.options),e)}},{key:\"scaleClipHost\",value:function(){if(this.options.scaleToFit){var e=this.clip.props.containerParams.width,t=this.clip.props.containerParams.height,n=de({width:e,height:t},{width:this.clip.props.host.offsetWidth,height:this.clip.props.host.offsetHeight},\"cover\"===this.options.scaleToFit);this.clip.realClip.rootElement.style.transform=\"scale(\".concat(n.scale),this.clip.realClip.rootElement.style.left=n.position.left+\"px\",this.clip.realClip.rootElement.style.top=n.position.top+\"px\"}else this.clip.realClip.rootElement.style.transform=\"scale(1)\",this.clip.realClip.rootElement.style.left=\"0px\",this.clip.realClip.rootElement.style.top=\"0px\";this.eventBroadcast(\"scale-change\",this.options.scaleToFit)}},{key:\"createLoop\",value:function(e,t){this.settings.loopStartMillisecond=e,this.settings.loopEndMillisecond=t,this.elements.loopBar.style.left=e/this.clip.duration*100+\"%\",this.elements.loopBar.style.width=(t-e)/this.clip.duration*100+\"%\",this.createJourney(e),this.elements.runningBar.style.width=\"0%\",!this.settings.loopActivated&&Y(this)}},{key:\"createJourney\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=this.clip;setTimeout((function(){var s=n.before,i=void 0===s?null:s,a=n.after,l=void 0===a?null:a;i&&o[i](),t.settings.journey=le.startJourney(o),t.settings.journey.station(e),t.settings.journey.destination(),l&&o[l]()}),0)}},{key:\"millisecondChange\",value:function(e,t,n,o){var s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(this.state!==t&&(this.state=t,this.eventBroadcast(\"state-change\",t)),!this.settings.needsUpdate)return this.clip.pause(),1;var i=this.settings,a=i.loopActivated,l=i.loopEndMillisecond,r=i.loopStartMillisecond,c=this.clip.duration,p=this.elements,d=p.totalBar,u=p.loopBar,m=u.offsetWidth,h=u.offsetLeft/d.offsetWidth,g=e-c*h,v=c/d.offsetWidth*m;return e>=l&&a&&this.clip.speed>=0?(this.createJourney(r+1,{after:this.settings.playAfterResize||\"playing\"==this.clip.runTimeInfo.state?\"play\":null}),1):e>=l&&a&&this.clip.speed<0?(this.createJourney(l-1,{after:this.settings.playAfterResize||\"playing\"==this.clip.runTimeInfo.state?\"play\":null}),1):e<=r&&a&&this.clip.speed>=0?(this.createJourney(r+1,{after:this.settings.playAfterResize||\"playing\"==this.clip.runTimeInfo.state?\"play\":null}),1):e<=r&&a&&this.clip.speed<0?(this.createJourney(l-1,{after:this.settings.playAfterResize||\"playing\"==this.clip.runTimeInfo.state?\"play\":null}),1):(o&&this.createJourney(e,{after:this.settings.playAfterResize?\"play\":null}),this.elements.runningBar.style.width=g/v*100+\"%\",this.elements.currentTime.innerHTML=this.timeFormat(e),void(this.options.onMillisecondChange&&s&&this.options.onMillisecondChange(e)))}},{key:\"eventBroadcast\",value:function(e,t){var n=re(\"\".concat(this.name,\"-controls\"));\"state-change\"===e?(this.options.currentScript&&(this.options.currentScript.dataset.status=t),\"paused\"===t||\"idle\"===t||\"transitional\"===t||\"armed\"===t||\"blocked\"===t?(n.classList.value.includes(\"force-show-controls\")||n.classList.toggle(\"force-show-controls\"),this.elements.statusButton.innerHTML=v.playSVG,this.elements.statusButton.appendChild(this.elements.indicator),this.elements.indicator.innerHTML=\"\".concat(t.charAt(0).toUpperCase()+t.slice(1)),this.elements.pointerEventPanel.innerHTML=\"blocked\"===t?'\\n            <div style=\"width:100%;height:100%;background:rgba(0,0,0,0.5);display:flex;justify-content:center;align-items:center;\">'.concat(v.loadingSVG,\"</div>\"):\"\"):(n.classList.value.includes(\"force-show-controls\")&&n.classList.toggle(\"force-show-controls\"),this.elements.statusButton.innerHTML=v.pauseSVG,this.elements.statusButton.appendChild(this.elements.indicator),this.elements.indicator.innerHTML=\"Playing\",this.elements.pointerEventPanel.innerHTML=\"\",\"playing\"===t&&this.clip.runTimeInfo.currentMillisecond===this.clip.duration&&this.clip.speed>=0?this.createJourney(1,{after:\"play\"}):(\"playing\"===t&&0===this.clip.runTimeInfo.currentMillisecond&&this.clip.speed<0||\"playing\"===t&&this.clip.runTimeInfo.currentMillisecond===this.clip.duration&&this.clip.speed<0)&&this.createJourney(this.clip.duration-1,{after:\"play\"}))):\"duration-change\"===e?(this.elements.totalTime.innerHTML=this.timeFormat(this.clip.duration),this.settings.loopEndMillisecond=this.clip.duration,this.elements.pointerEventPanel.innerHTML=\"\",this.millisecondChange(this.clip.runTimeInfo.currentMillisecond)):this.options.currentScript&&(\"volume-change\"===e?(this.options.volume=t,this.options.currentScript.dataset.volume=t):\"speed-change\"===e?(this.options.speed=t,this.options.currentScript.dataset.speed=t):\"mute-change\"===e?t?(this.options.muted=!0,this.options.currentScript.dataset.muted=\"\"):(this.options.muted=!1,delete this.options.currentScript.dataset.muted):\"loop-change\"===e?t?(this.options.loop=!0,this.options.currentScript.dataset.loop=\"\"):(this.options.loop=!1,delete this.options.currentScript.dataset.loop):\"scale-change\"===e?t?(this.options.scaleToFit=!0,this.options.currentScript.dataset.scaleToFit=\"\"):(this.options.scaleToFit=!1,delete this.options.currentScript.dataset.scaleToFit):\"show-volume-change\"===e?t?(this.options.showVolume=!0,this.options.currentScript.dataset.showVolume=\"\"):(this.options.showVolume=!1,delete this.options.currentScript.dataset.showVolume):\"show-preview-change\"===e&&(t?(this.options.preview=!0,this.options.currentScript.dataset.preview=\"\"):(this.options.preview=!1,delete this.options.currentScript.dataset.preview)))}},{key:\"subscribeToDurationChange\",value:function(){this.clip.subscribeToDurationChange(this.subscribeToDurationChangeCallback.bind(this))}},{key:\"subscribeToDurationChangeCallback\",value:function(){this.eventBroadcast(\"duration-change\")}},{key:\"subscribeToTimer\",value:function(){this.clip.subscribe(this.id,this.millisecondChange.bind(this))}},{key:\"handleDragStart\",value:function(){this.settings.needsUpdate=!0,this.settings.journey=le.startJourney(this.clip)}},{key:\"timeFormat\",value:function(e){if(\"ss\"===this.options.timeFormat){var t=e/1e3/60/60,n=t%1*60,o=n%1*60,s=(\"0\"+parseInt(t)).slice(-2),i=(\"0\"+parseInt(n)).slice(-2),a=(\"0\"+parseInt(o)).slice(-2);return\"\".concat(\"00\"===s?\"\":s+\":\").concat(i,\":\").concat(a)}return e}},{key:\"handleDrag\",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];isFinite(e)||(e=0);var n=this.clip.duration,o=this.settings.journey,s=this.elements,i=s.loopBar,a=s.totalBar,l=s.runningBar,r=s.currentTime,c=e+i.offsetLeft,p=Math.round(n*c/a.offsetWidth);r.innerHTML=this.timeFormat(p),l.style.width=e/i.offsetWidth*100+\"%\",o.station(p),this.options.onMillisecondChange&&t&&this.options.onMillisecondChange(p)}},{key:\"handleDragEnd\",value:function(){this.settings.journey.destination()}},{key:\"createProgressDrag\",value:function(e){this.handleDragStart(),this.handleDrag(e),this.handleDragEnd()}},{key:\"addEventListeners\",value:function(){var e;(e=this).listeners.onCursorMoveLoopEnd=function(t){t.preventDefault();var n=(t.clientX||((t.touches||[])[0]||{}).clientX)-e.elements.totalBar.getBoundingClientRect().left;n<0?n=0:n>e.elements.totalBar.offsetWidth&&(n=e.elements.totalBar.offsetWidth),e.elements.runningBar.offsetWidth>=e.elements.loopBar.offsetWidth&&(e.elements.runningBar.style.width=e.elements.loopBar.offsetWidth+\"px\"),e.settings.loopLastPositionXPxls-n<0?e.elements.loopBar.style.width=Math.abs(e.settings.loopLastPositionXPxls-n)+\"px\":(e.elements.loopBar.style.left=n+\"px\",e.settings.loopLastPositionXPxls=n),e.settings.loopEndMillisecond=Math.round(e.clip.duration*((parseFloat(e.elements.loopBar.style.left)||0)+parseFloat(e.elements.loopBar.style.width))/e.elements.totalBar.offsetWidth),e.settings.loopEndMillisecond<e.clip.runTimeInfo.currentMillisecond&&(e.settings.loopJourney=!0),e.settings.loopStartMillisecond>e.settings.loopEndMillisecond&&(e.settings.loopStartMillisecond=e.settings.loopEndMillisecond,e.settings.loopJourney=!0),e.elements.loopEndTime.innerHTML=e.settings.loopEndMillisecond,e.elements.loopStartTime.innerHTML=e.settings.loopStartMillisecond},e.listeners.onMouseUpLoopEnd=function(t){if(e.elements.listenerHelper.style.pointerEvents=\"none\",e.settings.resizeLoop=!1,t.preventDefault(),e.elements.runningBar.style.width=e.elements.runningBar.offsetWidth/e.elements.loopBar.offsetWidth*100+\"%\",e.elements.loopBar.style.left=e.elements.loopBar.offsetLeft/e.elements.totalBar.offsetWidth*100+\"%\",e.elements.loopBar.style.width=e.elements.loopBar.offsetWidth/e.elements.totalBar.offsetWidth*100+\"%\",e.settings.loopJourney&&(e.createProgressDrag(e.elements.runningBar.offsetWidth),e.settings.loopJourney=!1),C(\"mouseup\",e.listeners.onMouseUpLoopEnd,!1),C(\"touchend\",e.listeners.onMouseUpLoopEnd,!1),C(\"mousemove\",e.listeners.onCursorMoveLoopEnd,!1),C(\"touchmove\",e.listeners.onCursorMoveLoopEnd,!1),e.elements.loopBar.addEventListener(\"mousedown\",e.listeners.onMouseDown,!1),e.elements.loopBar.addEventListener(\"touchstart\",e.listeners.onMouseDown,{passive:!0},!1),e.settings.playAfterResize){var n;if(\"idle\"===e.clip.runTimeInfo.state)n=e.clip.speed>=0?e.settings.loopStartMillisecond+1:e.settings.loopEndMillisecond-1,e.settings.needsUpdate=!0,e.createJourney(n,{before:\"pause\",after:\"play\"});else if(\"completed\"===e.clip.runTimeInfo.state){var o;o=e.clip.speed>=0?e.settings.loopStartMillisecond+1:e.settings.loopEndMillisecond-1,e.settings.needsUpdate=!0,e.createJourney(o,{before:\"pause\",after:\"play\"})}else e.clip.play();e.settings.playAfterResize=!1}},e.listeners.onMouseDownLoopEnd=function(t){e.elements.listenerHelper.style.pointerEvents=\"auto\",e.settings.resizeLoop=!0,e.settings.needsUpdate=!0,\"playing\"===e.clip.runTimeInfo.state&&(e.clip.pause(),e.settings.playAfterResize=!0),t.preventDefault(),e.elements.runningBar.style.width=e.elements.runningBar.offsetWidth+\"px\",e.elements.loopBar.style.left=e.elements.loopBar.offsetLeft+\"px\",e.elements.loopBar.style.width=e.elements.loopBar.offsetWidth+\"px\",e.elements.loopBar.removeEventListener(\"mousedown\",e.listeners.onMouseDown,!1),e.elements.loopBar.removeEventListener(\"touchstart\",e.listeners.onMouseDown,!1),e.listeners.onCursorMoveLoopEnd(t),S(\"mouseup\",e.listeners.onMouseUpLoopEnd,!1),S(\"touchend\",e.listeners.onMouseUpLoopEnd,!1),S(\"mousemove\",e.listeners.onCursorMoveLoopEnd,!1),S(\"touchmove\",e.listeners.onCursorMoveLoopEnd,!1)},e.elements.loopBarEnd.addEventListener(\"mousedown\",e.listeners.onMouseDownLoopEnd,!1),e.elements.loopBarEnd.addEventListener(\"touchstart\",e.listeners.onMouseDownLoopEnd,{passive:!1},!1),function(e){e.listeners.onCursorMove=function(t){t.preventDefault();var n=(t.clientX||((t.touches||[])[0]||{}).clientX)-e.elements.loopBar.getBoundingClientRect().left;n<0?n=0:n>e.elements.loopBar.offsetWidth&&(n=e.elements.loopBar.offsetWidth),e.handleDrag(n)},e.listeners.onMouseUp=function(){e.elements.listenerHelper.style.pointerEvents=\"none\",P(\"mouseup\",e.listeners.onMouseUp,!1),P(\"touchend\",e.listeners.onMouseUp,!1),P(\"mousemove\",e.listeners.onCursorMove,!1),P(\"touchmove\",e.listeners.onCursorMove,!1),e.handleDragEnd(e.settings)},e.listeners.onMouseDown=function(t){e.elements.listenerHelper.style.pointerEvents=\"auto\",\"playing\"===e.clip.runTimeInfo.state&&(e.settings.playAfterResize=!0),e.handleDragStart(e.clip),e.listeners.onCursorMove(t),V(\"mouseup\",e.listeners.onMouseUp,!1),V(\"touchend\",e.listeners.onMouseUp,!1),V(\"mousemove\",e.listeners.onCursorMove,!1),V(\"touchmove\",e.listeners.onCursorMove,!1)},e.elements.loopBar.addEventListener(\"mousedown\",e.listeners.onMouseDown,!1),e.elements.loopBar.addEventListener(\"touchstart\",e.listeners.onMouseDown,{passive:!1},!1)}(this),function(e){e.listeners.onCursorMoveLoopStart=function(t){t.preventDefault();var n=t.clientX||((t.touches||[])[0]||{}).clientX,o=e.elements.totalBar.getBoundingClientRect(),s=Math.round(n-o.left),i=Math.round(e.settings.loopEndMillisecond/e.clip.duration*e.elements.totalBar.offsetWidth);s<0?s=0:s>e.elements.totalBar.offsetWidth&&(s=e.elements.totalBar.offsetWidth);var a=e.clip.runTimeInfo.currentMillisecond/e.clip.duration*e.elements.totalBar.offsetWidth-s;e.elements.loopBar.style.left=s+\"px\",e.elements.loopBar.style.width=i-s+\"px\",e.elements.runningBar.style.width=a+\"px\",e.settings.loopLastPositionXPxls=s,e.settings.loopStartMillisecond=Math.round(e.clip.duration*e.elements.loopBar.offsetLeft/e.elements.totalBar.offsetWidth),e.settings.loopEndMillisecond<e.settings.loopStartMillisecond&&(e.settings.loopEndMillisecond=e.settings.loopStartMillisecond,e.elements.loopBar.style.width=\"0px\",e.elements.runningBar.style.width=\"0px\"),e.elements.loopEndTime.innerHTML=e.settings.loopEndMillisecond,e.elements.loopStartTime.innerHTML=e.settings.loopStartMillisecond,e.settings.loopStartMillisecond>e.clip.runTimeInfo.currentMillisecond&&(e.settings.loopJourney=!0)},e.listeners.onMouseUpLoopStart=function(t){var n;e.elements.listenerHelper.style.pointerEvents=\"none\",e.settings.resizeLoop=!1,t.preventDefault(),e.settings.loopJourney&&(e.createProgressDrag(e.elements.runningBar.offsetWidth),e.settings.loopJourney=!1),e.elements.loopBar.style.left=e.elements.loopBar.offsetLeft/e.elements.totalBar.offsetWidth*100+\"%\",e.elements.loopBar.style.width=e.elements.loopBar.offsetWidth/e.elements.totalBar.offsetWidth*100+\"%\",e.settings.loopStartMillisecond=Math.round(e.clip.duration*e.elements.loopBar.offsetLeft/e.elements.totalBar.offsetWidth),e.elements.runningBar.style.width=e.elements.runningBar.offsetWidth/e.elements.loopBar.offsetWidth*100+\"%\",T(\"mouseup\",e.listeners.onMouseUpLoopStart,!1),T(\"touchend\",e.listeners.onMouseUpLoopStart,!1),T(\"mousemove\",e.listeners.onCursorMoveLoopStart,!1),T(\"touchmove\",e.listeners.onCursorMoveLoopStart,!1),e.elements.loopBar.addEventListener(\"mousedown\",e.listeners.onMouseDown,!1),e.elements.loopBar.addEventListener(\"touchstart\",e.listeners.onMouseDown,{passive:!0},!1),e.settings.playAfterResize&&(\"idle\"===e.clip.runTimeInfo.state?(n=e.clip.speed>=0?e.settings.loopStartMillisecond+1:e.settings.loopEndMillisecond-1,e.settings.needsUpdate=!0,e.createJourney(n,{before:\"pause\",after:\"play\"})):e.clip.play(),e.settings.playAfterResize=!1)},e.listeners.onMouseDownLoopStart=function(t){e.elements.listenerHelper.style.pointerEvents=\"auto\",e.settings.resizeLoop=!0,t.preventDefault(),e.settings.needsUpdate=!0,\"playing\"===e.clip.runTimeInfo.state&&(e.clip.pause(),e.settings.playAfterResize=!0),e.elements.loopBar.removeEventListener(\"mousedown\",e.listeners.onMouseDown,!1),e.elements.loopBar.removeEventListener(\"touchstart\",e.listeners.onMouseDown,!1),e.listeners.onCursorMoveLoopStart(t),E(\"mouseup\",e.listeners.onMouseUpLoopStart,!1),E(\"touchend\",e.listeners.onMouseUpLoopStart,!1),E(\"mousemove\",e.listeners.onCursorMoveLoopStart,!1),E(\"touchmove\",e.listeners.onCursorMoveLoopStart,!1)},e.elements.loopBarStart.addEventListener(\"mousedown\",e.listeners.onMouseDownLoopStart,!1),e.elements.loopBarStart.addEventListener(\"touchstart\",e.listeners.onMouseDownLoopStart,{passive:!1},!1)}(this),function(e){e.listeners.editableLoopStartTime=function(){e.elements.editableLoopStartTime.value=e.elements.loopStartTime.innerHTML,e.elements.loopStartTime.replaceWith(e.elements.editableLoopStartTime),e.elements.editableLoopStartTime.focus()},e.listeners.editableLoopEndTime=function(){e.elements.editableLoopEndTime.value=e.elements.loopEndTime.innerHTML,e.elements.loopEndTime.replaceWith(e.elements.editableLoopEndTime),e.elements.editableLoopEndTime.focus()},e.elements.editableLoopEndTime.onkeydown=e.elements.editableLoopStartTime.onkeydown=function(t){t.preventDefault(),13===t.keyCode&&(e.elements.editableLoopStartTime.onfocusout(),e.elements.editableLoopEndTime.onfocusout()),8===t.keyCode&&(t.target.value=t.target.value.toString().substring(0,t.target.value.toString().length-1)),13===t.keyCode&&t.target.blur();var n=parseFloat((t.target.value||0).toString()+t.key);if(!(n>e.clip.duration))if(t.target.value=n,t.target===e.elements.editableLoopStartTime){var o=e.elements.totalBar.getBoundingClientRect(),s={preventDefault:function(){},clientX:e.elements.totalBar.offsetWidth/e.clip.duration*t.target.value+o.left};e.listeners.onMouseDownLoopStart(s),e.listeners.onCursorMoveLoopStart(s),e.listeners.onMouseUpLoopStart(s)}else if(t.target===e.elements.editableLoopEndTime){var i=e.elements.totalBar.getBoundingClientRect(),a={preventDefault:function(){},clientX:e.elements.totalBar.offsetWidth/e.clip.duration*t.target.value+i.left};e.listeners.onMouseDownLoopEnd(a),e.listeners.onCursorMoveLoopEnd(a),e.listeners.onMouseUpLoopEnd(a)}},e.elements.loopStartTime.onclick=e.listeners.editableLoopStartTime,e.elements.loopEndTime.onclick=e.listeners.editableLoopEndTime,e.elements.editableLoopStartTime.onfocusout=function(){e.elements.editableLoopStartTime.replaceWith(e.elements.loopStartTime)},e.elements.editableLoopEndTime.onfocusout=function(){e.elements.editableLoopEndTime.replaceWith(e.elements.loopEndTime)}}(this),M(this),function(e){e.elements.statusButton.onclick=function(t){return t.preventDefault(),\"playing\"===e.clip.runTimeInfo.state?e.clip.pause():\"paused\"!==e.clip.runTimeInfo.state&&\"idle\"!==e.clip.runTimeInfo.state&&\"transitional\"!==e.clip.runTimeInfo.state&&\"armed\"!==e.clip.runTimeInfo.state||e.clip.play(),!1}}(this),O(this),j(this),_(this),function(e){K(\"\".concat(e.name,\"-controls\")).onmouseover=function(){e.settings.loopActivated&&(e.elements.loopBarStart.classList.remove(\"m-fadeOut\"),e.elements.loopBarEnd.classList.remove(\"m-fadeOut\"),e.elements.loopBarStart.classList.add(\"m-fadeIn\"),e.elements.loopBarEnd.classList.add(\"m-fadeIn\"))},K(\"\".concat(e.name,\"-controls\")).onmouseout=function(t){var n=t.toElement||t.relatedTarget||t.target;Q(this,n)||n===this||e.settings.loopActivated&&(e.elements.loopBarStart.classList.add(\"m-fadeOut\"),e.elements.loopBarEnd.classList.add(\"m-fadeOut\"),e.elements.loopBarStart.classList.remove(\"m-fadeIn\"),e.elements.loopBarEnd.classList.remove(\"m-fadeIn\"))};var t=!1;K(\"\".concat(e.name,\"-controls\")).ontouchstart=function(n){var o=n.toElement||n.relatedTarget||n.target;Q(e.elements.statusButton,o)||o===e.elements.statusButton||Q(e.elements.settingsButton,o)||o===e.elements.settingsButton||Q(e.elements.fullScreenButton,o)||o===e.elements.fullScreenButton||Q(e.elements.loopButton,o)||o===e.elements.loopButton||Q(e.elements.totalBar,o)||o===e.elements.totalBar||(e.elements.settings.showVolume&&(e.elements.volumeControl.className=\"\".concat(e.name,\"-volume-width-transition\"),e.elements.volumeBar.className=\"\".concat(e.name,\"-volume-width-transition\"),e.elements.volumeBarHelper.className=\"\".concat(e.name,\"-volume-width-transition\")),e.elements.timeDisplay.className=\"\".concat(e.name,\"-time-width-transition\"),e.elements.volumeCursor.className=\"\".concat(e.name,\"-volume-cursor-transition\"),t=!0)},window.addEventListener(\"touchstart\",(function(n){var o=n.toElement||n.relatedTarget||n.target;Q(K(\"\".concat(e.name,\"-controls\")),o)||o===K(\"\".concat(e.name,\"-controls\"))||t&&(e.elements.volumeControl.className=\"\",e.elements.volumeBar.className=\"\",e.elements.volumeBarHelper.className=\"\",e.elements.timeDisplay.className=\"\",e.elements.volumeCursor.className=\"\")}))}(this),ee(this),function(e){e.elements.donkeyclipButton.addEventListener(\"click\",(function(){var t=te(),n=window.open(\"https://donkeyclip.com?u=\".concat(t)),o=e.clip.exportDefinition(),s=e.clipClass;window.addEventListener(\"message\",(function(e){e.data===t&&n.postMessage(JSON.stringify({definition:o,clipClass:s,u:t}),\"*\")}),!1)}))}(this),function(e){if(!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){var t=function(){e.options.preview&&(ne(\"\".concat(e.name,\"-hover-display\")).classList.toggle(\"m-fadeIn\"),ne(\"\".concat(e.name,\"-hover-display\")).classList.toggle(\"m-fadeOut\"),e.elements.loopBar.onmousemove=o)},n=function n(){e.options.preview&&(t(),e.elements.loopBar.onmouseover=e.elements.loopBar.onmouseout=t,e.elements.loopBar.onmousemove=o,se(\"mouseup\",n,!1),se(\"touchend\",n,!1),se(\"mousemove\",o,!1),se(\"touchmove\",o,!1))};e.elements.loopBar.onmouseover=e.elements.loopBar.onmouseout=t,e.elements.loopBar.onmousedown=function(){e.options.preview&&(e.elements.loopBar.onmouseover=e.elements.loopBar.onmouseout=null,e.elements.loopBar.onmousemove=null,oe(\"mouseup\",n,!1),oe(\"touchend\",n,!1),oe(\"mousemove\",o,!1),oe(\"touchmove\",o,!1))},e.elements.loopBar.onmouseup=function(){e.options.preview&&(se(\"mouseup\",n,!1),se(\"touchend\",n,!1),se(\"mousemove\",o,!1),se(\"touchmove\",o,!1),e.elements.loopBar.onmouseover=e.elements.loopBar.onmouseout=t,e.elements.loopBar.onmousemove=o)};var o=function(t){var n=t.clientX,o=e.elements.loopBar.getBoundingClientRect();if(n-o.left+e.settings.loopLastPositionXPxls>e.settings.loopLastPositionXPxls+e.elements.loopBar.offsetWidth&&!e.settings.resizeLoop)ne(\"\".concat(e.name,\"-hover-millisecond\")).innerHTML=e.timeFormat(e.settings.loopEndMillisecond);else if(n-o.left<0&&!e.settings.resizeLoop)ne(\"\".concat(e.name,\"-hover-millisecond\")).innerHTML=e.timeFormat(e.settings.loopStartMillisecond);else{var s=n-o.left+e.settings.loopLastPositionXPxls;s<0&&(s=0);var i=ne(\"\".concat(e.name,\"-hover-display\")).offsetWidth/2,a=ne(\"\".concat(e.name,\"-hover-display\")).offsetWidth/2,l=s-a;s-i<0?l=0:s+i>e.elements.totalBar.offsetWidth&&(l=e.elements.totalBar.offsetWidth-a-i);var r=Math.round(s/e.elements.totalBar.offsetWidth*e.clip.duration);if(e.options.preview){var c=r/e.clip.duration;e.previewClip.onProgress(c,r)}ne(\"\".concat(e.name,\"-hover-millisecond\")).innerHTML=e.timeFormat(r),ne(\"\".concat(e.name,\"-hover-display\")).style.left=l+\"px\"}}}}(this),function(e){document.addEventListener(\"fullscreenchange\",(function(){e.elements.mcPlayer.classList.toggle(\"full-screen\"),e.clip.props.host.classList.toggle(\"full-screen\"),e.options.preview&&e.setPreviewDimentions()})),document.addEventListener(\"webkitfullscreenchange\",(function(){e.elements.mcPlayer.classList.toggle(\"full-screen\"),e.clip.props.host.classList.toggle(\"full-screen\"),e.options.preview&&e.setPreviewDimentions()})),document.addEventListener(\"mozfullscreenchange\",(function(){e.elements.mcPlayer.classList.toggle(\"full-screen\"),e.clip.props.host.classList.toggle(\"full-screen\"),e.options.preview&&e.setPreviewDimentions()})),document.addEventListener(\"MSFullscreenChange\",(function(){e.elements.mcPlayer.classList.toggle(\"full-screen\"),e.clip.props.host.classList.toggle(\"full-screen\"),e.options.preview&&e.setPreviewDimentions()})),ie(\"body\")[0].addEventListener(\"click\",(function(t){if(t.target.className===\"\".concat(e.name,\"-speed-value\")){var n=t.target.dataset.speedValue-0;e.clip.executionSpeed=t.target.dataset.speedValue,n=1==e.clip.speed?\"Normal\":e.clip.speed,e.elements.speedCurrent.innerHTML=n;var o=1/(e.options.speedValues.length-1),s=-1*(t.target.dataset.zone*o-1)*(16*(e.options.speedValues.length-1));ae(\"\".concat(e.name,\"-speed-cursor\")).style.top=s+\"px\"}}))}(this)}},{key:\"launchIntoFullscreen\",value:function(e){this.options.preview&&this.setPreviewDimentions(),e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}},{key:\"exitFullscreen\",value:function(){document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()}},{key:\"setTheme\",value:function(){re(this.name+\"-style\")&&ce(\"head\")[0].removeChild(re(this.name+\"-style\")),this.options.theme.replace(/\\s\\s+/g,\" \"),this.options.theme.trim(),this.options.theme.includes(\"on-top\")||this.options.theme.includes(\"position-bottom\")||(this.options.theme+=\" on-top\");var e={};for(var t in this.options.theme.split(\" \")){var n=b(this.options.theme.split(\" \")[t],this.name);for(var o in n||{})e[o]=n[o]}var s=function(e,t,n){return\"\\n#\".concat(t,\", #\").concat(t,\" *{\\n  font-family:'Ubuntu' !important;\\n}\\n#\").concat(t,\" .background {\\n  background-color: \").concat(n.backgroundColor,\";\\n  width:100%;\\n  height:\").concat(e[\"background-height\"],\";;\\n  position:absolute;\\n  top:0px;\\n  left:0px;\\n  z-index:-2000;\\n}\\n\\n#\").concat(t,\" .full-screen #\").concat(t,\"-controls {\\n  position:fixed;\\n  left:0px;\\n  bottom:0px;\\n}\\n\\n#\").concat(t,\" .full-screen #\").concat(t,\"-settings-panel {\\n  position:fixed;\\n  bottom: 45px;\\n}\\n\\n#\").concat(t,\" .svg,#\").concat(t,\" .svg *,#\").concat(t,\" svg,#\").concat(t,\" svg *  {\\n  fill: \").concat(e[\"svg-color\"],\";\\n}\\n\\n#\").concat(t,\" .svg.arrow * {\\n  stroke: \").concat(e[\"svg-color\"],\";\\n  fill: transparent;\\n}\\n\\n#\").concat(t,\" .pointer-event-panel {\\n  height: \").concat(e[\"pointer-event-panel-height\"],\";\\n  display:flex;\\n  align-items:center;\\n  justify-content:center;\\n}\\n#\").concat(t,\"-pointer-event-panel{\\n  width:100%;\\n  position:absolute;\\n  z-index:100;\\n}\\n#\").concat(t,\"-listener-helper{\\n  width:100%;\\n  height:calc( 100% - 45px );\\n  position:absolute;\\n  z-index:110;\\n}\\n#\").concat(t,\" .svg-selected svg{\\n  fill: \").concat(e[\"svg-selected-color\"],\";\\n  stroke: \").concat(e[\"svg-selected-color\"],\";\\n}\\n#\").concat(t,\"-hover-display{\\n  display: flex;\\n  visibility:hidden;\\n  opacity:0;\\n  background-color: black;\\n  position: absolute;\\n  bottom: 30px;\\n  left: 0px;\\n  align-items: flex-end;\\n  justify-content: center;\\n}\\n#\").concat(t,\"-hover-display-clip{\\n  width:100%;\\n  height:100%;\\n  overflow:hidden;\\n  position:relative;\\n}\\n#\").concat(t,\"-hover-display-border{\\n  border: \").concat(e[\"preview-border\"],\";\\n  position:absolute;\\n  width:calc(100% - 4px);\\n  height:calc(100% - 4px);\\n  z-index:2;\\n}\\n\\n#\").concat(t,\"-hover-millisecond {\\n  font-weight:bold;\\n  padding:3px;\\n  height:18px;\\n  margin:0px;\\n  line-height:12px;\\n  font-size:10px;\\n  text-align: center;\\n  min-width:20px;\\n  max-width:100px;\\n  z-index:2;\\n  position:absolute;\\n  bottom:-25px;\\n}\\n#\").concat(t,\",\\n#\").concat(t,\" ::before,\\n#\").concat(t,\" :::after,\\n#\").concat(t,\" div,\\n#\").concat(t,\" p,\\n#\").concat(t,\" span,\\n#\").concat(t,\" ul,\\n#\").concat(t,\" li {\\n  font-weight: 400;\\n  line-height: 1.9 !important;\\n  color: \").concat(e.color,';\\n  font-family: \"Century Gothic\", CenturyGothic, AppleGothic, sans-serif;\\n  box-sizing:border-box;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n#').concat(t,\" {\\n  line-height: 1.9;\\n  font-size: 12px;\\n  overflow:hidden;\\n  height: calc(100% + \").concat(e[\"controls-position\"],\");\\n  width:100%;\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  color: \").concat(e.color,\";\\n  pointer-events:auto;\\n}\\n\\n#\").concat(t,\" .force-show-controls {\\n  opacity:1 !important;\\n}\\n\\n\").concat(n.theme.includes(\"position-bottom\")?\"\\n    #\".concat(t,\"-controls {\\n      opacity:1 !important;\\n    }\\n    \"):\"#\".concat(t,\":hover #\").concat(t,\"-controls {\\n  opacity:1 !important;\\n}\\n\"),\"\\n\\n#\").concat(t,\":hover {\\n  pointer-events:none;\\n}\\n\\n#\").concat(t,\"-settings-speed-hide {\\n  text-align:right;\\n}\\n\\n#\").concat(t,\" .grad {\\n  pointer-events:none !important;\\n  background-image: linear-gradient(\\n    rgba(0,0,0,00.001),\\n    rgba(0,0,0,00.004),\\n    rgba(0,0,0,00.007),\\n    rgba(0,0,0,00.01),\\n    rgba(0,0,0,0.04),\\n    rgba(0,0,0,0.07),\\n    rgba(0,0,0,0.1),\\n    rgba(0,0,0,0.15),\\n    rgba(0,0,0,0.2),\\n    rgba(0,0,0,0.25),\\n    rgba(0,0,0,0.3),\\n    rgba(0,0,0,0.35),\\n    rgba(0,0,0,0.4),\\n    rgba(0,0,0,0.45),\\n    rgba(0,0,0,0.5),\\n    rgba(0,0,0,0.55),\\n    rgba(0,0,0,0.6),\\n    rgba(0,0,0,0.65),\\n    rgba(0,0,0,0.7),\\n    rgba(0,0,0,0.75),\\n    rgba(0,0,0,0.8),\\n    rgba(0,0,0,0.88)\\n  );\\n  position:absolute;\\n  width:100%;\\n  height:\").concat(e[\"grad-height\"],\";\\n  left:0px;\\n  bottom:0px;\\n  z-index:-1;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-controls {\\n  touch-action: none;\\n  background-color: \").concat(e[\"background-color\"],\";\\n  border: \").concat(e[\"controls-border\"],\";\\n  position: absolute;\\n  bottom: \").concat(e[\"controls-bottom\"],\";\\n  left: 0px;\\n  width: 100%;\\n  z-index:100;\\n  height: 44px;\\n  opacity:0;\\n  display:flex;\\n  border-radius: 6px;\\n  align-items:center;\\n  -webkit-transition: opacity 0.2s ease;\\n  -moz-transition: opacity 0.2s ease;\\n  transition: opacity 0.2s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-totalbar {\\n  width: calc(100% - 20px);\\n  height: 5px;\\n  margin: 0px 10px 0px 10px;\\n  background-color: \").concat(e[\"totalbar-color\"],\";\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-loopbar {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  top: 0px;\\n  left: 0px;\\n  background-color: \").concat(e[\"loopbar-color\"],\";\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-loop-boundaries::before {\\n  \").concat(e[\"loopbar-boundaries-style::before\"],\"\\n\\n}\\n#\").concat(t,\" .\").concat(t,\"-loop-boundaries {\\n  transform:translate(-50%,-37%);\\n  position:absolute;\\n  width:18px;\\n  background-color:\").concat(e[\"loopbar-boundaries-color\"],\";\\n  height:18px;\\n  border-radius:10px;\\n  z-index:40;\\n  \").concat(e[\"loopbar-boundaries-style\"],\"\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-loop-boundaries::after {\\n  \").concat(e[\"loopbar-boundaries-style::after\"],\"\\n\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-helperbar {\\n  position: absolute;\\n  height: 20px;\\n  top: -10px;\\n  left: 0px;\\n  right: 0px;\\n  z-index:2;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-runningbar {\\n  position: relative;\\n  width: 0px;\\n  max-width:100%;\\n  height: 100%;\\n  background-color: \").concat(e[\"runningbar-color\"],\";\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-cursor {\\n  transform:translate(50%,-36%);\\n  right: 0px;\\n  overflow:hidden;\\n  top: 0px;\\n  width: 0px;\\n  height: 0px;\\n  position: absolute;\\n  background-color: \").concat(e[\"cursor-color\"],\";\\n  border-radius: 10px;\\n  z-index: 5;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-cursor::before {\\n  \").concat(e[\"cursor-style::before\"],\"\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-cursor::after {\\n  \").concat(e[\"cursor-style::after\"],\"\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-left-controls,#\").concat(t,\" #\").concat(t,\"-right-controls {\\n    display: flex;\\n    align-items:center;\\n    height: 100%;\\n    padding: 5px 5px 0px;\\n}\\n#\").concat(t,\" #\").concat(t,\"-right-controls {\\n  position:absolute;\\n  right:0px;\\n}\\n\\n\\n#\").concat(t,\" #\").concat(t,\"-left-controls > div,#\").concat(t,\" #\").concat(t,\"-right-controls > div {\\n  display: inline-flex;\\n  align-items:center;\\n  margin:0 10px 0 10px;\\n  overflow:hidden;\\n}\\n\\n\\n#\").concat(t,\" #\").concat(t,\"-time-display span {\\n  display: table-cell;\\n  vertical-align: middle;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-status-btn {\\n  opacity: \").concat(e[\"button-opacity\"],\";\\n}\\n#\").concat(t,\" #\").concat(t,\"-status-btn svg{\\n  width:20px;\\n  height:18px;\\n}\\n#\").concat(t,\" #\").concat(t,\"-volume {\\n  opacity: \").concat(e[\"button-opacity\"],\";\\n  position: relative;\\n}\\n#\").concat(t,\" #\").concat(t,\"-volume-btn {\\n  width: 20px;\\n  height: 15px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volumebar {\\n  width: 0px;\\n  height: 3px;\\n  background-color: \").concat(e[\"loopbar-color\"],\";\\n  -webkit-transition: left 0.1s ease;\\n  -moz-transition: left 0.1s ease;\\n  transition: left 0.1s ease;\\n  position:relative;\\n  left:5px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volumebar-helper {\\n  position: absolute;\\n    width: 0px;\\n    height: 15px;\\n    bottom: 0px;\\n    z-index: 10;\\n    left: 25px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volumebar-active {\\n  position: relative;\\n  width: 0%;\\n  height: 100%;\\n  background-color: \").concat(e.color,\";\\n  position:relative;\\n  bottom:0px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volume-cursor {\\n  transform:translate(50%,-36%);\\n  right: 0px;\\n  top: 0px;\\n  width: 0px;\\n  height: 0px;\\n  position: absolute;\\n  background-color: \").concat(e.color,\";\\n  border-radius: 10px;\\n  z-index: 5;\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-loopbar-time {\\n  width:auto;\\n  height:12px;\\n  background-color:\").concat(e[\"background-color\"],\";\\n  line-height:10px;\\n  font-size:10px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-loop-time {\\n  margin: 7px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-dc-btn {\\n    background-repeat: no-repeat;\\n    background-size: 100% 100%;\\n    width: 20px;\\n    height: 15px;\\n    margin: 7px 10px 5px 0px;\\n    transform: scale(1.5,1.5);\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-loop-btn {\\n  opacity: \").concat(e[\"button-opacity\"],\";\\n  display:flex;\\n  align-items:center;\\n}\\n\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-btn {\\n  overflow:hidden;\\n  opacity: \").concat(e[\"button-opacity\"],\";\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-full-screen-btn {\\n  opacity: \").concat(e[\"button-opacity\"],\";\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-speed-btn {\\n  opacity: \").concat(e[\"button-opacity\"],\";\\n  height: 14px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel {\\n  touch-action: none;\\n  box-sizing: border-box;\\n  position: absolute;\\n  z-index:102;\\n  background-color: \").concat(e[\"settings-background-color\"],\";\\n  bottom: \").concat(e[\"settings-panel-bottom\"],\";\\n  border: \").concat(e.border,\";\\n  right: 8px;\\n  width: 167px;\\n  padding: 5px;\\n  margin: 0px;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-hide {\\n  display:none !important;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-value-bar {\\n  position: relative;\\n  width: 5px;\\n  background-color: \").concat(e[\"speedbar-color\"],\";\\n  display: inline-block;\\n  box-sizing: border-box;\\n  height: \").concat(16*n.speedValues.length,\"px;\\n  float: left;\\n  margin-right:15px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-value-helperbar {\\n  position: absolute;\\n  width: 25px;\\n  height: \").concat(16*n.speedValues.length,\"px;\\n  float: left;\\n  left: 18px;\\n  z-index:10;\\n}\\n\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-value-bar:hover,\\n#\").concat(t,\" #\").concat(t,\"-speed-value-helperbar {\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volumebar:hover,\\n#\").concat(t,\" #\").concat(t,\"-volumebar-helper:hover,\\n#\").concat(t,\" #\").concat(t,\"-volume-btn:hover,\\n#\").concat(t,\" #\").concat(t,\"-volumebar:active,\\n#\").concat(t,\" #\").concat(t,\"-volumebar-helper:active,\\n#\").concat(t,\" #\").concat(t,\"-volume-btn:active {\\n  cursor:pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-cursor {\\n  position: absolute;\\n  background-color: \").concat(e[\"speedbar-cursor-color\"],\";\\n  top: 0px;\\n  left: 0px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-cursor div {\\n  position: absolute;\\n  background-color: \").concat(e[\"speedbar-cursor-color\"],\";\\n  left: -2.5px;\\n  top: -4px;\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 5px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-time-separator{\\n  margin:0 3px;\\n}\\n#\").concat(t,\" #\").concat(t,\"-speed-cursor:hover {\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-speed-value-step {\\n  width: 16px;\\n  background-color: \").concat(e[\"speedbar-color\"],\";\\n  display: inline-block;\\n  box-sizing: border-box;\\n  height: 2px;\\n  margin-top: 7px;\\n  margin-bottom: 7px;\\n  float: left;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-value {\\n  display: inline-block;\\n  box-sizing: border-box;\\n  height: \").concat(16*n.speedValues.length,\"px;\\n  text-align: left;\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-speed-value {\\n  box-sizing: border-box;\\n  height: 16px;\\n  font-size: 12px;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-indicator {\\n  font-size: 8px !important;\\n  position: absolute;\\n  bottom: -3px;\\n  color: \").concat(e.color,\";\\n}\\n\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-settings li.no-hover { \\n  height: \").concat(16*n.speedValues.length+10-2,\"px !important; \\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel.\").concat(t,\"-settings-speed-panel {\\n  overflow: hidden;\\n  width: 92px;\\n  position:absolute;\\n  z-index:120;\\n  /*height: \").concat(16*n.speedValues.length+32+20,\"px;*/\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel.\").concat(t,\"-settings-speed-panel .\").concat(t,\"-speed-btn {\\n  float: left;\\n}\\n\\n#\").concat(t,\" .\").concat(t,\"-settings-speed-panel ul:first-child {\\n  text-align: right;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-speed-current {\\n  float: right;\\n  padding-right: 10px\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel .\").concat(t,\"-speed-btn {\\n  float: right;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel ul {\\n  width: 100%;\\n  margin: 0px;\\n  padding: 0px;\\n  overflow: hidden;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel.\").concat(t,\"-settings-speed-panel ul li {\\n  min-width: 70px;\\n  display: flex;\\n  height: 32px;\\n  align-items: center;\\n  justify-content:center;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel ul li.no-hover:hover {\\n  background-color: transparent;\\n  cursor: default;\\n}\\n\\n#\").concat(t,\" div.\").concat(t,\"-speed-value:hover {\\n  background-color: \").concat(e[\"hover-color\"],\";\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel ul li {\\n  /*position: relative;\\n  width: 100%;\\n  min-width: 154px;*/\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 5px;\\n  display: flex;\\n  height:32px;\\n  align-items:center;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel ul li label {\\n  margin: 0px;\\n}\\n\\n#\").concat(t,\" .switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 32px;\\n  height: 18px;\\n}\\n\\n#\").concat(t,\" .switch input {\\n  display: none;\\n}\\n\\n#\").concat(t,\" .settings-switch {\\n  position: absolute;\\n  right: 24px;\\n}\\n\\n#\").concat(t,\" .settings-switch::after {\\n  clear: both;\\n}\\n\\n#\").concat(t,\" .slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: \").concat(e[\"slider-off-color\"],\";\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n}\\n\\n#\").concat(t,' .slider:before {\\n  position: absolute;\\n  content: \"\";\\n  height: 16px;\\n  width: 16px;\\n  left: 1px;\\n  bottom: 1px;\\n  background-color: white;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n}\\n\\n#').concat(t,\" input:checked+.slider {\\n  background-color: \").concat(e[\"slider-on-color\"],\";\\n}\\n\\n#\").concat(t,\" input:focus+.slider {\\n  box-shadow: 0 0 1px \").concat(e[\"slider-on-color\"],\";\\n}\\n\\n#\").concat(t,\" input:checked+.slider:before {\\n  -webkit-transform: translateX(16px);\\n  -ms-transform: translateX(16px);\\n  transform: translateX(16px);\\n}\\n\\n\\n/* Rounded sliders */\\n\\n#\").concat(t,\" .slider.round {\\n  border-radius: 34px;\\n}\\n\\n#\").concat(t,\" .slider.round:before {\\n  border-radius: 50%;\\n}\\n\\n\\n#\").concat(t,\" .m-fadeOut {\\n  visibility: hidden !important;\\n  opacity: 0 !important;\\n}\\n\\n#\").concat(t,\" .m-fadeIn {\\n  visibility: visible !important;\\n  opacity: 1 !important;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel ul li:hover {\\n  background-color: \").concat(e[\"hover-color\"],\";\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-panel ul li label:hover {\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-loopbar:hover {\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-status-btn:hover {\\n  cursor: pointer;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-controls:active #\").concat(t,\"-cursor,\\n#\").concat(t,\" #\").concat(t,\"-controls:hover #\").concat(t,\"-cursor  {\\n  width: 16px;\\n  height: 16px;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volume .\").concat(t,\"-volume-cursor-transition {\\n  width: 12px;\\n  height: 12px;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-volume .\").concat(t,\"-volume-width-transition\\n {\\n  width: 50px;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-time-display.\").concat(t,\"-time-width-transition {\\n  position:relative;\\n  left: 10px;\\n  -webkit-transition: left 0.3s ease;\\n  -moz-transition: left 0.3s ease;\\n  transition: left 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-settings-speed:hover .\").concat(t,\"-speed-btn {\\n  opacity: 1;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-status-btn:hover {\\n  opacity: 1;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-loop-btn:hover,\\n#\").concat(t,\" #\").concat(t,\"-dc-btn:hover\\n {\\n  cursor: pointer;\\n  opacity: 1;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n#\").concat(t,\" #\").concat(t,\"-settings-btn:hover {\\n  cursor: pointer;\\n  opacity: 1;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\\n#\").concat(t,\" #\").concat(t,\"-full-screen-btn:hover {\\n  cursor: pointer;\\n  opacity: 1;\\n  -webkit-transition: all 0.3s ease;\\n  -moz-transition: all 0.3s ease;\\n  transition: all 0.3s ease;\\n}\\n\").concat(e[\"theme-style\"],\"\\n\")}(e,this.name,this.options),i=pe(\"style\");i.id=this.name+\"-style\",i.styleSheet?i.styleSheet.cssText=s:i.appendChild(document.createTextNode(s)),ce(\"head\")[0].appendChild(i),this.eventBroadcast(\"theme-change\",this.options.theme)}},{key:\"setSpeed\",value:function(){var e,t=this;e=1==this.clip.speed?\"Normal\":this.clip.speed,this.elements.speedCurrent.innerHTML=e;var n=-1*(function(){for(var e=0;e<t.options.speedValues.length-1;e++)if(t.options.speedValues[e]<=t.clip.speed&&t.options.speedValues[e+1]>t.clip.speed)return e+Math.abs((t.clip.speed-t.options.speedValues[e])/(t.options.speedValues[e]-t.options.speedValues[e+1]))}()*(1/(this.options.speedValues.length-1))-1)*(this.options.speedValues.length-1)*16;re(\"\".concat(this.name,\"-speed-cursor\")).style.top=n+\"px\"}},{key:\"calculateSpeed\",value:function(e,t,n){var o=Math.floor(n/e);if(o===t.length-1)return t[o].toFixed(1);var s=(n/e%1*Math.abs(t[o]-t[o+1])+t[o]).toFixed(1);return 0==s?\"0.0\":s}},{key:\"createPreviewDisplay\",value:function(){this.previewClip=this.clip.paste(re(\"\".concat(this.name,\"-hover-display-clip\")));var e=re(\"\".concat(this.name,\"-hover-display\"));window.previewClip=this.previewClip,e.style.position=\"absolute\",e.style.background=this.options.backgroundColor,e.style.zIndex=1,this.setPreviewDimentions()}},{key:\"setPreviewDimentions\",value:function(){var e=this.clip.props.host,t=this.previewClip.ownClip.props.host,n=e.offsetWidth,o=e.offsetHeight,s=n*this.previewScale;s>300&&(s=300,this.previewScale=s/n);var i=n*this.previewScale,a=o*this.previewScale,l=de({width:this.clip.props.containerParams.width,height:this.clip.props.containerParams.height},{width:i,height:a},\"cover\"===this.options.scaleToFit);this.previewClip.ownClip.rootElement.style.transform=\"scale(\".concat(l.scale),this.previewClip.ownClip.rootElement.style.left=l.position.left+\"px\",this.previewClip.ownClip.rootElement.style.top=l.position.top+\"px\",re(\"\".concat(this.name,\"-hover-display\")).style.width=i+\"px\",re(\"\".concat(this.name,\"-hover-display\")).style.height=a+\"px\",t.style.boxSizing=\"border-box\"}}])&&s(t.prototype,n),o&&s(t,o),e}()}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@kissmybutton/motorcortex-player/dist/motorcortex-player.umd.js\n");

/***/ }),

/***/ "../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!(function (t, e) {\n   true\n    ? e(exports, __webpack_require__(/*! fs */ \"../node_modules/node-libs-browser/mock/empty.js\"), __webpack_require__(/*! path */ \"../node_modules/path-browserify/index.js\"))\n    : undefined;\n})(this, function (t, e, n) {\n  'use strict';\n  function i(t) {\n    return t && 'object' == typeof t && 'default' in t ? t : { default: t };\n  }\n  var r = i(e),\n    s = i(n);\n  function a(t) {\n    return (a =\n      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator\n        ? function (t) {\n            return typeof t;\n          }\n        : function (t) {\n            return t &&\n              'function' == typeof Symbol &&\n              t.constructor === Symbol &&\n              t !== Symbol.prototype\n              ? 'symbol'\n              : typeof t;\n          })(t);\n  }\n  function o(t, e) {\n    if (!(t instanceof e))\n      throw new TypeError('Cannot call a class as a function');\n  }\n  function u(t, e) {\n    for (var n = 0; n < e.length; n++) {\n      var i = e[n];\n      (i.enumerable = i.enumerable || !1),\n        (i.configurable = !0),\n        'value' in i && (i.writable = !0),\n        Object.defineProperty(t, i.key, i);\n    }\n  }\n  function l(t, e, n) {\n    return e && u(t.prototype, e), n && u(t, n), t;\n  }\n  function c(t, e, n) {\n    return (\n      e in t\n        ? Object.defineProperty(t, e, {\n            value: n,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0,\n          })\n        : (t[e] = n),\n      t\n    );\n  }\n  function h(t, e) {\n    var n = Object.keys(t);\n    if (Object.getOwnPropertySymbols) {\n      var i = Object.getOwnPropertySymbols(t);\n      e &&\n        (i = i.filter(function (e) {\n          return Object.getOwnPropertyDescriptor(t, e).enumerable;\n        })),\n        n.push.apply(n, i);\n    }\n    return n;\n  }\n  function p(t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = null != arguments[e] ? arguments[e] : {};\n      e % 2\n        ? h(Object(n), !0).forEach(function (e) {\n            c(t, e, n[e]);\n          })\n        : Object.getOwnPropertyDescriptors\n        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))\n        : h(Object(n)).forEach(function (e) {\n            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));\n          });\n    }\n    return t;\n  }\n  function d(t, e) {\n    if ('function' != typeof e && null !== e)\n      throw new TypeError('Super expression must either be null or a function');\n    (t.prototype = Object.create(e && e.prototype, {\n      constructor: { value: t, writable: !0, configurable: !0 },\n    })),\n      e && m(t, e);\n  }\n  function f(t) {\n    return (f = Object.setPrototypeOf\n      ? Object.getPrototypeOf\n      : function (t) {\n          return t.__proto__ || Object.getPrototypeOf(t);\n        })(t);\n  }\n  function m(t, e) {\n    return (m =\n      Object.setPrototypeOf ||\n      function (t, e) {\n        return (t.__proto__ = e), t;\n      })(t, e);\n  }\n  function v(t) {\n    if (void 0 === t)\n      throw new ReferenceError(\n        \"this hasn't been initialised - super() hasn't been called\",\n      );\n    return t;\n  }\n  function y(t, e) {\n    return !e || ('object' != typeof e && 'function' != typeof e) ? v(t) : e;\n  }\n  function g(t) {\n    var e = (function () {\n      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;\n      if (Reflect.construct.sham) return !1;\n      if ('function' == typeof Proxy) return !0;\n      try {\n        return (\n          Boolean.prototype.valueOf.call(\n            Reflect.construct(Boolean, [], function () {}),\n          ),\n          !0\n        );\n      } catch (t) {\n        return !1;\n      }\n    })();\n    return function () {\n      var n,\n        i = f(t);\n      if (e) {\n        var r = f(this).constructor;\n        n = Reflect.construct(i, arguments, r);\n      } else n = i.apply(this, arguments);\n      return y(this, n);\n    };\n  }\n  function b(t, e) {\n    for (\n      ;\n      !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = f(t));\n\n    );\n    return t;\n  }\n  function k(t, e, n) {\n    return (k =\n      'undefined' != typeof Reflect && Reflect.get\n        ? Reflect.get\n        : function (t, e, n) {\n            var i = b(t, e);\n            if (i) {\n              var r = Object.getOwnPropertyDescriptor(i, e);\n              return r.get ? r.get.call(n) : r.value;\n            }\n          })(t, e, n || t);\n  }\n  function x(t, e, n, i) {\n    return (x =\n      'undefined' != typeof Reflect && Reflect.set\n        ? Reflect.set\n        : function (t, e, n, i) {\n            var r,\n              s = b(t, e);\n            if (s) {\n              if ((r = Object.getOwnPropertyDescriptor(s, e)).set)\n                return r.set.call(i, n), !0;\n              if (!r.writable) return !1;\n            }\n            if ((r = Object.getOwnPropertyDescriptor(i, e))) {\n              if (!r.writable) return !1;\n              (r.value = n), Object.defineProperty(i, e, r);\n            } else c(i, e, n);\n            return !0;\n          })(t, e, n, i);\n  }\n  function w(t, e, n, i, r) {\n    if (!x(t, e, n, i || t) && r) throw new Error('failed to set property');\n    return n;\n  }\n  function C(t, e) {\n    return (\n      I(t) ||\n      (function (t, e) {\n        if ('undefined' == typeof Symbol || !(Symbol.iterator in Object(t)))\n          return;\n        var n = [],\n          i = !0,\n          r = !1,\n          s = void 0;\n        try {\n          for (\n            var a, o = t[Symbol.iterator]();\n            !(i = (a = o.next()).done) &&\n            (n.push(a.value), !e || n.length !== e);\n            i = !0\n          );\n        } catch (t) {\n          (r = !0), (s = t);\n        } finally {\n          try {\n            i || null == o.return || o.return();\n          } finally {\n            if (r) throw s;\n          }\n        }\n        return n;\n      })(t, e) ||\n      E(t, e) ||\n      _()\n    );\n  }\n  function O(t) {\n    return (\n      (function (t) {\n        if (Array.isArray(t)) return A(t);\n      })(t) ||\n      P(t) ||\n      E(t) ||\n      (function () {\n        throw new TypeError(\n          'Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',\n        );\n      })()\n    );\n  }\n  function I(t) {\n    if (Array.isArray(t)) return t;\n  }\n  function P(t) {\n    if ('undefined' != typeof Symbol && Symbol.iterator in Object(t))\n      return Array.from(t);\n  }\n  function E(t, e) {\n    if (t) {\n      if ('string' == typeof t) return A(t, e);\n      var n = Object.prototype.toString.call(t).slice(8, -1);\n      return (\n        'Object' === n && t.constructor && (n = t.constructor.name),\n        'Map' === n || 'Set' === n\n          ? Array.from(t)\n          : 'Arguments' === n ||\n            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)\n          ? A(t, e)\n          : void 0\n      );\n    }\n  }\n  function A(t, e) {\n    (null == e || e > t.length) && (e = t.length);\n    for (var n = 0, i = new Array(e); n < e; n++) i[n] = t[n];\n    return i;\n  }\n  function _() {\n    throw new TypeError(\n      'Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',\n    );\n  }\n  function T(t) {\n    var e = (function (t, e) {\n      if ('object' != typeof t || null === t) return t;\n      var n = t[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var i = n.call(t, e || 'default');\n        if ('object' != typeof i) return i;\n        throw new TypeError('@@toPrimitive must return a primitive value.');\n      }\n      return ('string' === e ? String : Number)(t);\n    })(t, 'string');\n    return 'symbol' == typeof e ? e : String(e);\n  }\n  function D(t, e, n, i) {\n    var r = M();\n    if (i) for (var s = 0; s < i.length; s++) r = i[s](r);\n    var a = e(function (t) {\n        r.initializeInstanceElements(t, o.elements);\n      }, n),\n      o = r.decorateClass(\n        (function (t) {\n          for (\n            var e = [],\n              n = function (t) {\n                return (\n                  'method' === t.kind &&\n                  t.key === s.key &&\n                  t.placement === s.placement\n                );\n              },\n              i = 0;\n            i < t.length;\n            i++\n          ) {\n            var r,\n              s = t[i];\n            if ('method' === s.kind && (r = e.find(n)))\n              if (N(s.descriptor) || N(r.descriptor)) {\n                if (V(s) || V(r))\n                  throw new ReferenceError(\n                    'Duplicated methods (' + s.key + \") can't be decorated.\",\n                  );\n                r.descriptor = s.descriptor;\n              } else {\n                if (V(s)) {\n                  if (V(r))\n                    throw new ReferenceError(\n                      \"Decorators can't be placed on different accessors with for the same property (\" +\n                        s.key +\n                        ').',\n                    );\n                  r.decorators = s.decorators;\n                }\n                j(s, r);\n              }\n            else e.push(s);\n          }\n          return e;\n        })(a.d.map(S)),\n        t,\n      );\n    return (\n      r.initializeClassElements(a.F, o.elements),\n      r.runClassFinishers(a.F, o.finishers)\n    );\n  }\n  function M() {\n    M = function () {\n      return t;\n    };\n    var t = {\n      elementsDefinitionOrder: [['method'], ['field']],\n      initializeInstanceElements: function (t, e) {\n        ['method', 'field'].forEach(function (n) {\n          e.forEach(function (e) {\n            e.kind === n &&\n              'own' === e.placement &&\n              this.defineClassElement(t, e);\n          }, this);\n        }, this);\n      },\n      initializeClassElements: function (t, e) {\n        var n = t.prototype;\n        ['method', 'field'].forEach(function (i) {\n          e.forEach(function (e) {\n            var r = e.placement;\n            if (e.kind === i && ('static' === r || 'prototype' === r)) {\n              var s = 'static' === r ? t : n;\n              this.defineClassElement(s, e);\n            }\n          }, this);\n        }, this);\n      },\n      defineClassElement: function (t, e) {\n        var n = e.descriptor;\n        if ('field' === e.kind) {\n          var i = e.initializer;\n          n = {\n            enumerable: n.enumerable,\n            writable: n.writable,\n            configurable: n.configurable,\n            value: void 0 === i ? void 0 : i.call(t),\n          };\n        }\n        Object.defineProperty(t, e.key, n);\n      },\n      decorateClass: function (t, e) {\n        var n = [],\n          i = [],\n          r = { static: [], prototype: [], own: [] };\n        if (\n          (t.forEach(function (t) {\n            this.addElementPlacement(t, r);\n          }, this),\n          t.forEach(function (t) {\n            if (!V(t)) return n.push(t);\n            var e = this.decorateElement(t, r);\n            n.push(e.element),\n              n.push.apply(n, e.extras),\n              i.push.apply(i, e.finishers);\n          }, this),\n          !e)\n        )\n          return { elements: n, finishers: i };\n        var s = this.decorateConstructor(n, e);\n        return i.push.apply(i, s.finishers), (s.finishers = i), s;\n      },\n      addElementPlacement: function (t, e, n) {\n        var i = e[t.placement];\n        if (!n && -1 !== i.indexOf(t.key))\n          throw new TypeError('Duplicated element (' + t.key + ')');\n        i.push(t.key);\n      },\n      decorateElement: function (t, e) {\n        for (\n          var n = [], i = [], r = t.decorators, s = r.length - 1;\n          s >= 0;\n          s--\n        ) {\n          var a = e[t.placement];\n          a.splice(a.indexOf(t.key), 1);\n          var o = this.fromElementDescriptor(t),\n            u = this.toElementFinisherExtras((0, r[s])(o) || o);\n          (t = u.element),\n            this.addElementPlacement(t, e),\n            u.finisher && i.push(u.finisher);\n          var l = u.extras;\n          if (l) {\n            for (var c = 0; c < l.length; c++)\n              this.addElementPlacement(l[c], e);\n            n.push.apply(n, l);\n          }\n        }\n        return { element: t, finishers: i, extras: n };\n      },\n      decorateConstructor: function (t, e) {\n        for (var n = [], i = e.length - 1; i >= 0; i--) {\n          var r = this.fromClassDescriptor(t),\n            s = this.toClassDescriptor((0, e[i])(r) || r);\n          if (\n            (void 0 !== s.finisher && n.push(s.finisher), void 0 !== s.elements)\n          ) {\n            t = s.elements;\n            for (var a = 0; a < t.length - 1; a++)\n              for (var o = a + 1; o < t.length; o++)\n                if (t[a].key === t[o].key && t[a].placement === t[o].placement)\n                  throw new TypeError('Duplicated element (' + t[a].key + ')');\n          }\n        }\n        return { elements: t, finishers: n };\n      },\n      fromElementDescriptor: function (t) {\n        var e = {\n          kind: t.kind,\n          key: t.key,\n          placement: t.placement,\n          descriptor: t.descriptor,\n        };\n        return (\n          Object.defineProperty(e, Symbol.toStringTag, {\n            value: 'Descriptor',\n            configurable: !0,\n          }),\n          'field' === t.kind && (e.initializer = t.initializer),\n          e\n        );\n      },\n      toElementDescriptors: function (t) {\n        var e;\n        if (void 0 !== t)\n          return ((e = t), I(e) || P(e) || E(e) || _()).map(function (t) {\n            var e = this.toElementDescriptor(t);\n            return (\n              this.disallowProperty(t, 'finisher', 'An element descriptor'),\n              this.disallowProperty(t, 'extras', 'An element descriptor'),\n              e\n            );\n          }, this);\n      },\n      toElementDescriptor: function (t) {\n        var e = String(t.kind);\n        if ('method' !== e && 'field' !== e)\n          throw new TypeError(\n            'An element descriptor\\'s .kind property must be either \"method\" or \"field\", but a decorator created an element descriptor with .kind \"' +\n              e +\n              '\"',\n          );\n        var n = T(t.key),\n          i = String(t.placement);\n        if ('static' !== i && 'prototype' !== i && 'own' !== i)\n          throw new TypeError(\n            'An element descriptor\\'s .placement property must be one of \"static\", \"prototype\" or \"own\", but a decorator created an element descriptor with .placement \"' +\n              i +\n              '\"',\n          );\n        var r = t.descriptor;\n        this.disallowProperty(t, 'elements', 'An element descriptor');\n        var s = {\n          kind: e,\n          key: n,\n          placement: i,\n          descriptor: Object.assign({}, r),\n        };\n        return (\n          'field' !== e\n            ? this.disallowProperty(t, 'initializer', 'A method descriptor')\n            : (this.disallowProperty(\n                r,\n                'get',\n                'The property descriptor of a field descriptor',\n              ),\n              this.disallowProperty(\n                r,\n                'set',\n                'The property descriptor of a field descriptor',\n              ),\n              this.disallowProperty(\n                r,\n                'value',\n                'The property descriptor of a field descriptor',\n              ),\n              (s.initializer = t.initializer)),\n          s\n        );\n      },\n      toElementFinisherExtras: function (t) {\n        return {\n          element: this.toElementDescriptor(t),\n          finisher: $(t, 'finisher'),\n          extras: this.toElementDescriptors(t.extras),\n        };\n      },\n      fromClassDescriptor: function (t) {\n        var e = {\n          kind: 'class',\n          elements: t.map(this.fromElementDescriptor, this),\n        };\n        return (\n          Object.defineProperty(e, Symbol.toStringTag, {\n            value: 'Descriptor',\n            configurable: !0,\n          }),\n          e\n        );\n      },\n      toClassDescriptor: function (t) {\n        var e = String(t.kind);\n        if ('class' !== e)\n          throw new TypeError(\n            'A class descriptor\\'s .kind property must be \"class\", but a decorator created a class descriptor with .kind \"' +\n              e +\n              '\"',\n          );\n        this.disallowProperty(t, 'key', 'A class descriptor'),\n          this.disallowProperty(t, 'placement', 'A class descriptor'),\n          this.disallowProperty(t, 'descriptor', 'A class descriptor'),\n          this.disallowProperty(t, 'initializer', 'A class descriptor'),\n          this.disallowProperty(t, 'extras', 'A class descriptor');\n        var n = $(t, 'finisher');\n        return { elements: this.toElementDescriptors(t.elements), finisher: n };\n      },\n      runClassFinishers: function (t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var i = (0, e[n])(t);\n          if (void 0 !== i) {\n            if ('function' != typeof i)\n              throw new TypeError('Finishers must return a constructor.');\n            t = i;\n          }\n        }\n        return t;\n      },\n      disallowProperty: function (t, e, n) {\n        if (void 0 !== t[e])\n          throw new TypeError(n + \" can't have a .\" + e + ' property.');\n      },\n    };\n    return t;\n  }\n  function S(t) {\n    var e,\n      n = T(t.key);\n    'method' === t.kind\n      ? (e = { value: t.value, writable: !0, configurable: !0, enumerable: !1 })\n      : 'get' === t.kind\n      ? (e = { get: t.value, configurable: !0, enumerable: !1 })\n      : 'set' === t.kind\n      ? (e = { set: t.value, configurable: !0, enumerable: !1 })\n      : 'field' === t.kind &&\n        (e = { configurable: !0, writable: !0, enumerable: !0 });\n    var i = {\n      kind: 'field' === t.kind ? 'field' : 'method',\n      key: n,\n      placement: t.static ? 'static' : 'field' === t.kind ? 'own' : 'prototype',\n      descriptor: e,\n    };\n    return (\n      t.decorators && (i.decorators = t.decorators),\n      'field' === t.kind && (i.initializer = t.value),\n      i\n    );\n  }\n  function j(t, e) {\n    void 0 !== t.descriptor.get\n      ? (e.descriptor.get = t.descriptor.get)\n      : (e.descriptor.set = t.descriptor.set);\n  }\n  function V(t) {\n    return t.decorators && t.decorators.length;\n  }\n  function N(t) {\n    return void 0 !== t && !(void 0 === t.value && void 0 === t.writable);\n  }\n  function $(t, e) {\n    var n = t[e];\n    if (void 0 !== n && 'function' != typeof n)\n      throw new TypeError(\"Expected '\" + e + \"' to be a function\");\n    return n;\n  }\n  var B = [\n      { key: 'info', style: 'color: #666;', level: 5, consoleMethod: 'log' },\n      {\n        key: 'notice',\n        style: 'background: rgba(0, 0, 0, 0.8); color:white; padding:8px;',\n        level: 4,\n        consoleMethod: 'log',\n      },\n      {\n        key: 'warning',\n        style: 'color: black; background: orange;',\n        level: 2,\n        consoleMethod: 'warn',\n      },\n      {\n        key: 'error',\n        style: 'color: black; background: red;',\n        level: 1,\n        consoleMethod: 'error',\n      },\n    ],\n    L = 'data-motorcortex2-id',\n    R = 'closed',\n    F = 'MotorCortex',\n    z = 2,\n    G = {\n      staggerPreface: '@stagger',\n      mathExpPreface: '@expression',\n      attibuteValue: '@attribute',\n      patternValue: '@pattern',\n      dynamicDuration: 'dynamic',\n      totalElements: 'total',\n      elementIndex: 'index',\n      initParams: 'initParams',\n    };\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  var q = new window.AudioContext();\n  function K(t) {\n    return 'number' == typeof t && isFinite(t);\n  }\n  function J(t) {\n    return !isNaN(parseFloat(t)) && isFinite(t);\n  }\n  function W(t) {\n    return 'string' == typeof t || t instanceof String;\n  }\n  function H(t) {\n    return 'object' === a(t);\n  }\n  function U(t) {\n    return t && '[object Function]' === {}.toString.call(t);\n  }\n  function Q(t) {\n    return t.charAt(0).toUpperCase() + t.slice(1);\n  }\n  var X = new RegExp('^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)', 'gi');\n  function Z(t) {\n    if (null === t && void 0 === t)\n      return { result: !0, analysis: { width: null, height: null } };\n    if (!H(t))\n      return {\n        result: !1,\n        errors: [\n          'originalDims should be an object containing the \"width\" and \"height\" keys',\n        ],\n      };\n    if (\n      !Object.prototype.hasOwnProperty.call(t, 'width') ||\n      !Object.prototype.hasOwnProperty.call(t, 'height')\n    )\n      return {\n        result: !1,\n        errors: [\n          'originalDims should be an object containing both the \"width\" and \"height\" keys',\n        ],\n      };\n    if (!W(t.width))\n      return {\n        result: !1,\n        errors: ['originalDims.width should be defined either on px or %.'],\n      };\n    if (!W(t.height))\n      return {\n        result: !1,\n        errors: ['originalDims.height should be defined either on px or %.'],\n      };\n    var e = t.width.match(X)[0],\n      n = t.width.substring(e.length);\n    if (!K(Number(e)) || ('%' !== n && 'px' !== n))\n      return {\n        result: !1,\n        errors: ['originalDims.width should be defined either on px or %.'],\n      };\n    var i = t.height.match(X)[0],\n      r = t.height.substring(i.length);\n    return !K(Number(i)) || ('%' != r && 'px' != r)\n      ? {\n          result: !1,\n          errors: ['originalDims.heigth should be defined either on px or %.'],\n        }\n      : { result: !0, analysis: Y(t) };\n  }\n  function Y(t) {\n    var e = null,\n      n = null;\n    if (H(t) && null != t) {\n      if (Object.prototype.hasOwnProperty.call(t, 'width') && W(t.width)) {\n        var i = t.width.match(X)[0],\n          r = t.width.substring(i.length);\n        !K(Number(i)) ||\n          ('%' !== r && 'px' !== r) ||\n          (e = { number: Number(i), unit: r });\n      }\n      if (Object.prototype.hasOwnProperty.call(t, 'height') && W(t.height)) {\n        var s = t.height.match(X)[0],\n          a = t.height.substring(s.length);\n        !K(Number(s)) ||\n          ('%' !== a && 'px' !== a) ||\n          (n = { number: Number(s), unit: a });\n      }\n    }\n    return { width: e, height: n };\n  }\n  function tt(t) {\n    var e = t.replace(/ /g, '');\n    return /.*\\((.*)\\).*/.exec(e)[1].split(',');\n  }\n  function et(t, e) {\n    return Math.round(t / e) * e;\n  }\n  function nt(t) {\n    var e = t.split('___');\n    return { mcid: e[0], attribute: e[1] };\n  }\n  function it() {\n    return Math.floor(65536 * (1 + Math.random()))\n      .toString(16)\n      .substring(1);\n  }\n  function rt() {\n    var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n      e = t ? '_' : '-';\n    return ''\n      .concat(it())\n      .concat(it())\n      .concat(e)\n      .concat(it())\n      .concat(e)\n      .concat(it());\n  }\n  function st(t, e) {\n    return ''.concat(t).concat('___').concat(e);\n  }\n  function at(t, e, n) {\n    for (var i = e.split('.'), r = t, s = 0; s < i.length - 1; s++) {\n      if (!Object.prototype.hasOwnProperty.call(r, i[s])) return !1;\n      r = r[i[s]];\n    }\n    return (\n      !!Object.prototype.hasOwnProperty.call(r, i[i.length - 1]) &&\n      ((r[i[i.length - 1]] = n), !0)\n    );\n  }\n  var ot = new ((function () {\n    function t(e) {\n      o(this, t);\n      var n = z;\n      e &&\n        Object.prototype.hasOwnProperty.call(e, 'logLevel') &&\n        (n = e.logLevel);\n      for (var i = 0; i < B.length; i++) {\n        var r = B[i];\n        n >= r.level\n          ? (this[r.key] = window.console[r.consoleMethod].bind(\n              window.console,\n              'MotorCortex - '.concat(r.key, ': '),\n            ))\n          : (this[r.key] = function () {});\n      }\n      this.log =\n        n >= 3\n          ? window.console.log.bind(window.console, 'MotorCortex - ')\n          : function () {};\n    }\n    return (\n      l(t, [\n        {\n          key: 'validateProps',\n          value: function (t, e, n) {\n            var i = e(t);\n            if (i.length > 0) {\n              for (\n                var r = 'Error on plugin\\'s \"'\n                    .concat(n.plugin_npm_name, '\" \"')\n                    .concat(n.ClassName, '\" instantiation. Errors (op props):'),\n                  s = 0;\n                s < i.length;\n                s++\n              )\n                r += '\\n - '\n                  .concat(i[s].message, '. ')\n                  .concat(i[s].actual, ' provided');\n              return this.error(r), { result: !1, errors: i };\n            }\n            return { result: !0 };\n          },\n        },\n        {\n          key: 'getElementByMCID',\n          value: function (t, e) {\n            return t.rootElement.querySelectorAll(\n              '['.concat(L, '=\"').concat(e, '\"]'),\n            )[0];\n          },\n        },\n        {\n          key: 'buildInitialValuesValidationRules',\n          value: function (t) {\n            var e = JSON.parse(JSON.stringify(t));\n            return (\n              (function t(e) {\n                if (\n                  (('string' == typeof e || e instanceof String) &&\n                    (e = { type: e }),\n                  (e.optional = !0),\n                  'object' === e.type)\n                )\n                  for (var n in e.props) t(e.props[n]);\n              })(e),\n              e\n            );\n          },\n        },\n        {\n          key: 'systoleDiastoleProjections',\n          value: function (t, e, n) {\n            for (var i = [], r = 0; r < t.length; r++) {\n              var s = t[r],\n                a = s.parentMillisecond - n;\n              (a = a * e + n),\n                1 !== e &&\n                  i.push({\n                    id: s.incident.id,\n                    start: a,\n                    end: a + s.incident.duration * e,\n                    startDelta: a - s.millisecond,\n                  });\n            }\n            return i;\n          },\n        },\n      ]),\n      t\n    );\n  })())();\n  function ut(t) {\n    return t.result\n      ? { result: !0, execute: t.execute }\n      : { result: !1, errors: t.errors };\n  }\n  var lt = (function () {\n    function t(e) {\n      o(this, t),\n        (this.runTimeInfo = e.runTimeInfo),\n        (this.context = e.context),\n        this.onInitialise(),\n        (this.getIncidentById = e.getIncidentById);\n    }\n    return (\n      l(\n        t,\n        [\n          { key: 'onInitialise', value: function () {} },\n          {\n            key: '_resize',\n            value: function () {\n              ot.log('Please overwite the _resize method of the Channel');\n            },\n          },\n          {\n            key: 'addIncidents',\n            value: function (t) {\n              return ut(this.checkAddition(t));\n            },\n          },\n          {\n            key: 'editIncidents',\n            value: function (t, e) {\n              return ut(this.checkEdit(t, e));\n            },\n          },\n          {\n            key: 'removeIncidents',\n            value: function (t) {\n              var e =\n                arguments.length > 1 && void 0 !== arguments[1]\n                  ? arguments[1]\n                  : {};\n              return ut(this.checkDelete(t, e));\n            },\n          },\n          { key: 'recalcScratchValues', value: function (t) {} },\n          {\n            key: 'checkAddition',\n            value: function (t) {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'checkEdit',\n            value: function (t, e) {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'checkDelete',\n            value: function (t) {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'checkResizedIncidents',\n            value: function (t) {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          { key: 'moveTo', value: function (t, e, n) {} },\n        ],\n        [\n          {\n            key: 'type',\n            get: function () {\n              return 'plain';\n            },\n          },\n        ],\n      ),\n      t\n    );\n  })();\n  function ct(t) {\n    t.descriptor.value = function (t) {\n      this.duration *= t;\n    };\n  }\n  var ht = 'up',\n    pt = 'down',\n    dt = 'native.tree.bypass',\n    ft = D(null, function (t) {\n      return {\n        F: function e() {\n          var n =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n          o(this, e),\n            t(this),\n            (this.parentNode = null),\n            (this.isNode = !1),\n            Object.prototype.hasOwnProperty.call(n, 'id')\n              ? (this.id = n.id)\n              : (this.id = rt()),\n            (this.props = n);\n        },\n        d: [\n          {\n            kind: 'get',\n            key: 'name',\n            value: function () {\n              return Object.prototype.hasOwnProperty.call(this.props, 'name')\n                ? this.props.name\n                : null;\n            },\n          },\n          {\n            kind: 'set',\n            key: 'name',\n            value: function (t) {\n              this.props.name = t;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'delay',\n            value: function () {\n              return Object.prototype.hasOwnProperty.call(this.props, 'delay')\n                ? this.props.delay\n                : 0;\n            },\n          },\n          {\n            kind: 'set',\n            key: 'delay',\n            value: function (t) {\n              0 !== t && (this.props.delay = t);\n            },\n          },\n          {\n            kind: 'get',\n            key: 'hiatus',\n            value: function () {\n              return Object.prototype.hasOwnProperty.call(this.props, 'hiatus')\n                ? this.props.hiatus\n                : 0;\n            },\n          },\n          {\n            kind: 'set',\n            key: 'hiatus',\n            value: function (t) {\n              0 !== t && (this.props.hiatus = t);\n            },\n          },\n          {\n            kind: 'get',\n            key: 'repeats',\n            value: function () {\n              return Object.prototype.hasOwnProperty.call(this.props, 'repeats')\n                ? this.props.repeats\n                : 1;\n            },\n          },\n          {\n            kind: 'set',\n            key: 'repeats',\n            value: function (t) {\n              this.props.repeats = t;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'duration',\n            value: function () {\n              return (\n                this.repeats * (this.delay + this.props.duration + this.hiatus)\n              );\n            },\n          },\n          {\n            kind: 'set',\n            key: 'duration',\n            value: function (t) {\n              var e = t / this.duration;\n              (this.props.duration *= e), (this.hiatus *= e), (this.delay *= e);\n            },\n          },\n          {\n            kind: 'method',\n            key: 'setNewDuration',\n            value: function (t) {\n              (this.duration = t),\n                this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                  selfExecute: !1,\n                  direction: ht,\n                });\n            },\n          },\n          {\n            kind: 'method',\n            decorators: [ct],\n            key: 'systoleDiastole',\n            value: function () {},\n          },\n          {\n            kind: 'get',\n            key: 'hasParent',\n            value: function () {\n              return null !== this.parentNode;\n            },\n          },\n          {\n            kind: 'method',\n            key: 'attachToNode',\n            value: function (t) {\n              this.parentNode = t;\n            },\n          },\n          {\n            kind: 'method',\n            key: 'detachFromParent',\n            value: function () {\n              this.parentNode = null;\n            },\n          },\n          {\n            kind: 'method',\n            key: 'putMessageOnPipe',\n            value: function (t, e, n) {\n              var i =\n                arguments.length > 3 && void 0 !== arguments[3]\n                  ? arguments[3]\n                  : {};\n              if (\n                (Object.prototype.hasOwnProperty.call(i, 'direction') ||\n                  (i.direction = pt),\n                i.direction !== pt ||\n                  Object.prototype.hasOwnProperty.call(i, 'positionDelta') ||\n                  (i.positionDelta = 0),\n                i.selfExecute)\n              ) {\n                var r = 'handle'.concat(Q(t)),\n                  s = 'function' == typeof this[r];\n                if (s) {\n                  var a = this[r](n, e);\n                  if (a !== dt) {\n                    var o = { response: a, responder: this };\n                    return i.direction === ht\n                      ? o\n                      : [p(p({}, o), {}, { positionDelta: i.positionDelta })];\n                  }\n                }\n              }\n              return i.direction === ht\n                ? this.hasParent\n                  ? this.parentNode.putMessageOnPipe(t, e, n, {\n                      selfExecute: !0,\n                      direction: ht,\n                    })\n                  : { response: !1, responder: null }\n                : [];\n            },\n          },\n          {\n            kind: 'method',\n            key: 'bypass',\n            value: function () {\n              return dt;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'positionOnPyramidion',\n            value: function () {\n              return this.getPositionOnPyramidion();\n            },\n          },\n          {\n            kind: 'method',\n            key: 'getPositionOnPyramidion',\n            value: function () {\n              var t =\n                arguments.length > 0 && void 0 !== arguments[0]\n                  ? arguments[0]\n                  : 0;\n              if (this.hasParent) {\n                var e = this.putMessageOnPipe(\n                  'getPositionOnPyramidion',\n                  { delta: t, id: this.id },\n                  'Parent',\n                  { selfExecute: !1, direction: ht },\n                );\n                return e.response;\n              }\n              return t;\n            },\n          },\n        ],\n      };\n    }),\n    mt = 'Leaf has already been attached to another Node',\n    vt = 'Negative positioning of childs on nodes is not allowed',\n    yt = \"The Leaf with the requested id couldn't be found on the Tree\",\n    gt = D(\n      null,\n      function (t, e) {\n        var n = (function (e) {\n          d(i, e);\n          var n = g(i);\n          function i() {\n            var e,\n              r =\n                arguments.length > 0 && void 0 !== arguments[0]\n                  ? arguments[0]\n                  : {};\n            return (\n              o(this, i),\n              (e = n.call(this, r)),\n              t(v(e)),\n              (e.isNode = !0),\n              (e.children = {}),\n              (e.calculatedDuration = 0),\n              e\n            );\n          }\n          return i;\n        })(e);\n        return {\n          F: n,\n          d: [\n            {\n              kind: 'get',\n              key: 'duration',\n              value: function () {\n                return this.calculatedDuration;\n              },\n            },\n            {\n              kind: 'set',\n              key: 'duration',\n              value: function (t) {\n                var e = t / this.duration;\n                for (var n in (this.props &&\n                  Object.prototype.hasOwnProperty.call(\n                    this.props,\n                    'duration',\n                  ) &&\n                  (this.props.duration = t),\n                (this.calculatedDuration = t),\n                this.children)) {\n                  var i = this.children[n];\n                  this.editPosition(i.id, i.position * e, !0),\n                    i.leaf.systoleDiastole(e);\n                }\n              },\n            },\n            {\n              kind: 'method',\n              key: 'setNewDuration',\n              value: function (t) {\n                (this.duration = t),\n                  this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                    selfExecute: !1,\n                    direction: ht,\n                  });\n              },\n            },\n            {\n              kind: 'method',\n              key: '_calculateDuration',\n              value: function () {\n                var t = 0;\n                for (var e in this.children) {\n                  var n = this.children[e];\n                  n.position + n.leaf.duration > t &&\n                    (t = n.position + n.leaf.duration);\n                }\n                return (\n                  t !== this.calculatedDuration &&\n                  (this.props &&\n                    Object.prototype.hasOwnProperty.call(\n                      this.props,\n                      'duration',\n                    ) &&\n                    (this.props.duration = t),\n                  (this.calculatedDuration = t),\n                  !0)\n                );\n              },\n            },\n            {\n              kind: 'method',\n              decorators: [ct],\n              key: 'systoleDiastole',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              key: 'handleRecalcDuration',\n              value: function (t, e) {\n                return (\n                  !this._calculateDuration() ||\n                  this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                    selfExecute: !1,\n                    direction: ht,\n                  })\n                );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'getLeafById',\n              value: function (t) {\n                var e =\n                  arguments.length > 1 &&\n                  void 0 !== arguments[1] &&\n                  arguments[1];\n                if (Object.prototype.hasOwnProperty.call(this.children, t))\n                  return this.children[t].leaf;\n                if (e) return null;\n                for (var n in this.children) {\n                  var i = this.children[n].leaf;\n                  if (i.isNode) {\n                    var r = i.getLeafById(t);\n                    if (null != r) return r;\n                  }\n                }\n                return null;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'getLeafPosition',\n              value: function (t) {\n                if (Object.prototype.hasOwnProperty.call(this.children, t))\n                  return this.children[t].position;\n                var e = this.putMessageOnPipe(\n                  'getLeafPosition',\n                  { id: t },\n                  'Groups',\n                  { selfExecute: !1, direction: pt },\n                );\n                return e.length > 0\n                  ? e[0].positionDelta + e[0].response\n                  : void 0;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleGetLeafPosition',\n              value: function (t, e) {\n                return this.getLeafPosition(e.id);\n              },\n            },\n            {\n              kind: 'method',\n              key: 'checkAddition',\n              value: function (t, e) {\n                return t.hasParent\n                  ? { result: !1, reason: mt }\n                  : e < 0\n                  ? { result: !1, reason: vt }\n                  : { result: !0 };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'addChild',\n              value: function (t, e) {\n                return t.hasParent\n                  ? { result: !1, reason: mt }\n                  : ((this.children[t.id] = { id: t.id, leaf: t, position: e }),\n                    t.attachToNode(this),\n                    this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                      selfExecute: !0,\n                      direction: ht,\n                    }),\n                    { result: !0 });\n              },\n            },\n            {\n              kind: 'method',\n              key: 'checkRemoveChild',\n              value: function (t) {\n                return Object.prototype.hasOwnProperty.call(this.children, t)\n                  ? { result: !0 }\n                  : { result: !1, reason: yt };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'removeChild',\n              value: function (t) {\n                return (\n                  this.children[t].leaf.detachFromParent(),\n                  delete this.children[t],\n                  this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                    selfExecute: !0,\n                    direction: ht,\n                  }),\n                  { result: !0 }\n                );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'checkEditPosition',\n              value: function (t, e) {\n                return e < 0\n                  ? { result: !1, reason: vt }\n                  : Object.prototype.hasOwnProperty.call(this.children, t)\n                  ? { result: !0 }\n                  : { result: !1, reason: yt };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'editPosition',\n              value: function (t, e) {\n                var n =\n                  arguments.length > 2 &&\n                  void 0 !== arguments[2] &&\n                  arguments[2];\n                if (Object.prototype.hasOwnProperty.call(this.children, t))\n                  return (\n                    (this.children[t].position = e),\n                    n ||\n                      this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                        selfExecute: !0,\n                        direction: ht,\n                      }),\n                    { result: !0 }\n                  );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'putMessageOnPipe',\n              value: function (t, e, i) {\n                var r =\n                  arguments.length > 3 && void 0 !== arguments[3]\n                    ? arguments[3]\n                    : {};\n                if (\n                  (Object.prototype.hasOwnProperty.call(r, 'direction') ||\n                    (r.direction = pt),\n                  r.direction !== pt ||\n                    Object.prototype.hasOwnProperty.call(r, 'positionDelta') ||\n                    (r.positionDelta = 0),\n                  r.direction === ht)\n                )\n                  return k(f(n.prototype), 'putMessageOnPipe', this).call(\n                    this,\n                    t,\n                    e,\n                    i,\n                    r,\n                  );\n                var s = k(f(n.prototype), 'putMessageOnPipe', this).call(\n                  this,\n                  t,\n                  e,\n                  i,\n                  r,\n                );\n                if (s.length > 0) return s;\n                for (var a in this.children) {\n                  var o = this.children[a].leaf,\n                    u = p(\n                      p({}, r),\n                      {},\n                      {\n                        selfExecute: !0,\n                        positionDelta:\n                          r.positionDelta + this.children[a].position,\n                      },\n                    );\n                  s.push.apply(s, O(o.putMessageOnPipe(t, e, i, u)));\n                }\n                return s;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleGetPositionOnPyramidion',\n              value: function (t, e) {\n                var n = e.delta + this.getLeafPosition(e.id);\n                return this.getPositionOnPyramidion(n);\n              },\n            },\n          ],\n        };\n      },\n      ft,\n    );\n  function bt(t) {\n    t.descriptor.value = function (t) {\n      void 0 === this.blockID && (this.blockID = rt()),\n        this.DescriptiveIncident.putMessageOnPipe(\n          'setBlock',\n          {\n            id: this.blockID,\n            description: t,\n            incidentId: this.DescriptiveIncident.id,\n            realIncidentId: this.id,\n          },\n          'rootClip',\n          { selfExecute: !0, direction: ht },\n        );\n    };\n  }\n  function kt(t) {\n    t.descriptor.value = function () {\n      this.DescriptiveIncident.putMessageOnPipe(\n        'unBlock',\n        { id: this.blockID },\n        'rootClip',\n        { selfExecute: !0, direction: ht },\n      );\n    };\n  }\n  var xt = D(\n      null,\n      function (t, e) {\n        var n = (function (e) {\n          d(i, e);\n          var n = g(i);\n          function i(e, r) {\n            var s;\n            return (\n              o(this, i),\n              (s = n.call(this, r)),\n              t(v(s)),\n              (s.mc_plugin_npm_name = 'motor-cortex-js'),\n              (s.plugin_channel_class = lt),\n              (s.hasIncidents = !0),\n              s.onGroupInitialise(),\n              (s.calculatedDuration = 0),\n              s\n            );\n          }\n          return i;\n        })(e);\n        return {\n          F: n,\n          d: [\n            { kind: 'method', key: 'onGroupInitialise', value: function () {} },\n            {\n              kind: 'method',\n              key: 'handleAddIncident',\n              value: function (t, e) {\n                if (this.id === t) {\n                  var n = (0, e.incidentFromDescription)(\n                    e.incident,\n                    e.contextData,\n                    e.audio,\n                  );\n                  return null === n ? this.bypass() : n;\n                }\n                return this.bypass();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleMoveIncident',\n              value: function (t, e) {\n                if (this.id === t) {\n                  var n = this.getLeafById(e.incidentId, !0);\n                  return null === n ? this.bypass() : n;\n                }\n                return this.bypass();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleRemoveIncident',\n              value: function (t, e) {\n                if (this.id === t) {\n                  var n = this.getLeafById(e.incidentId, !0);\n                  return null === n ? this.bypass() : n;\n                }\n                return this.bypass();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleResize',\n              value: function (t) {\n                return this.id === t ? this : this.bypass();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'removeChild',\n              value: function (t) {\n                this.children[t].leaf.lastWish(),\n                  k(f(n.prototype), 'removeChild', this).call(this, t);\n              },\n            },\n            {\n              kind: 'method',\n              key: 'getIncidentsByChannel',\n              value: function () {\n                var t =\n                    arguments.length > 0 && void 0 !== arguments[0]\n                      ? arguments[0]\n                      : 0,\n                  e =\n                    arguments.length > 1 && void 0 !== arguments[1]\n                      ? arguments[1]\n                      : 0,\n                  n = {};\n                for (var i in ((n['motor-cortex-js'] = [\n                  {\n                    millisecond: t,\n                    parentMillisecond: e,\n                    incident: this,\n                    id: this.id,\n                  },\n                ]),\n                this.children)) {\n                  var r = this.children[i],\n                    s = r.leaf.getIncidentsByChannel(t + r.position, t);\n                  for (var a in s)\n                    Object.prototype.hasOwnProperty.call(n, a)\n                      ? (n[a] = n[a].concat(s[a]))\n                      : (n[a] = s[a]);\n                }\n                return n;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'lastWish',\n              value: function () {\n                for (var t in this.children) this.children[t].leaf.lastWish();\n              },\n            },\n            {\n              kind: 'method',\n              decorators: [bt],\n              key: 'setBlock',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [kt],\n              key: 'unblock',\n              value: function () {},\n            },\n          ],\n        };\n      },\n      gt,\n    ),\n    wt = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        return o(this, n), e.apply(this, arguments);\n      }\n      return (\n        l(n, [\n          {\n            key: 'onInitialise',\n            value: function () {\n              (this.incidents = []), (this.incidentsById = {});\n            },\n          },\n          {\n            key: '_incidentById',\n            value: function (t) {\n              return this.incidentsById[t];\n            },\n          },\n          {\n            key: '_resize',\n            value: function (t) {\n              for (var e = 0; e < this.incidents.length; e++)\n                this.incidents[e].millisecond *= t;\n            },\n          },\n          {\n            key: 'checkAddition',\n            value: function (t) {\n              for (var e = [], n = {}, i = [], r = 0; r < t.length; r++)\n                (n[t[r].id] = t[r].incident),\n                  i.push({ id: t[r].id, millisecond: t[r].millisecond }),\n                  Object.prototype.hasOwnProperty.call(\n                    this.incidentsById,\n                    t[r].id,\n                  ) &&\n                    (ot.error(\n                      'Incident with the id '.concat(\n                        t[r].id,\n                        ' already exists. Addition is rejected.',\n                      ),\n                    ),\n                    e.push({\n                      type: 'Already existing id',\n                      meta: { id: t[r].id },\n                    }));\n              if (e.length > 0) return { result: !1, errors: e };\n              var s = this;\n              return {\n                result: !0,\n                execute: function () {\n                  var e;\n                  (s.incidentsById = Object.assign(s.incidentsById, n)),\n                    (e = s.incidents).push.apply(e, i),\n                    s.incidents.sort(function (t, e) {\n                      return t.millisecond - e.millisecond;\n                    });\n                  for (var r = 0; r < t.length; r++)\n                    s._incidentById(t[r].id)._onGetContextOnce(s.context);\n                },\n              };\n            },\n          },\n          {\n            key: 'checkEdit',\n            value: function (t, e) {\n              var n = this.incidents;\n              return {\n                result: !0,\n                execute: function () {\n                  for (var i, r = 0; r < t.length; r++) {\n                    i = t[r].id;\n                    for (var s = 0; s < n.length; s++)\n                      if (n[s].id === i) {\n                        n[s].millisecond += e;\n                        break;\n                      }\n                  }\n                  n.sort(function (t, e) {\n                    return t.millisecond - e.millisecond;\n                  });\n                },\n              };\n            },\n          },\n          {\n            key: 'checkDelete',\n            value: function (t) {\n              for (var e = this, n = [], i = 0; i < t.length; i++)\n                n.push(t[i].id);\n              return {\n                result: !0,\n                execute: function () {\n                  var t = e.incidents.filter(function (t) {\n                    return !n.includes(t.id);\n                  });\n                  e.incidents = t;\n                  for (var i = 0; i < n.length; i++)\n                    delete e.incidentsById[n[i]];\n                },\n              };\n            },\n          },\n          {\n            key: 'checkResizedIncidents',\n            value: function (t) {\n              var e = this.incidents;\n              return {\n                result: !0,\n                execute: function () {\n                  for (var n, i = 0; i < t.length; i++) {\n                    n = t[i].id;\n                    for (var r = 0; r < e.length; r++)\n                      if (e[r].id === n) {\n                        e[r].millisecond += t[i].startDelta;\n                        break;\n                      }\n                  }\n                  e.sort(function (t, e) {\n                    return t.millisecond - e.millisecond;\n                  });\n                },\n              };\n            },\n          },\n          {\n            key: 'moveTo',\n            value: function (t, e, n) {\n              var i =\n                arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n              if (i)\n                for (var r = 0; r < this.incidents.length; r++) {\n                  var s = this.incidents[r],\n                    a = this._incidentById(s.id);\n                  e < s.millisecond\n                    ? a.onProgress(0, 0, n, !0)\n                    : e > s.millisecond + a.duration\n                    ? a.onProgress(1, a.duration, n, !0)\n                    : a.onProgress(\n                        (e - s.millisecond) / a.duration,\n                        e - s.millisecond,\n                        n,\n                        !0,\n                      );\n                }\n              else {\n                var o,\n                  u = this;\n                o =\n                  e > t\n                    ? this.incidents.filter(function (n) {\n                        return (\n                          (n.millisecond + u._incidentById(n.id).duration >=\n                            t &&\n                            n.millisecond + u._incidentById(n.id).duration <=\n                              e) ||\n                          (u._incidentById(n.id).duration + n.millisecond >=\n                            e &&\n                            n.millisecond <= e)\n                        );\n                      })\n                    : this.incidents.filter(function (n) {\n                        return (\n                          (n.millisecond + u._incidentById(n.id).duration >=\n                            e &&\n                            n.millisecond + u._incidentById(n.id).duration <=\n                              t) ||\n                          (u._incidentById(n.id).duration + n.millisecond >=\n                            t &&\n                            n.millisecond <= t)\n                        );\n                      });\n                for (var l = 0; l < o.length; l++) {\n                  var c = o[l],\n                    h = this._incidentById(c.id),\n                    p = (e - c.millisecond) / h.duration >= 1,\n                    d = p ? 1 : (e - c.millisecond) / h.duration,\n                    f = p ? h.duration : e - c.millisecond;\n                  h.onProgress(d, f, n, !1);\n                }\n              }\n            },\n          },\n        ]),\n        n\n      );\n    })(lt),\n    Ct = 0.1,\n    Ot = 'function' == typeof Float32Array;\n  function It(t, e) {\n    return 1 - 3 * e + 3 * t;\n  }\n  function Pt(t, e) {\n    return 3 * e - 6 * t;\n  }\n  function Et(t) {\n    return 3 * t;\n  }\n  function At(t, e, n) {\n    return ((It(e, n) * t + Pt(e, n)) * t + Et(e)) * t;\n  }\n  function _t(t, e, n) {\n    return 3 * It(e, n) * t * t + 2 * Pt(e, n) * t + Et(e);\n  }\n  function Tt(t) {\n    return t;\n  }\n  var Dt = function (t, e, n, i) {\n    if (!(0 <= t && t <= 1 && 0 <= n && n <= 1))\n      throw new Error('bezier x values must be in [0, 1] range');\n    if (t === e && n === i) return Tt;\n    for (var r = Ot ? new Float32Array(11) : new Array(11), s = 0; s < 11; ++s)\n      r[s] = At(s * Ct, t, n);\n    function a(e) {\n      for (var i = 0, s = 1; 10 !== s && r[s] <= e; ++s) i += Ct;\n      --s;\n      var a = i + ((e - r[s]) / (r[s + 1] - r[s])) * Ct,\n        o = _t(a, t, n);\n      return o >= 0.001\n        ? (function (t, e, n, i) {\n            for (var r = 0; r < 4; ++r) {\n              var s = _t(e, n, i);\n              if (0 === s) return e;\n              e -= (At(e, n, i) - t) / s;\n            }\n            return e;\n          })(e, a, t, n)\n        : 0 === o\n        ? a\n        : (function (t, e, n, i, r) {\n            var s,\n              a,\n              o = 0;\n            do {\n              (s = At((a = e + (n - e) / 2), i, r) - t) > 0 ? (n = a) : (e = a);\n            } while (Math.abs(s) > 1e-7 && ++o < 10);\n            return a;\n          })(e, i, i + Ct, t, n);\n    }\n    return function (t) {\n      return 0 === t ? 0 : 1 === t ? 1 : At(a(t), e, i);\n    };\n  };\n  function Mt(t) {\n    t.descriptor.value = function () {\n      var t =\n          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n        n = {};\n      return (\n        (n[this.mc_plugin_npm_name] = [\n          { millisecond: t, parentMillisecond: e, incident: this, id: this.id },\n        ]),\n        n\n      );\n    };\n  }\n  var St = D(null, function (t) {\n      return {\n        F: function e() {\n          var n =\n              arguments.length > 0 && void 0 !== arguments[0]\n                ? arguments[0]\n                : {},\n            i =\n              arguments.length > 1 && void 0 !== arguments[1]\n                ? arguments[1]\n                : {},\n            r = arguments.length > 2 ? arguments[2] : void 0;\n          o(this, e),\n            t(this),\n            (this.attrs = n),\n            (this.props = i),\n            (this.dna = r),\n            (this.context = r.context),\n            (this.mcid = r.mcid),\n            (this.id = i.id || rt()),\n            (this.modelId = i.modelId),\n            (this.gotContext = !1),\n            (this.plugin_channel_class = lt),\n            (this.mc_plugin_npm_name = 'motor-cortex-js'),\n            Object.prototype.hasOwnProperty.call(i, 'plugin_channel_class') &&\n              (this.plugin_channel_class = i.plugin_channel_class),\n            Object.prototype.hasOwnProperty.call(i, 'mc_plugin_npm_name') &&\n              (this.mc_plugin_npm_name = i.mc_plugin_npm_name),\n            (this.hasIncidents = !1),\n            (this.initialValues = {}),\n            (this.userDefinedInitialValues = n.initialValues || {}),\n            (this.pureInitialValues = null),\n            (this.autoGenerated = !1),\n            this.onInitialise();\n        },\n        d: [\n          {\n            kind: 'get',\n            key: 'selector',\n            value: function () {\n              return this.props.selector;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'animAttributes',\n            value: function () {\n              return this.attrs.animatedAttrs;\n            },\n          },\n          {\n            kind: 'set',\n            key: 'animAttributes',\n            value: function (t) {\n              this.attrs.animatedAttrs[this.attributeKey] = t;\n            },\n          },\n          {\n            kind: 'method',\n            key: 'getScratchValue',\n            value: function () {\n              return 0;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'element',\n            value: function () {\n              return null === this.context\n                ? []\n                : this.context.getElementByMCID\n                ? this.context.getElementByMCID(this.mcid)\n                : this.context.getElements(this.selector)[0];\n            },\n          },\n          {\n            kind: 'get',\n            key: 'attributeKey',\n            value: function () {\n              return Object.keys(this.attrs.animatedAttrs)[0];\n            },\n          },\n          {\n            kind: 'get',\n            key: 'targetValue',\n            value: function () {\n              return this.animAttributes[this.attributeKey];\n            },\n          },\n          {\n            kind: 'method',\n            key: 'getElementAttribute',\n            value: function (t) {\n              return this.element.getAttribute(t);\n            },\n          },\n          {\n            kind: 'method',\n            decorators: [Mt],\n            key: 'getIncidentsByChannel',\n            value: function () {},\n          },\n          {\n            kind: 'method',\n            key: 'hasUserDefinedInitialValue',\n            value: function () {\n              return Object.prototype.hasOwnProperty.call(\n                this.userDefinedInitialValues,\n                this.attributeKey,\n              );\n            },\n          },\n          {\n            kind: 'method',\n            key: 'setInitialValue',\n            value: function (t) {\n              var e =\n                !(arguments.length > 1 && void 0 !== arguments[1]) ||\n                arguments[1];\n              if (\n                (e && (this.pureInitialValues = JSON.parse(JSON.stringify(t))),\n                this.hasUserDefinedInitialValue())\n              )\n                if (H(this.targetValue)) {\n                  for (var n in this.userDefinedInitialValues[\n                    this.attributeKey\n                  ])\n                    t[n] = this.userDefinedInitialValues[this.attributeKey][n];\n                  this.initialValues[this.attributeKey] = t;\n                } else\n                  this.initialValues[\n                    this.attributeKey\n                  ] = this.userDefinedInitialValues[this.attributeKey];\n              else this.initialValues[this.attributeKey] = t;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'initialValue',\n            value: function () {\n              return this.initialValues[this.attributeKey];\n            },\n          },\n          {\n            kind: 'method',\n            key: '_onGetContextOnce',\n            value: function () {\n              try {\n                if (!0 === this.context.fragment) return;\n                this.gotContext ||\n                  (this.onGetContext(), (this.gotContext = !0));\n              } catch (t) {\n                ot.error(t), ot.error(this.mcid);\n              }\n            },\n          },\n          {\n            kind: 'method',\n            key: 'onGetContext',\n            value: function () {\n              ot.info(\n                'Overwritte the \"onGetContext\" method with the code you want to get executed',\n                'info',\n              );\n            },\n          },\n          { kind: 'method', key: 'lastWish', value: function () {} },\n          {\n            kind: 'method',\n            key: 'onInitialise',\n            value: function () {\n              ot.info(\n                'Overwritte the \"onInialise\" method with the code you want to get executed',\n                'info',\n              );\n            },\n          },\n          { kind: 'method', key: 'onProgress', value: function (t, e) {} },\n          {\n            kind: 'method',\n            decorators: [bt],\n            key: 'setBlock',\n            value: function () {},\n          },\n          {\n            kind: 'method',\n            decorators: [kt],\n            key: 'unblock',\n            value: function () {},\n          },\n        ],\n      };\n    }),\n    jt = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i, r) {\n        var s;\n        return (\n          o(this, n),\n          ((s = e.call(this, t, i, r)).runTimeInfo = { currentMillisecond: 0 }),\n          s\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'duration',\n            get: function () {\n              return this.DescriptiveIncident.realClip.duration;\n            },\n            set: function (t) {\n              this.DescriptiveIncident.realClip._resize(\n                t / this.realClip.duration,\n              );\n            },\n          },\n          {\n            key: 'lastWish',\n            value: function () {\n              this.ownClip && this.ownClip.ownContext.unmount();\n            },\n          },\n          {\n            key: 'onGetContext',\n            value: function () {\n              var t = this,\n                e = this.DescriptiveIncident.realClip.exportConstructionArguments(),\n                n = ot.getElementByMCID(this.context, this.mcid),\n                i = p(\n                  p({}, e.props),\n                  {},\n                  {\n                    selector: void 0,\n                    host: n,\n                    containerParams:\n                      this.DescriptiveIncident.props.containerParams || {},\n                    originalDims:\n                      this.DescriptiveIncident.constructor.originalDims || {},\n                  },\n                );\n              (this.ownClip = new this.DescriptiveIncident.constructor.Incident(\n                e.attrs,\n                i,\n              )),\n                (this.ownClip.DescriptiveIncident = this.DescriptiveIncident),\n                this.DescriptiveIncident.realClip.addContext(\n                  {\n                    clipId: this.id,\n                    context: this.ownClip.ownContext,\n                    unblock: function () {\n                      return t.unblock();\n                    },\n                  },\n                  !0,\n                );\n            },\n          },\n          {\n            key: 'onProgress',\n            value: function (t, e) {\n              var n =\n                arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n              if (\n                !1 !== this.DescriptiveIncident.realClip.context.contextLoaded\n              ) {\n                for (var i in this.DescriptiveIncident.realClip\n                  .instantiatedChannels) {\n                  var r = this.DescriptiveIncident.realClip\n                    .instantiatedChannels[i];\n                  r.moveTo(this.runTimeInfo.currentMillisecond, e, this.id, n);\n                }\n                (this.runTimeInfo.currentMillisecond = e),\n                  this.ownClip.onAfterProgress(t, e);\n              } else this.setBlock();\n            },\n          },\n        ]),\n        n\n      );\n    })(St);\n  function Vt(t) {\n    var e = new t.Incident(\n      t.attrs,\n      p(p({}, t.props), {}, { id: t.id || rt() }),\n      { context: t.context, mcid: t.mcid },\n    );\n    return (\n      (e.mc_plugin_npm_name = t.plugin_npm_name),\n      (e.plugin_channel_class = t.Channel),\n      (e.DescriptiveIncident = t.DescriptiveIncident),\n      e\n    );\n  }\n  var Nt = {\n      linear: function (t) {\n        return t;\n      },\n      easeInQuad: function (t) {\n        return t * t;\n      },\n      easeOutQuad: function (t) {\n        return t * (2 - t);\n      },\n      easeInOutQuad: function (t) {\n        return t < 0.5 ? 2 * t * t : (4 - 2 * t) * t - 1;\n      },\n      easeInCubic: function (t) {\n        return t * t * t;\n      },\n      easeOutCubic: function (t) {\n        return --t * t * t + 1;\n      },\n      easeInOutCubic: function (t) {\n        return t < 0.5\n          ? 4 * t * t * t\n          : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n      },\n      easeInQuart: function (t) {\n        return t * t * t * t;\n      },\n      easeOutQuart: function (t) {\n        return 1 - --t * t * t * t;\n      },\n      easeInOutQuart: function (t) {\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n      },\n      easeInQuint: function (t) {\n        return t * t * t * t * t;\n      },\n      easeOutQuint: function (t) {\n        return 1 + --t * t * t * t * t;\n      },\n      easeInOutQuint: function (t) {\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n      },\n      easeInSine: function (t) {\n        return -1 * Math.cos(t * (Math.PI / 2)) + 1;\n      },\n      easeOutSine: function (t) {\n        return Math.sin(t * (Math.PI / 2));\n      },\n      easeInOutSine: function (t) {\n        return -0.5 * (Math.cos(Math.PI * t) - 1);\n      },\n      easeInExpo: function (t) {\n        return 0 == t ? 1 : 1 * Math.pow(2, 10 * (t - 1));\n      },\n      easeOutExpo: function (t) {\n        return 1 == t ? 1 : 1 * (1 - Math.pow(2, -10 * t));\n      },\n      easeInOutExpo: function (t) {\n        return 0 == t || 1 == t\n          ? t\n          : (t /= 0.5) < 1\n          ? 0.5 * Math.pow(2, 10 * (t - 1))\n          : 0.5 * (2 - Math.pow(2, -10 * --t));\n      },\n      easeInCirc: function (t) {\n        return t >= 1 ? t : -(Math.sqrt(1 - (t /= 1) * t) - 1);\n      },\n      easeOutCirc: function (t) {\n        return Math.sqrt(1 - (t = t / 1 - 1) * t);\n      },\n      easeInOutCirc: function (t) {\n        return (t /= 0.5) < 1\n          ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n          : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n      },\n      easeInElastic: function (t) {\n        if (0 == t || 1 == t) return t;\n        var e = (0.3 / (2 * Math.PI)) * Math.asin(1);\n        return (\n          -Math.pow(2, 10 * (t -= 1)) *\n          Math.sin(((1 * t - e) * (2 * Math.PI)) / 0.3)\n        );\n      },\n      easeOutElastic: function (t) {\n        if (0 == t || 1 == t) return t;\n        var e = (0.3 / (2 * Math.PI)) * Math.asin(1);\n        return (\n          Math.pow(2, -10 * t) * Math.sin(((t - e) * (2 * Math.PI)) / 0.3) + 1\n        );\n      },\n      easeInOutElastic: function (t) {\n        if (0 == t || 1 == t) return t;\n        var e = 0.3 * 1.5,\n          n = (e / (2 * Math.PI)) * Math.asin(1);\n        return t < 1\n          ? Math.pow(2, 10 * (t -= 1)) *\n              Math.sin(((t - n) * (2 * Math.PI)) / e) *\n              -0.5\n          : Math.pow(2, -10 * (t -= 1)) *\n              Math.sin(((t - n) * (2 * Math.PI)) / e) *\n              0.5 +\n              1;\n      },\n      easeInBack: function (t) {\n        var e = 1.70158;\n        return t * t * ((e + 1) * t - e);\n      },\n      easeOutBack: function (t) {\n        var e = 1.70158;\n        return (t -= -1) * t * ((e + 1) * t + e) + 1;\n      },\n      easeInOutBack: function (t) {\n        var e = 1.70158;\n        return (t /= 0.5) < 1\n          ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5\n          : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);\n      },\n      easeInBounce: function (t) {\n        return 1 - Nt.easeOutBounce(1 - t);\n      },\n      easeOutBounce: function (t) {\n        return t < 1 / 2.75\n          ? 7.5625 * t * t * 1\n          : t < 2 / 2.75\n          ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75\n          : t < 2.5 / 2.75\n          ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375\n          : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n      },\n      easeInOutBounce: function (t) {\n        return t < 0.5\n          ? 0.5 * Nt.easeInBounce(2 * t)\n          : 0.5 * (Nt.easeOutBounce(2 * t - 1) + 1);\n      },\n    },\n    $t = D(\n      null,\n      function (t, e) {\n        return {\n          F: (function (e) {\n            d(i, e);\n            var n = g(i);\n            function i(e, r, s, a) {\n              var u;\n              return (\n                o(this, i),\n                (u = n.call(this, {\n                  id: ''.concat(e.incidentId, '_').concat(s),\n                })),\n                t(v(u)),\n                (u.contexts = {}),\n                (u.constructionIngredients = e),\n                (u.mcid = s),\n                (u._duration = a.realClip.duration),\n                (u.DescriptiveIncident = a),\n                (u.mc_plugin_npm_name = e.plugin_npm_name),\n                (u.plugin_channel_class = e.Channel),\n                u.addContext(r),\n                a.realClip.subscribeToDurationChange(function (t) {\n                  (u._duration = t),\n                    u.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                      selfExecute: !0,\n                      direction: ht,\n                    });\n                }),\n                (u.easing = Nt.linear),\n                Object.prototype.hasOwnProperty.call(\n                  u.DescriptiveIncident.props,\n                  'easing',\n                ) &&\n                  (Array.isArray(u.DescriptiveIncident.props.easing)\n                    ? (u.easing = Dt(\n                        u.DescriptiveIncident.props.easing[0],\n                        u.DescriptiveIncident.props.easing[1],\n                        u.DescriptiveIncident.props.easing[2],\n                        u.DescriptiveIncident.props.easing[3],\n                      ))\n                    : (u.easing = Nt[u.DescriptiveIncident.props.easing])),\n                u\n              );\n            }\n            return i;\n          })(e),\n          d: [\n            {\n              kind: 'get',\n              key: 'originalContext',\n              value: function () {\n                return this.contexts[this.originalContextKey];\n              },\n            },\n            {\n              kind: 'get',\n              key: 'duration',\n              value: function () {\n                return this._duration;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'onProgress',\n              value: function (t, e, n) {\n                var i =\n                    arguments.length > 3 &&\n                    void 0 !== arguments[3] &&\n                    arguments[3],\n                  r = this.easing(t) || 0,\n                  s = r * this.duration;\n                !1 !== this.originalContext.context.contextLoaded &&\n                  this.contexts[n].onProgress(r, s, i);\n              },\n            },\n            {\n              kind: 'method',\n              key: 'addContext',\n              value: function (t) {\n                var e =\n                  arguments.length > 1 &&\n                  void 0 !== arguments[1] &&\n                  arguments[1];\n                0 === Object.keys(this.contexts).length &&\n                  (this.originalContextKey = t.clipId);\n                var n = p(\n                  p({}, this.constructionIngredients),\n                  {},\n                  {\n                    context: t.context,\n                    mcid: this.mcid,\n                    Incident: jt,\n                    DescriptiveIncident: this.DescriptiveIncident,\n                  },\n                );\n                (this.contexts[t.clipId] = Vt(n)),\n                  e && this.contexts[t.clipId]._onGetContextOnce();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleAddContext',\n              value: function (t, e) {\n                return this.addContext(e, !0), !0;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleContextLoaded',\n              value: function (t, e) {\n                this._onGetContextOnce();\n              },\n            },\n            {\n              kind: 'method',\n              decorators: [Mt],\n              key: 'getIncidentsByChannel',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              key: 'gotContext',\n              value: function () {\n                for (var t in this.contexts) this.contexts[t].gotContext();\n              },\n            },\n            {\n              kind: 'method',\n              key: '_onGetContextOnce',\n              value: function () {\n                if (!1 !== this.originalContext.contextLoaded)\n                  for (var t in this.contexts)\n                    this.contexts[t]._onGetContextOnce();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'lastWish',\n              value: function () {\n                for (var t in this.contexts) this.contexts[t].lastWish();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'onGetContext',\n              value: function () {\n                if (!1 !== this.originalContext.contextLoaded)\n                  for (var t in this.contexts) this.contexts[t].onGetContext();\n              },\n            },\n          ],\n        };\n      },\n      ft,\n    ),\n    Bt = D(\n      null,\n      function (t, e) {\n        var n = (function (e) {\n          d(i, e);\n          var n = g(i);\n          function i(e, r, s, a) {\n            var u;\n            if (\n              (o(this, i),\n              (u = n.call(\n                this,\n                p(\n                  p({}, e.props),\n                  {},\n                  {\n                    id:\n                      null !== a\n                        ? ''.concat(e.incidentId, '_').concat(s, '_').concat(a)\n                        : ''.concat(e.incidentId, '_').concat(s),\n                  },\n                ),\n              )),\n              t(v(u)),\n              (u.contexts = {}),\n              (u.constructionIngredients = e),\n              (u.mcid = s),\n              (u.attribute = a),\n              (u.mc_plugin_npm_name = e.plugin_npm_name),\n              (u.plugin_channel_class = e.Channel),\n              (u.DescriptiveIncident = e.DescriptiveIncident),\n              u.addContext(r),\n              null !== a)\n            ) {\n              var l =\n                u.constructionIngredients.attrs.animatedAttrs[u.attribute];\n              Array.isArray(l)\n                ? (u.originalAnimatedAttributeValue = O(l))\n                : H(l)\n                ? (u.originalAnimatedAttributeValue = p({}, l))\n                : (u.originalAnimatedAttributeValue = l);\n            }\n            return (\n              (u.easing = Nt.linear),\n              Object.prototype.hasOwnProperty.call(u.props, 'easing') &&\n                (Array.isArray(u.props.easing)\n                  ? (u.easing = Dt(\n                      u.props.easing[0],\n                      u.props.easing[1],\n                      u.props.easing[2],\n                      u.props.easing[3],\n                    ))\n                  : (u.easing = Nt[u.props.easing])),\n              u\n            );\n          }\n          return i;\n        })(e);\n        return {\n          F: n,\n          d: [\n            {\n              kind: 'get',\n              key: 'originalContext',\n              value: function () {\n                return this.contexts[this.originalContextKey];\n              },\n            },\n            {\n              kind: 'get',\n              key: 'duration',\n              value: function () {\n                return k(f(n.prototype), 'duration', this);\n              },\n            },\n            {\n              kind: 'set',\n              key: 'duration',\n              value: function (t) {\n                for (var e in (w(f(n.prototype), 'duration', t, this, !0),\n                this.contexts))\n                  this.contexts[e].duration = t;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'addContext',\n              value: function (t) {\n                var e =\n                    arguments.length > 1 &&\n                    void 0 !== arguments[1] &&\n                    arguments[1],\n                  n = !1;\n                0 === Object.keys(this.contexts).length &&\n                  ((this.originalContextKey = t.clipId),\n                  (this.originalClipContext = t.context),\n                  (n = !0));\n                var i = p(\n                    p({}, this.constructionIngredients),\n                    {},\n                    { context: t.context, mcid: this.mcid },\n                  ),\n                  r = Vt(i);\n                (this.contexts[t.clipId] = r),\n                  n ||\n                    null == this.attribute ||\n                    this.contexts[t.clipId].setInitialValue(this.initialValue),\n                  e &&\n                    this.contexts[t.clipId].context.contextLoaded &&\n                    this.contexts[t.clipId]._onGetContextOnce();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleAddContext',\n              value: function (t, e) {\n                return this.addContext(e, !0), !0;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleContextLoaded',\n              value: function (t, e) {\n                return this._onGetContextOnce(), !0;\n              },\n            },\n            {\n              kind: 'method',\n              decorators: [Mt],\n              key: 'getIncidentsByChannel',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              key: 'onProgress',\n              value: function (t, e, n) {\n                var i = e % (this.delay + this.props.duration + this.hiatus);\n                0 !== e && 0 === i && (i = this.delay + this.props.duration);\n                var r = i - this.delay;\n                r < 0\n                  ? (r = 0)\n                  : r > this.props.duration && (r = this.props.duration);\n                var s = r / this.props.duration,\n                  a = this.easing(s),\n                  o = a * this.props.duration;\n                if (null != n)\n                  !1 !== this.originalContext.context.contextLoaded &&\n                    this.contexts[n].onProgress(a, o);\n                else\n                  for (var u in this.contexts)\n                    (this.originalContextKey === u &&\n                      !0 === this.originalContext.fragment) ||\n                      this.contexts[u].onProgress(a, o);\n              },\n            },\n            {\n              kind: 'get',\n              key: 'animatedAttributeValue',\n              value: function () {\n                return this.constructionIngredients.attrs.animatedAttrs[\n                  this.attribute\n                ];\n              },\n            },\n            {\n              kind: 'set',\n              key: 'animatedAttributeValue',\n              value: function (t) {\n                this.constructionIngredients.attrs.animatedAttrs[\n                  this.attribute\n                ] = t;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'gotContext',\n              value: function () {\n                for (var t in this.contexts) this.contexts[t].gotContext();\n              },\n            },\n            {\n              kind: 'method',\n              key: '_onGetContextOnce',\n              value: function () {\n                if (!1 !== this.originalContext.context.contextLoaded)\n                  for (var t in this.contexts)\n                    this.contexts[t]._onGetContextOnce();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'lastWish',\n              value: function () {\n                for (var t in this.contexts) this.contexts[t].lastWish();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'onGetContext',\n              value: function () {\n                if (!1 !== this.originalContext.contextLoaded)\n                  for (var t in this.contexts)\n                    this.contexts[t].context.contextLoaded &&\n                      this.contexts[t].onGetContext();\n              },\n            },\n            {\n              kind: 'get',\n              key: 'initialValue',\n              value: function () {\n                return this.originalContext.initialValue;\n              },\n            },\n            {\n              kind: 'get',\n              key: 'scratchValue',\n              value: function () {\n                return this.originalContext.scratchValue;\n              },\n            },\n            {\n              kind: 'get',\n              key: 'pureInitialValues',\n              value: function () {\n                return this.originalContext.pureInitialValues;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'setInitialValue',\n              value: function () {\n                var t =\n                    arguments.length > 0 && void 0 !== arguments[0]\n                      ? arguments[0]\n                      : null,\n                  e =\n                    !(arguments.length > 1 && void 0 !== arguments[1]) ||\n                    arguments[1];\n                for (var n in (null === t && (t = this.getScratchValue()),\n                this.contexts))\n                  this.contexts[n].setInitialValue(\n                    JSON.parse(JSON.stringify(t)),\n                    e,\n                  );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'getScratchValue',\n              value: function () {\n                var t =\n                  arguments.length > 0 && void 0 !== arguments[0]\n                    ? arguments[0]\n                    : null;\n                if (!this.originalContext.context.contextLoaded) return 0;\n                if (null != t) return this.contexts[t].getScratchValue();\n                var e = Object.keys(this.contexts);\n                if (\n                  Object.prototype.hasOwnProperty.call(\n                    this.originalClipContext,\n                    'nonFragmentedContext',\n                  )\n                ) {\n                  var n = p(\n                      p({}, this.constructionIngredients),\n                      {},\n                      {\n                        context: this.originalClipContext.nonFragmentedContext,\n                        mcid: this.mcid,\n                      },\n                    ),\n                    i = Vt(n);\n                  return i.getScratchValue();\n                }\n                return 1 === e.length\n                  ? this.originalContext.getScratchValue()\n                  : this.contexts[e[1]].getScratchValue();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'setCompoAttrKeyValue',\n              value: function (t, e) {\n                for (var n in this.contexts)\n                  (this.contexts[n].attrs.animatedAttrs[this.attribute][t] = e),\n                    this.contexts[n].lastWish(),\n                    this.contexts[n].onGetContext();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'play',\n              value: function (t, e, n) {\n                return this.contexts[n].play(e);\n              },\n            },\n            {\n              kind: 'method',\n              key: 'stop',\n              value: function (t) {\n                this.contexts[t].stop();\n              },\n            },\n          ],\n        };\n      },\n      ft,\n    ),\n    Lt = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i, r, s) {\n        var a,\n          u =\n            arguments.length > 4 && void 0 !== arguments[4]\n              ? arguments[4]\n              : null;\n        return (\n          o(this, n),\n          ((a = e.call(\n            this,\n            {},\n            { id: ''.concat(t.id, '_').concat(r) },\n          )).mcid = r),\n          (a.selector = s),\n          (a.dynamicValues = null !== u ? u : { attrs: [], props: [] }),\n          a.setUp(t, i),\n          a\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'setUp',\n            value: function (t, e) {\n              var n = t.attrs,\n                i = t.props;\n              if (this.dynamicValues.attrs.length > 0) {\n                n = JSON.parse(JSON.stringify(t.attrs));\n                for (var r = 0; r < this.dynamicValues.attrs.length; r++)\n                  at(\n                    n,\n                    this.dynamicValues.attrs[r].path,\n                    this.dynamicValues.attrs[r].value,\n                  );\n              }\n              if (this.dynamicValues.props.length > 0) {\n                i = JSON.parse(JSON.stringify(t.props));\n                for (var s = 0; s < this.dynamicValues.props.length; s++)\n                  at(\n                    i,\n                    this.dynamicValues.props[s].path,\n                    this.dynamicValues.props[s].value,\n                  );\n              }\n              for (var a in n.animatedAttrs) {\n                var o = {};\n                o[a] = n.animatedAttrs[a];\n                var u = p(p({}, n), {}, { animatedAttrs: o }),\n                  l = p(p({}, i), {}, { selector: this.selector }),\n                  c = {\n                    incidentId: t.id,\n                    attrs: u,\n                    props: l,\n                    Incident: t.constructor.Incident,\n                    plugin_npm_name: t.constructor.plugin_npm_name,\n                    Channel: t.constructor.Channel,\n                    DescriptiveIncident: t,\n                  },\n                  h = new Bt(c, e, this.mcid, a);\n                this.addChild(h, 0);\n              }\n            },\n          },\n        ]),\n        n\n      );\n    })(xt);\n  function Rt(t, e) {\n    for (var n = [], i = 0; i < t.length; i++)\n      n.push({ path: t[i].path, value: t[i].values[e] });\n    return n;\n  }\n  function Ft(t, e) {\n    for (var n = [], i = 0; i < t.length; i++)\n      n.push({ path: t[i].path, value: t[i].values[e] });\n    return n;\n  }\n  var zt = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i) {\n        var r;\n        return (\n          o(this, n),\n          ((r = e.call(this, {}, { id: t.id })).contexts = {}),\n          (r.contexts[i.clipId] = i.context),\n          (r.originalContextKey = i.clipId),\n          (r.initParams = i.context.initParams),\n          (r.instantiatedCopiesContexts = i.instantiatedCopiesContexts),\n          (r.descriptiveIncident = t),\n          (r.staggerAttrs = []),\n          (r.staggerProps = []),\n          r.setUp(t, i),\n          r\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'originalContext',\n            get: function () {\n              return this.contexts[this.originalContextKey];\n            },\n          },\n          {\n            key: 'parsePropsDynamicValues',\n            value: function (t, e) {\n              for (var n = 0; n < t.propsStaggers.length; n++)\n                this.staggerProps.push({\n                  path: t.propsStaggers[n].path,\n                  values: t.propsStaggers[n].stagger.calculateValues(\n                    e,\n                    this.initParams,\n                  ),\n                });\n            },\n          },\n          {\n            key: 'parseAttrsDynamicValues',\n            value: function (t, e) {\n              for (var n = 0; n < t.attributesStaggers.length; n++)\n                this.staggerAttrs.push({\n                  path: t.attributesStaggers[n].path,\n                  values: t.attributesStaggers[n].stagger.calculateValues(\n                    e,\n                    this.initParams,\n                  ),\n                });\n            },\n          },\n          {\n            key: 'setUp',\n            value: function (t, e) {\n              var n,\n                i,\n                r = this.originalContext.getElements(t.selector());\n              this.parsePropsDynamicValues(t, r),\n                this.parseAttrsDynamicValues(t, r);\n              for (var s = 0; s < r.length; s++) {\n                for (var a in ((n = r[s]),\n                (i = this._getElementMCID(n)),\n                this.instantiatedCopiesContexts))\n                  this._setElementMCID(\n                    this.instantiatedCopiesContexts[a],\n                    this.instantiatedCopiesContexts[a].getElements(\n                      t.selector(),\n                    )[s],\n                    i,\n                  );\n                this._createElementIncident(n, t, e, s, r.length, i);\n              }\n            },\n          },\n          {\n            key: 'handleRecalcDuration',\n            value: function (t, e) {\n              var i = k(f(n.prototype), 'handleRecalcDuration', this).call(\n                this,\n                t,\n                e,\n              );\n              return (\n                this.descriptiveIncident.propsStaggers.length > 0 &&\n                  (this.descriptiveIncident.dynamicDurationValue =\n                    1 * this.duration),\n                i\n              );\n            },\n          },\n          {\n            key: 'lastWish',\n            value: function () {\n              this.descriptiveIncident.propsStaggers.length > 0 &&\n                ((this.descriptiveIncident.dynamicDurationValue = null),\n                this.descriptiveIncident.putMessageOnPipe(\n                  'setDurationDynamic',\n                  {},\n                  'Groups',\n                  { selfExecute: !1, direction: ht },\n                )),\n                k(f(n.prototype), 'lastWish', this).call(this);\n            },\n          },\n          {\n            key: '_getElementMCID',\n            value: function (t) {\n              var e = this.originalContext.getMCID(t);\n              return e || ((e = rt(!0)), this.originalContext.setMCID(t, e)), e;\n            },\n          },\n          {\n            key: '_setElementMCID',\n            value: function (t, e, n) {\n              t.getMCID(e) || t.setMCID(e, n);\n            },\n          },\n          {\n            key: '_createElementIncident',\n            value: function (t, e, n, i, r, s) {\n              if (\n                Object.prototype.hasOwnProperty.call(e.attrs, 'animatedAttrs')\n              ) {\n                var a = new Lt(e, n, s, n.context.getElementSelectorByMCID(s), {\n                  attrs: Rt(this.staggerAttrs, i),\n                  props: Ft(this.staggerProps, i),\n                });\n                this.addChild(a, 0);\n              } else {\n                var o = e.attrs,\n                  u = p({}, e.props),\n                  l = {\n                    incidentId: e.id,\n                    attrs: o,\n                    props: u,\n                    Incident: e.constructor.Incident,\n                    plugin_npm_name: e.constructor.plugin_npm_name,\n                    Channel: e.constructor.Channel,\n                    DescriptiveIncident: e,\n                  },\n                  c = new Bt(l, n, s, null);\n                this.addChild(c, 0);\n              }\n            },\n          },\n        ]),\n        n\n      );\n    })(xt),\n    Gt = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i) {\n        var r;\n        return o(this, n), ((r = e.call(this, t, i)).realClip = t.realClip), r;\n      }\n      return (\n        l(n, [\n          {\n            key: '_createElementIncident',\n            value: function (t, e, n, i, r, s) {\n              var a = e.realClip.exportConstructionArguments(),\n                o = {\n                  incidentId: e.id,\n                  attrs: a.attrs,\n                  props: p(\n                    p({}, a.props),\n                    {},\n                    {\n                      selector: n.context.getElementSelectorByMCID(s),\n                      runTimeInfo: e.runTimeInfo,\n                    },\n                  ),\n                  Incident: e.constructor.Incident,\n                  plugin_npm_name: e.constructor.plugin_npm_name,\n                  Channel: wt,\n                  DescriptiveIncident: e,\n                },\n                u = new $t(o, n, s, e);\n              this.addChild(u, 0);\n            },\n          },\n          {\n            key: 'duration',\n            get: function () {\n              return k(f(n.prototype), 'duration', this);\n            },\n            set: function (t) {\n              this.realClip._resize(t / this.realClip.duration),\n                (this._duration = t);\n            },\n          },\n        ]),\n        n\n      );\n    })(zt),\n    qt = function (t, e) {\n      var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : F,\n        r =\n          arguments.length > 4 && void 0 !== arguments[4]\n            ? arguments[4]\n            : window;\n      Object.prototype.hasOwnProperty.call(r, i) || (r[i] = {});\n      for (var s = r[i], a = t.split('.'), o = 0; o < a.length - 1; o++)\n        Object.prototype.hasOwnProperty.call(s, a[o]) || (s[a[o]] = {}),\n          (s = s[a[o]]);\n      return (\n        (!Object.prototype.hasOwnProperty.call(s, a[a.length - 1]) ||\n          !1 !== n) &&\n        ((s[a[a.length - 1]] = e), !0)\n      );\n    };\n  function Kt(t) {\n    var e = {},\n      n = [],\n      i = Array.isArray(t),\n      r = i ? t.length : 0,\n      s = null;\n    return new Proxy(t, {\n      keywords: [\n        'setValue',\n        '_getFromProxy',\n        '__createPathProxies',\n        'hasOwnProperty',\n        'pushValue',\n        'removePathKey',\n        'removeKey',\n        'restoreKey',\n        'getKeys',\n        'exportFlattened',\n        'isArray',\n        'push',\n        'sortBy',\n        'findIndex',\n      ],\n      get: function (a, o) {\n        return 'length' === o && i\n          ? r\n          : this.keywords.indexOf(o) >= 0\n          ? this[o]\n          : n.indexOf(o) >= 0\n          ? void 0\n          : (i && null !== s && (o = s[o]),\n            Object.prototype.hasOwnProperty.call(e, o) ? e[o] : t[o]);\n      },\n      isArray: function () {\n        return i;\n      },\n      _getFromProxy: function (t) {\n        return Object.prototype.hasOwnProperty.call(e, t) ? e[t] : void 0;\n      },\n      set: function () {\n        return !1;\n      },\n      sortBy: function (t) {\n        if (((s = null), !i)) return !1;\n        s = (function (t, e) {\n          for (var n = [], i = 0; i < t.length; i++) n.push([t[i], i]);\n          n.sort(function (t, n) {\n            return t[0][e] < n[0][e] ? -1 : 1;\n          });\n          var r = [];\n          for (var s in n) r.push(n[s][1]);\n          return r;\n        })(this, t);\n      },\n      __createPathProxies: function (n) {\n        for (var r = e, a = t, o = 0; o < n.length - 1; o++) {\n          var u = i && null !== s ? s[n[o]] : n[o];\n          if (0 === o ? void 0 === r[u] : void 0 === r._getFromProxy(u)) {\n            var l = Kt((void 0 !== a && a[u]) || {});\n            0 === o ? (r[u] = l) : r.setValue(u, l);\n          }\n          (r = r[u]), (a = void 0 !== a ? a[u] : {});\n        }\n        return { currentObject: r, currentRealObect: a };\n      },\n      findIndex: function (t) {\n        if (!i) return null;\n        for (var e = 0; e < r; e++) if (t(this[e])) return e;\n        return null;\n      },\n      setValue: function (t, e) {\n        var i = t.split('.'),\n          r = this.__createPathProxies(i).currentObject,\n          s = e;\n        if (('object' === a(e) && (s = Kt(e)), 1 === i.length)) {\n          r[i[i.length - 1]] = s;\n          var o = n.indexOf(i[i.length - 1]);\n          o > -1 && n.splice(o, 1);\n        } else r.setValue(i[i.length - 1], s), r.restoreKey(i[i.length - 1]);\n        return !0;\n      },\n      pushValue: function (e, n) {\n        var i = e.split('.'),\n          r = this.__createPathProxies(i),\n          s = r.currentObject;\n        if (void 0 === r.currentRealObect) return !1;\n        var a = i[i.length - 1],\n          o = s[a],\n          u = t[a];\n        if (('' === e && ((o = this), (u = t)), 1 !== i.length))\n          return s.pushValue(a, n);\n        var l = !1;\n        if (void 0 !== o) {\n          if (((l = !0), !o.isArray())) return !1;\n        } else if (!Array.isArray(u)) return !1;\n        if (!l) {\n          var c = Kt(u);\n          (s[a] = c), (o = s[a]);\n        }\n        return o.push(n), !0;\n      },\n      push: function (t) {\n        return (\n          !!this.isArray() &&\n          ('object' === a(t) ? (e[r] = Kt(t)) : (e[r] = t), (r += 1), !0)\n        );\n      },\n      removePathKey: function (t) {\n        var e = t.split('.');\n        return (\n          this.__createPathProxies(e).currentObject.removeKey(e[e.length - 1]),\n          !0\n        );\n      },\n      removeKey: function (t) {\n        n.push(t);\n      },\n      restoreKey: function (t) {\n        var e = n.indexOf(t);\n        e > -1 && n.splice(e, 1);\n      },\n      hasOwnProperty: function (t) {\n        return !(n.indexOf(t) > -1) && void 0 !== this[t];\n      },\n      getKeys: function () {\n        if (i) return [];\n        for (\n          var r = [],\n            s = Object.keys(t),\n            a = Object.keys(e),\n            o = [].concat(O(s), O(a)),\n            u = o.filter(function (t, e) {\n              return o.indexOf(t) === e;\n            }),\n            l = 0;\n          l < u.length;\n          l++\n        ) {\n          n.indexOf(u[l]) < 0 && r.push(u[l]);\n        }\n        return r;\n      },\n      exportFlattened: function () {\n        var n;\n        if (i)\n          if (((n = []), null !== s))\n            for (var r = 0; r < s.length; r++) {\n              var o = s[r];\n              if (Object.prototype.hasOwnProperty.call(e, o)) {\n                var u = e[o];\n                if ('object' === a(u))\n                  try {\n                    n[r] = e[o].exportFlattened();\n                  } catch (t) {\n                    n[r] = u;\n                  }\n                else n[r] = u;\n              } else n[r] = t[o];\n            }\n          else {\n            n = O(t);\n            for (var l = 0, c = Object.entries(e); l < c.length; l++) {\n              var h = C(c[l], 2),\n                p = h[0],\n                d = h[1];\n              if ('object' === a(d))\n                try {\n                  n[p] = e[p].exportFlattened();\n                } catch (t) {\n                  n[p] = d;\n                }\n              else n[p] = d;\n            }\n          }\n        else {\n          n = {};\n          for (var f = this.getKeys(), m = 0; m < f.length; m++) {\n            var v = f[m];\n            void 0 !== e[v]\n              ? 'object' === a(e[v])\n                ? (n[v] = e[v].exportFlattened())\n                : (n[v] = e[v])\n              : (n[v] = t[v]);\n          }\n        }\n        return n;\n      },\n    });\n  }\n  var Jt = '6.3.2';\n  var Wt = function t(e, n, i = {}) {\n      for (let s in n)\n        if (\n          'object' == typeof (r = n[s]) &&\n          !Array.isArray(r) &&\n          null != r &&\n          Object.keys(r).length > 0\n        )\n          (e[s] = e[s] || {}), t(e[s], n[s], i);\n        else {\n          if (!0 === i.skipIfExist && void 0 !== e[s]) continue;\n          e[s] = n[s];\n        }\n      var r;\n      return e;\n    },\n    Ht = {\n      required: \"The '{field}' field is required.\",\n      string: \"The '{field}' field must be a string.\",\n      stringEmpty: \"The '{field}' field must not be empty.\",\n      stringMin:\n        \"The '{field}' field length must be greater than or equal to {expected} characters long.\",\n      stringMax:\n        \"The '{field}' field length must be less than or equal to {expected} characters long.\",\n      stringLength:\n        \"The '{field}' field length must be {expected} characters long.\",\n      stringPattern: \"The '{field}' field fails to match the required pattern.\",\n      stringContains: \"The '{field}' field must contain the '{expected}' text.\",\n      stringEnum:\n        \"The '{field}' field does not match any of the allowed values.\",\n      stringNumeric: \"The '{field}' field must be a numeric string.\",\n      stringAlpha: \"The '{field}' field must be an alphabetic string.\",\n      stringAlphanum: \"The '{field}' field must be an alphanumeric string.\",\n      stringAlphadash: \"The '{field}' field must be an alphadash string.\",\n      stringHex: \"The '{field}' field must be a hex string.\",\n      stringSingleLine: \"The '{field}' field must be a single line string.\",\n      stringBase64: \"The '{field}' field must be a base64 string.\",\n      number: \"The '{field}' field must be a number.\",\n      numberMin:\n        \"The '{field}' field must be greater than or equal to {expected}.\",\n      numberMax:\n        \"The '{field}' field must be less than or equal to {expected}.\",\n      numberEqual: \"The '{field}' field must be equal to {expected}.\",\n      numberNotEqual: \"The '{field}' field can't be equal to {expected}.\",\n      numberInteger: \"The '{field}' field must be an integer.\",\n      numberPositive: \"The '{field}' field must be a positive number.\",\n      numberNegative: \"The '{field}' field must be a negative number.\",\n      array: \"The '{field}' field must be an array.\",\n      arrayEmpty: \"The '{field}' field must not be an empty array.\",\n      arrayMin: \"The '{field}' field must contain at least {expected} items.\",\n      arrayMax:\n        \"The '{field}' field must contain less than or equal to {expected} items.\",\n      arrayLength: \"The '{field}' field must contain {expected} items.\",\n      arrayContains: \"The '{field}' field must contain the '{expected}' item.\",\n      arrayUnique:\n        \"The '{actual}' value in '{field}' field does not unique the '{expected}' values.\",\n      arrayEnum:\n        \"The '{actual}' value in '{field}' field does not match any of the '{expected}' values.\",\n      tuple: \"The '{field}' field must be an array.\",\n      tupleEmpty: \"The '{field}' field must not be an empty array.\",\n      tupleLength: \"The '{field}' field must contain {expected} items.\",\n      boolean: \"The '{field}' field must be a boolean.\",\n      currency: \"The '{field}' must be a valid currency format\",\n      date: \"The '{field}' field must be a Date.\",\n      dateMin:\n        \"The '{field}' field must be greater than or equal to {expected}.\",\n      dateMax: \"The '{field}' field must be less than or equal to {expected}.\",\n      enumValue:\n        \"The '{field}' field value '{expected}' does not match any of the allowed values.\",\n      equalValue: \"The '{field}' field value must be equal to '{expected}'.\",\n      equalField:\n        \"The '{field}' field value must be equal to '{expected}' field value.\",\n      forbidden: \"The '{field}' field is forbidden.\",\n      function: \"The '{field}' field must be a function.\",\n      email: \"The '{field}' field must be a valid e-mail.\",\n      emailEmpty: \"The '{field}' field must not be empty.\",\n      emailMin:\n        \"The '{field}' field length must be greater than or equal to {expected} characters long.\",\n      emailMax:\n        \"The '{field}' field length must be less than or equal to {expected} characters long.\",\n      luhn: \"The '{field}' field must be a valid checksum luhn.\",\n      mac: \"The '{field}' field must be a valid MAC address.\",\n      object: \"The '{field}' must be an Object.\",\n      objectStrict: \"The object '{field}' contains forbidden keys: '{actual}'.\",\n      objectMinProps:\n        \"The object '{field}' must contain at least {expected} properties.\",\n      objectMaxProps:\n        \"The object '{field}' must contain {expected} properties at most.\",\n      url: \"The '{field}' field must be a valid URL.\",\n      urlEmpty: \"The '{field}' field must not be empty.\",\n      uuid: \"The '{field}' field must be a valid UUID.\",\n      uuidVersion: \"The '{field}' field must be a valid UUID version provided.\",\n      classInstanceOf:\n        \"The '{field}' field must be an instance of the '{expected}' class.\",\n      objectID: \"The '{field}' field must be an valid ObjectID\",\n    },\n    Ut = function () {\n      const t = [];\n      return t.push('\\n\\t\\treturn value;\\n\\t'), { source: t.join('\\n') };\n    },\n    Qt = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      if (\n        (r.push(\n          `\\n\\t\\tif (!Array.isArray(value)) {\\n\\t\\t\\t${this.makeError({\n            type: 'array',\n            actual: 'value',\n            messages: e,\n          })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tvar len = value.length;\\n\\t`,\n        ),\n        !1 === t.empty &&\n          r.push(\n            `\\n\\t\\t\\tif (len === 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'arrayEmpty',\n              actual: 'value',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.min &&\n          r.push(\n            `\\n\\t\\t\\tif (len < ${t.min}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'arrayMin',\n              expected: t.min,\n              actual: 'len',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.max &&\n          r.push(\n            `\\n\\t\\t\\tif (len > ${t.max}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'arrayMax',\n              expected: t.max,\n              actual: 'len',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.length &&\n          r.push(\n            `\\n\\t\\t\\tif (len !== ${t.length}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'arrayLength',\n              expected: t.length,\n              actual: 'len',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.contains &&\n          r.push(\n            `\\n\\t\\t\\tif (value.indexOf(${JSON.stringify(\n              t.contains,\n            )}) === -1) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'arrayContains',\n              expected: JSON.stringify(t.contains),\n              actual: 'value',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.unique &&\n          r.push(\n            `\\n\\t\\t\\tif(len > (new Set(value)).size) {\\n\\t\\t\\t\\t${this.makeError(\n              {\n                type: 'arrayUnique',\n                expected:\n                  'Array.from(new Set(value.filter((item, index) => value.indexOf(item) !== index)))',\n                actual: 'value',\n                messages: e,\n              },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.enum)\n      ) {\n        const n = JSON.stringify(t.enum);\n        r.push(\n          `\\n\\t\\t\\tfor (var i = 0; i < value.length; i++) {\\n\\t\\t\\t\\tif (${n}.indexOf(value[i]) === -1) {\\n\\t\\t\\t\\t\\t${this.makeError(\n            {\n              type: 'arrayEnum',\n              expected: '\"' + t.enum.join(', ') + '\"',\n              actual: 'value[i]',\n              messages: e,\n            },\n          )}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t`,\n        );\n      }\n      if (null != t.items) {\n        r.push(\n          '\\n\\t\\t\\tvar arr = value;\\n\\t\\t\\tvar parentField = field;\\n\\t\\t\\tfor (var i = 0; i < arr.length; i++) {\\n\\t\\t',\n        );\n        const e = n + '[]',\n          s = this.getRuleFromSchema(t.items),\n          a =\n            'arr[i] = context.fn[%%INDEX%%](arr[i], (parentField ? parentField : \"\") + \"[\" + i + \"]\", parent, errors, context)';\n        r.push(this.compileRule(s, i, e, a, 'arr[i]')),\n          r.push('\\n\\t\\t\\t}\\n\\t\\t');\n      }\n      return r.push('\\n\\t\\treturn value;\\n\\t'), { source: r.join('\\n') };\n    },\n    Xt = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      let s = !1;\n      return (\n        r.push('\\n\\t\\tvar origValue = value;\\n\\t'),\n        !0 === t.convert &&\n          ((s = !0),\n          r.push(\n            '\\n\\t\\t\\tif (typeof value !== \"boolean\") {\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\tvalue === 1\\n\\t\\t\\t\\t|| value === \"true\"\\n\\t\\t\\t\\t|| value === \"1\"\\n\\t\\t\\t\\t|| value === \"on\"\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tvalue = true;\\n\\t\\t\\t\\t} else if (\\n\\t\\t\\t\\tvalue === 0\\n\\t\\t\\t\\t|| value === \"false\"\\n\\t\\t\\t\\t|| value === \"0\"\\n\\t\\t\\t\\t|| value === \"off\"\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tvalue = false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t',\n          )),\n        r.push(\n          `\\n\\t\\tif (typeof value !== \"boolean\") {\\n\\t\\t\\t${this.makeError({\n            type: 'boolean',\n            actual: 'origValue',\n            messages: e,\n          })}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn value;\\n\\t`,\n        ),\n        { sanitized: s, source: r.join('\\n') }\n      );\n    },\n    Zt = function ({ schema: t, messages: e, index: n }, i, r) {\n      const s = [],\n        a = t.instanceOf.name ? t.instanceOf.name : '<UnknowClass>';\n      return (\n        r.customs[n]\n          ? (r.customs[n].schema = t)\n          : (r.customs[n] = { schema: t }),\n        s.push(\n          `\\n\\t\\tif (!(value instanceof context.customs[${n}].schema.instanceOf))\\n\\t\\t\\t${this.makeError(\n            {\n              type: 'classInstanceOf',\n              actual: 'value',\n              expected: \"'\" + a + \"'\",\n              messages: e,\n            },\n          )}\\n\\t`,\n        ),\n        s.push('\\n\\t\\treturn value;\\n\\t'),\n        { source: s.join('\\n') }\n      );\n    },\n    Yt = function ({ schema: t, messages: e, index: n }, i, r) {\n      const s = [];\n      return (\n        s.push(\n          `\\n\\t\\t${this.makeCustomValidator({\n            fnName: 'check',\n            path: i,\n            schema: t,\n            messages: e,\n            context: r,\n            ruleIndex: n,\n          })}\\n\\t\\treturn value;\\n\\t`,\n        ),\n        { source: s.join('\\n') }\n      );\n    };\n  var te = function ({ schema: t, messages: e }, n, i) {\n      const r = t.currencySymbol || null,\n        s = t.thousandSeparator || ',',\n        a = t.decimalSeparator || '.',\n        o = t.customRegex;\n      let u = !t.symbolOptional,\n        l = '(?=.*\\\\d)^(-?~1|~1-?)(([0-9]\\\\d{0,2}(~2\\\\d{3})*)|0)?(\\\\~3\\\\d{1,2})?$'\n          .replace(/~1/g, r ? `\\\\${r}${u ? '' : '?'}` : '')\n          .replace('~2', s)\n          .replace('~3', a);\n      const c = [];\n      return (\n        c.push(\n          `\\n\\t\\tif (!value.match(${\n            o || new RegExp(l)\n          })) {\\n\\t\\t\\t${this.makeError({\n            type: 'currency',\n            actual: 'value',\n            messages: e,\n          })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t`,\n        ),\n        { source: c.join('\\n') }\n      );\n    },\n    ee = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      let s = !1;\n      return (\n        r.push('\\n\\t\\tvar origValue = value;\\n\\t'),\n        !0 === t.convert &&\n          ((s = !0),\n          r.push(\n            '\\n\\t\\t\\tif (!(value instanceof Date)) {\\n\\t\\t\\t\\tvalue = new Date(value);\\n\\t\\t\\t}\\n\\t\\t',\n          )),\n        r.push(\n          `\\n\\t\\tif (!(value instanceof Date) || isNaN(value.getTime()))\\n\\t\\t\\t${this.makeError(\n            { type: 'date', actual: 'origValue', messages: e },\n          )}\\n\\n\\t\\treturn value;\\n\\t`,\n        ),\n        { sanitized: s, source: r.join('\\n') }\n      );\n    };\n  const ne = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    ie = /^\\S+@\\S+\\.\\S+$/;\n  var re = function ({ schema: t, messages: e }, n, i) {\n      const r = [],\n        s = 'precise' == t.mode ? ne : ie;\n      let a = !1;\n      return (\n        r.push(\n          `\\n\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t${this.makeError({\n            type: 'string',\n            actual: 'value',\n            messages: e,\n          })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\t`,\n        ),\n        t.empty\n          ? r.push('\\n\\t\\t\\tif (value.length === 0) return value;\\n\\t\\t')\n          : r.push(\n              `\\n\\t\\t\\tif (value.length === 0) {\\n\\t\\t\\t\\t${this.makeError({\n                type: 'emailEmpty',\n                actual: 'value',\n                messages: e,\n              })}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\t\\t`,\n            ),\n        t.normalize &&\n          ((a = !0),\n          r.push('\\n\\t\\t\\tvalue = value.trim().toLowerCase();\\n\\t\\t')),\n        null != t.min &&\n          r.push(\n            `\\n\\t\\t\\tif (value.length < ${t.min}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'emailMin',\n              expected: t.min,\n              actual: 'value.length',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.max &&\n          r.push(\n            `\\n\\t\\t\\tif (value.length > ${t.max}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'emailMax',\n              expected: t.max,\n              actual: 'value.length',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        r.push(\n          `\\n\\t\\tif (!${s.toString()}.test(value)) {\\n\\t\\t\\t${this.makeError({\n            type: 'email',\n            actual: 'value',\n            messages: e,\n          })}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t`,\n        ),\n        { sanitized: a, source: r.join('\\n') }\n      );\n    },\n    se = function ({ schema: t, messages: e }, n, i) {\n      return {\n        source: `\\n\\t\\t\\tif (${JSON.stringify(\n          t.values || [],\n        )}.indexOf(value) === -1)\\n\\t\\t\\t\\t${this.makeError({\n          type: 'enumValue',\n          expected: '\"' + t.values.join(', ') + '\"',\n          actual: 'value',\n          messages: e,\n        })}\\n\\t\\t\\t\\n\\t\\t\\treturn value;\\n\\t\\t`,\n      };\n    },\n    ae = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      return (\n        t.field\n          ? (t.strict\n              ? r.push(`\\n\\t\\t\\t\\tif (value !== parent[\"${t.field}\"])\\n\\t\\t\\t`)\n              : r.push(`\\n\\t\\t\\t\\tif (value != parent[\"${t.field}\"])\\n\\t\\t\\t`),\n            r.push(\n              `\\n\\t\\t\\t\\t${this.makeError({\n                type: 'equalField',\n                actual: 'value',\n                expected: JSON.stringify(t.field),\n                messages: e,\n              })}\\n\\t\\t`,\n            ))\n          : (t.strict\n              ? r.push(\n                  `\\n\\t\\t\\t\\tif (value !== ${JSON.stringify(t.value)})\\n\\t\\t\\t`,\n                )\n              : r.push(\n                  `\\n\\t\\t\\t\\tif (value != ${JSON.stringify(t.value)})\\n\\t\\t\\t`,\n                ),\n            r.push(\n              `\\n\\t\\t\\t\\t${this.makeError({\n                type: 'equalValue',\n                actual: 'value',\n                expected: JSON.stringify(t.value),\n                messages: e,\n              })}\\n\\t\\t`,\n            )),\n        r.push('\\n\\t\\treturn value;\\n\\t'),\n        { source: r.join('\\n') }\n      );\n    },\n    oe = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      return (\n        r.push('\\n\\t\\tif (value !== null && value !== undefined) {\\n\\t'),\n        t.remove\n          ? r.push('\\n\\t\\t\\treturn undefined;\\n\\t\\t')\n          : r.push(\n              `\\n\\t\\t\\t${this.makeError({\n                type: 'forbidden',\n                actual: 'value',\n                messages: e,\n              })}\\n\\t\\t`,\n            ),\n        r.push('\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t'),\n        { source: r.join('\\n') }\n      );\n    },\n    ue = function ({ schema: t, messages: e }, n, i) {\n      return {\n        source: `\\n\\t\\t\\tif (typeof value !== \"function\")\\n\\t\\t\\t\\t${this.makeError(\n          { type: 'function', actual: 'value', messages: e },\n        )}\\n\\n\\t\\t\\treturn value;\\n\\t\\t`,\n      };\n    },\n    le = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      r.push(\n        '\\n\\t\\tvar prevErrLen = errors.length;\\n\\t\\tvar errBefore;\\n\\t\\tvar hasValid = false;\\n\\t\\tvar newVal = value;\\n\\t',\n      );\n      for (let e = 0; e < t.rules.length; e++) {\n        r.push(\n          '\\n\\t\\t\\tif (!hasValid) {\\n\\t\\t\\t\\terrBefore = errors.length;\\n\\t\\t',\n        );\n        const s = this.getRuleFromSchema(t.rules[e]);\n        r.push(\n          this.compileRule(\n            s,\n            i,\n            n,\n            'var tmpVal = context.fn[%%INDEX%%](value, field, parent, errors, context);',\n            'tmpVal',\n          ),\n        ),\n          r.push(\n            '\\n\\t\\t\\t\\tif (errors.length == errBefore) {\\n\\t\\t\\t\\t\\thasValid = true;\\n\\t\\t\\t\\t\\tnewVal = tmpVal;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t',\n          );\n      }\n      return (\n        r.push(\n          '\\n\\t\\tif (hasValid) {\\n\\t\\t\\terrors.length = prevErrLen;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn newVal;\\n\\t',\n        ),\n        { source: r.join('\\n') }\n      );\n    },\n    ce = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      r.push('\\n\\t\\tvar origValue = value;\\n\\t');\n      let s = !1;\n      return (\n        !0 === t.convert &&\n          ((s = !0),\n          r.push(\n            '\\n\\t\\t\\tif (typeof value !== \"number\") {\\n\\t\\t\\t\\tvalue = Number(value);\\n\\t\\t\\t}\\n\\t\\t',\n          )),\n        r.push(\n          `\\n\\t\\tif (typeof value !== \"number\" || isNaN(value) || !isFinite(value)) {\\n\\t\\t\\t${this.makeError(\n            { type: 'number', actual: 'origValue', messages: e },\n          )}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\t`,\n        ),\n        null != t.min &&\n          r.push(\n            `\\n\\t\\t\\tif (value < ${t.min}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberMin',\n              expected: t.min,\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.max &&\n          r.push(\n            `\\n\\t\\t\\tif (value > ${t.max}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberMax',\n              expected: t.max,\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.equal &&\n          r.push(\n            `\\n\\t\\t\\tif (value !== ${t.equal}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberEqual',\n              expected: t.equal,\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.notEqual &&\n          r.push(\n            `\\n\\t\\t\\tif (value === ${t.notEqual}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberNotEqual',\n              expected: t.notEqual,\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.integer &&\n          r.push(\n            `\\n\\t\\t\\tif (value % 1 !== 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberInteger',\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.positive &&\n          r.push(\n            `\\n\\t\\t\\tif (value <= 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberPositive',\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.negative &&\n          r.push(\n            `\\n\\t\\t\\tif (value >= 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'numberNegative',\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        r.push('\\n\\t\\treturn value;\\n\\t'),\n        { sanitized: s, source: r.join('\\n') }\n      );\n    };\n  const he = /^[_$a-zA-Z][_$a-zA-Z0-9]*$/,\n    pe = /[\"'\\\\\\n\\r\\u2028\\u2029]/g;\n  function de(t) {\n    return t.replace(pe, function (t) {\n      switch (t) {\n        case '\"':\n        case \"'\":\n        case '\\\\':\n          return '\\\\' + t;\n        case '\\n':\n          return '\\\\n';\n        case '\\r':\n          return '\\\\r';\n        case '\\u2028':\n          return '\\\\u2028';\n        case '\\u2029':\n          return '\\\\u2029';\n      }\n    });\n  }\n  var fe = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      r.push(\n        `\\n\\t\\tif (typeof value !== \"object\" || value === null || Array.isArray(value)) {\\n\\t\\t\\t${this.makeError(\n          { type: 'object', actual: 'value', messages: e },\n        )}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\t`,\n      );\n      const s = t.properties || t.props;\n      if (s) {\n        r.push('var parentObj = value;'), r.push('var parentField = field;');\n        const a = Object.keys(s);\n        for (let t = 0; t < a.length; t++) {\n          const e = a[t],\n            o = de(e),\n            u = he.test(o) ? `.${o}` : `['${o}']`,\n            l = `parentObj${u}`,\n            c = (n ? n + '.' : '') + e;\n          r.push(`\\n// Field: ${de(c)}`),\n            r.push(`field = parentField ? parentField + \"${u}\" : \"${o}\";`),\n            r.push(`value = ${l};`);\n          const h = this.getRuleFromSchema(s[e]),\n            p = `\\n\\t\\t\\t\\t${l} = context.fn[%%INDEX%%](value, field, parentObj, errors, context);\\n\\t\\t\\t`;\n          r.push(this.compileRule(h, i, c, p, l));\n        }\n        if (t.strict) {\n          const n = Object.keys(s);\n          r.push(\n            `\\n\\t\\t\\t\\tfield = parentField;\\n\\t\\t\\t\\tvar invalidProps = [];\\n\\t\\t\\t\\tvar props = Object.keys(parentObj);\\n\\n\\t\\t\\t\\tfor (let i = 0; i < props.length; i++) {\\n\\t\\t\\t\\t\\tif (${JSON.stringify(\n              n,\n            )}.indexOf(props[i]) === -1) {\\n\\t\\t\\t\\t\\t\\tinvalidProps.push(props[i]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (invalidProps.length) {\\n\\t\\t\\t`,\n          ),\n            'remove' == t.strict\n              ? r.push(\n                  '\\n\\t\\t\\t\\t\\tinvalidProps.forEach(function(field) {\\n\\t\\t\\t\\t\\t\\tdelete parentObj[field];\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t',\n                )\n              : r.push(\n                  `\\n\\t\\t\\t\\t\\t${this.makeError({\n                    type: 'objectStrict',\n                    expected: '\"' + n.join(', ') + '\"',\n                    actual: \"invalidProps.join(', ')\",\n                    messages: e,\n                  })}\\n\\t\\t\\t\\t`,\n                ),\n            r.push('\\n\\t\\t\\t\\t}\\n\\t\\t\\t');\n        }\n      }\n      return (\n        (null == t.minProps && null == t.maxProps) ||\n          (t.strict\n            ? r.push(\n                `\\n\\t\\t\\t\\tprops = Object.keys(${\n                  s ? 'parentObj' : 'value'\n                });\\n\\t\\t\\t`,\n              )\n            : r.push(\n                `\\n\\t\\t\\t\\tvar props = Object.keys(${\n                  s ? 'parentObj' : 'value'\n                });\\n\\t\\t\\t\\t${s ? 'field = parentField;' : ''}\\n\\t\\t\\t`,\n              )),\n        null != t.minProps &&\n          r.push(\n            `\\n\\t\\t\\tif (props.length < ${\n              t.minProps\n            }) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'objectMinProps',\n              expected: t.minProps,\n              actual: 'props.length',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.maxProps &&\n          r.push(\n            `\\n\\t\\t\\tif (props.length > ${\n              t.maxProps\n            }) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'objectMaxProps',\n              expected: t.maxProps,\n              actual: 'props.length',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        s\n          ? r.push('\\n\\t\\t\\treturn parentObj;\\n\\t\\t')\n          : r.push('\\n\\t\\t\\treturn value;\\n\\t\\t'),\n        { source: r.join('\\n') }\n      );\n    },\n    me = function ({ schema: t, messages: e, index: n }, i, r) {\n      const s = [];\n      return (\n        r.customs[n]\n          ? (r.customs[n].schema = t)\n          : (r.customs[n] = { schema: t }),\n        s.push(\n          `\\n\\t\\tconst ObjectID = context.customs[${n}].schema.ObjectID;\\n\\t\\tif (!ObjectID.isValid(value)) {\\n\\t\\t\\t${this.makeError(\n            { type: 'objectID', actual: 'value', messages: e },\n          )}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t`,\n        ),\n        !0 === t.convert\n          ? s.push('return new ObjectID(value)')\n          : 'hexString' === t.convert\n          ? s.push('return value.toString()')\n          : s.push('return value'),\n        { source: s.join('\\n') }\n      );\n    };\n  const ve = /^-?[0-9]\\d*(\\.\\d+)?$/,\n    ye = /^[a-zA-Z]+$/,\n    ge = /^[a-zA-Z0-9]+$/,\n    be = /^[a-zA-Z0-9_-]+$/,\n    ke = /^[0-9a-fA-F]+$/,\n    xe = /^(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n  var we = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      let s = !1;\n      if (\n        (!0 === t.convert &&\n          ((s = !0),\n          r.push(\n            '\\n\\t\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t\\tvalue = String(value);\\n\\t\\t\\t}\\n\\t\\t',\n          )),\n        r.push(\n          `\\n\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t${this.makeError({\n            type: 'string',\n            actual: 'value',\n            messages: e,\n          })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tvar origValue = value;\\n\\t`,\n        ),\n        t.trim && ((s = !0), r.push('\\n\\t\\t\\tvalue = value.trim();\\n\\t\\t')),\n        t.trimLeft &&\n          ((s = !0), r.push('\\n\\t\\t\\tvalue = value.trimLeft();\\n\\t\\t')),\n        t.trimRight &&\n          ((s = !0), r.push('\\n\\t\\t\\tvalue = value.trimRight();\\n\\t\\t')),\n        t.padStart)\n      ) {\n        s = !0;\n        const e = null != t.padChar ? t.padChar : ' ';\n        r.push(\n          `\\n\\t\\t\\tvalue = value.padStart(${t.padStart}, ${JSON.stringify(\n            e,\n          )});\\n\\t\\t`,\n        );\n      }\n      if (t.padEnd) {\n        s = !0;\n        const e = null != t.padChar ? t.padChar : ' ';\n        r.push(\n          `\\n\\t\\t\\tvalue = value.padEnd(${t.padEnd}, ${JSON.stringify(\n            e,\n          )});\\n\\t\\t`,\n        );\n      }\n      if (\n        (t.lowercase &&\n          ((s = !0), r.push('\\n\\t\\t\\tvalue = value.toLowerCase();\\n\\t\\t')),\n        t.uppercase &&\n          ((s = !0), r.push('\\n\\t\\t\\tvalue = value.toUpperCase();\\n\\t\\t')),\n        t.localeLowercase &&\n          ((s = !0),\n          r.push('\\n\\t\\t\\tvalue = value.toLocaleLowerCase();\\n\\t\\t')),\n        t.localeUppercase &&\n          ((s = !0),\n          r.push('\\n\\t\\t\\tvalue = value.toLocaleUpperCase();\\n\\t\\t')),\n        r.push('\\n\\t\\t\\tvar len = value.length;\\n\\t'),\n        !1 === t.empty &&\n          r.push(\n            `\\n\\t\\t\\tif (len === 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'stringEmpty',\n              actual: 'value',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.min &&\n          r.push(\n            `\\n\\t\\t\\tif (len < ${t.min}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'stringMin',\n              expected: t.min,\n              actual: 'len',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.max &&\n          r.push(\n            `\\n\\t\\t\\tif (len > ${t.max}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'stringMax',\n              expected: t.max,\n              actual: 'len',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.length &&\n          r.push(\n            `\\n\\t\\t\\tif (len !== ${t.length}) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'stringLength',\n              expected: t.length,\n              actual: 'len',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.pattern)\n      ) {\n        let n = t.pattern;\n        'string' == typeof t.pattern &&\n          (n = new RegExp(t.pattern, t.patternFlags));\n        const i = `\\n\\t\\t\\tif (!${n.toString()}.test(value))\\n\\t\\t\\t\\t${this.makeError(\n          {\n            type: 'stringPattern',\n            expected: `\"${n.toString().replace(/\"/g, '\\\\$&')}\"`,\n            actual: 'origValue',\n            messages: e,\n          },\n        )}\\n\\t\\t`;\n        r.push(\n          `\\n\\t\\t\\tif (${t.empty} === true && len === 0) {\\n\\t\\t\\t\\t// Do nothing\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t${i}\\n\\t\\t\\t}\\n\\t\\t`,\n        );\n      }\n      if (\n        (null != t.contains &&\n          r.push(\n            `\\n\\t\\t\\tif (value.indexOf(\"${\n              t.contains\n            }\") === -1) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'stringContains',\n              expected: '\"' + t.contains + '\"',\n              actual: 'origValue',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.enum)\n      ) {\n        const n = JSON.stringify(t.enum);\n        r.push(\n          `\\n\\t\\t\\tif (${n}.indexOf(value) === -1) {\\n\\t\\t\\t\\t${this.makeError({\n            type: 'stringEnum',\n            expected: '\"' + t.enum.join(', ') + '\"',\n            actual: 'origValue',\n            messages: e,\n          })}\\n\\t\\t\\t}\\n\\t\\t`,\n        );\n      }\n      return (\n        !0 === t.numeric &&\n          r.push(\n            `\\n\\t\\t\\tif (!${ve.toString()}.test(value) ) {\\n\\t\\t\\t\\t${this.makeError(\n              { type: 'stringNumeric', actual: 'origValue', messages: e },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.alpha &&\n          r.push(\n            `\\n\\t\\t\\tif(!${ye.toString()}.test(value)) {\\n\\t\\t\\t\\t${this.makeError(\n              { type: 'stringAlpha', actual: 'origValue', messages: e },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.alphanum &&\n          r.push(\n            `\\n\\t\\t\\tif(!${ge.toString()}.test(value)) {\\n\\t\\t\\t\\t${this.makeError(\n              { type: 'stringAlphanum', actual: 'origValue', messages: e },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.alphadash &&\n          r.push(\n            `\\n\\t\\t\\tif(!${be.toString()}.test(value)) {\\n\\t\\t\\t\\t${this.makeError(\n              { type: 'stringAlphadash', actual: 'origValue', messages: e },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.hex &&\n          r.push(\n            `\\n\\t\\t\\tif(value.length % 2 !== 0 || !${ke.toString()}.test(value)) {\\n\\t\\t\\t\\t${this.makeError(\n              { type: 'stringHex', actual: 'origValue', messages: e },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.singleLine &&\n          r.push(\n            `\\n\\t\\t\\tif(value.includes(\"\\\\n\")) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'stringSingleLine',\n              messages: e,\n            })}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        !0 === t.base64 &&\n          r.push(\n            `\\n\\t\\t\\tif(!${xe.toString()}.test(value)) {\\n\\t\\t\\t\\t${this.makeError(\n              { type: 'stringBase64', actual: 'origValue', messages: e },\n            )}\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        r.push('\\n\\t\\treturn value;\\n\\t'),\n        { sanitized: s, source: r.join('\\n') }\n      );\n    },\n    Ce = function ({ schema: t, messages: e }, n, i) {\n      const r = [];\n      if (null != t.items) {\n        if (!Array.isArray(t.items))\n          throw new Error(\n            `Invalid '${t.type}' schema. The 'items' field must be an array.`,\n          );\n        if (0 === t.items.length)\n          throw new Error(\n            `Invalid '${t.type}' schema. The 'items' field must not be an empty array.`,\n          );\n      }\n      if (\n        (r.push(\n          `\\n\\t\\tif (!Array.isArray(value)) {\\n\\t\\t\\t${this.makeError({\n            type: 'tuple',\n            actual: 'value',\n            messages: e,\n          })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tvar len = value.length;\\n\\t`,\n        ),\n        !1 === t.empty &&\n          r.push(\n            `\\n\\t\\t\\tif (len === 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'tupleEmpty',\n              actual: 'value',\n              messages: e,\n            })}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n        null != t.items)\n      ) {\n        r.push(\n          `\\n\\t\\t\\tif (${\n            t.empty\n          } !== false && len === 0) {\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (len !== ${\n            t.items.length\n          }) {\\n\\t\\t\\t\\t${this.makeError({\n            type: 'tupleLength',\n            expected: t.items.length,\n            actual: 'len',\n            messages: e,\n          })}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\t\\t`,\n        ),\n          r.push(\n            '\\n\\t\\t\\tvar arr = value;\\n\\t\\t\\tvar parentField = field;\\n\\t\\t',\n          );\n        for (let e = 0; e < t.items.length; e++) {\n          const s = `${n}[${e}]`,\n            a = this.getRuleFromSchema(t.items[e]),\n            o = `\\n\\t\\t\\tarr[${e}] = context.fn[%%INDEX%%](arr[${e}], (parentField ? parentField : \"\") + \"[\" + ${e} + \"]\", parent, errors, context);\\n\\t\\t`;\n          r.push(this.compileRule(a, i, s, o, `arr[${e}]`));\n        }\n      }\n      return r.push('\\n\\t\\treturn value;\\n\\t'), { source: r.join('\\n') };\n    };\n  const Oe = /^https?:\\/\\/\\S+/;\n  var Ie = function ({ schema: t, messages: e }, n, i) {\n    const r = [];\n    return (\n      r.push(\n        `\\n\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t${this.makeError({\n          type: 'string',\n          actual: 'value',\n          messages: e,\n        })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\t`,\n      ),\n      t.empty\n        ? r.push('\\n\\t\\t\\tif (value.length === 0) return value;\\n\\t\\t')\n        : r.push(\n            `\\n\\t\\t\\tif (value.length === 0) {\\n\\t\\t\\t\\t${this.makeError({\n              type: 'urlEmpty',\n              actual: 'value',\n              messages: e,\n            })}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\t\\t`,\n          ),\n      r.push(\n        `\\n\\t\\tif (!${Oe.toString()}.test(value)) {\\n\\t\\t\\t${this.makeError({\n          type: 'url',\n          actual: 'value',\n          messages: e,\n        })}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t`,\n      ),\n      { source: r.join('\\n') }\n    );\n  };\n  const Pe = /^([0-9a-f]{8}-[0-9a-f]{4}-[1-6][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}|[0]{8}-[0]{4}-[0]{4}-[0]{4}-[0]{12})$/i;\n  var Ee = function ({ schema: t, messages: e }, n) {\n    const i = [];\n    return (\n      i.push(\n        `\\n\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t${this.makeError({\n          type: 'string',\n          actual: 'value',\n          messages: e,\n        })}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tvar val = value.toLowerCase();\\n\\t\\tif (!${Pe.toString()}.test(val)) {\\n\\t\\t\\t${this.makeError(\n          { type: 'uuid', actual: 'value', messages: e },\n        )}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tconst version = val.charAt(14) | 0;\\n\\t`,\n      ),\n      parseInt(t.version) < 7 &&\n        i.push(\n          `\\n\\t\\t\\tif (${t.version} !== version) {\\n\\t\\t\\t\\t${this.makeError({\n            type: 'uuidVersion',\n            expected: t.version,\n            actual: 'version',\n            messages: e,\n          })}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\t\\t`,\n        ),\n      i.push(\n        `\\n\\t\\tswitch (version) {\\n\\t\\tcase 0:\\n\\t\\tcase 1:\\n\\t\\tcase 2:\\n\\t\\tcase 6:\\n\\t\\t\\tbreak;\\n\\t\\tcase 3:\\n\\t\\tcase 4:\\n\\t\\tcase 5:\\n\\t\\t\\tif ([\"8\", \"9\", \"a\", \"b\"].indexOf(val.charAt(19)) === -1) {\\n\\t\\t\\t\\t${this.makeError(\n          { type: 'uuid', actual: 'value', messages: e },\n        )}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t`,\n      ),\n      { source: i.join('\\n') }\n    );\n  };\n  const Ae = /^((([a-f0-9][a-f0-9]+[-]){5}|([a-f0-9][a-f0-9]+[:]){5})([a-f0-9][a-f0-9])$)|(^([a-f0-9][a-f0-9][a-f0-9][a-f0-9]+[.]){2}([a-f0-9][a-f0-9][a-f0-9][a-f0-9]))$/i;\n  var _e = function ({ schema: t, messages: e }, n, i) {\n      return {\n        source: `\\n\\t\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t\\t${this.makeError(\n          { type: 'string', actual: 'value', messages: e },\n        )}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar v = value.toLowerCase();\\n\\t\\t\\tif (!${Ae.toString()}.test(v)) {\\n\\t\\t\\t\\t${this.makeError(\n          { type: 'mac', actual: 'value', messages: e },\n        )}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn value;\\n\\t\\t`,\n      };\n    },\n    Te = function ({ schema: t, messages: e }, n, i) {\n      return {\n        source: `\\n\\t\\t\\tif (typeof value !== \"string\") {\\n\\t\\t\\t\\t${this.makeError(\n          { type: 'string', actual: 'value', messages: e },\n        )}\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (typeof value !== \"string\")\\n\\t\\t\\t\\tvalue = String(value);\\n\\n\\t\\t\\tval = value.replace(/\\\\D+/g, \"\");\\n\\n\\t\\t\\tvar array = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];\\n\\t\\t\\tvar len = val ? val.length : 0,\\n\\t\\t\\t\\tbit = 1,\\n\\t\\t\\t\\tsum = 0;\\n\\t\\t\\twhile (len--) {\\n\\t\\t\\t\\tsum += !(bit ^= 1) ? parseInt(val[len], 10) : array[val[len]];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!(sum % 10 === 0 && sum > 0)) {\\n\\t\\t\\t\\t${this.makeError(\n          { type: 'luhn', actual: 'value', messages: e },\n        )}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value;\\n\\t\\t`,\n      };\n    };\n  function De(t) {\n    var e = { exports: {} };\n    return t(e, e.exports), e.exports;\n  }\n  function Me(t) {\n    throw new Error(\n      'Could not dynamically require \"' +\n        t +\n        '\". Please configure the dynamicRequireTargets option of @rollup/plugin-commonjs appropriately for this require call to behave properly.',\n    );\n  }\n  let Se, je, Ve, Ne;\n  var $e = function (t) {\n    Se ||\n      ((Se = Me('prettier')),\n      (je = {\n        parser: 'babel',\n        useTabs: !1,\n        printWidth: 120,\n        trailingComma: 'none',\n        tabWidth: 4,\n        singleQuote: !1,\n        semi: !0,\n        bracketSpacing: !0,\n      }),\n      (Ve = Me('cli-highlight')),\n      (Ne = {\n        language: 'js',\n        theme: Ve.fromJson({\n          keyword: ['white', 'bold'],\n          built_in: 'magenta',\n          literal: 'cyan',\n          number: 'magenta',\n          regexp: 'red',\n          string: ['yellow', 'bold'],\n          symbol: 'plain',\n          class: 'blue',\n          attr: 'plain',\n          function: ['white', 'bold'],\n          title: 'plain',\n          params: 'green',\n          comment: 'grey',\n        }),\n      }));\n    const e = Se.format(t, je);\n    return Ve.highlight(e, Ne);\n  };\n  var Be = class {\n      constructor(t) {\n        if (\n          ((this.opts = {}),\n          (this.defaults = {}),\n          (this.messages = Object.assign({}, Ht)),\n          (this.rules = {\n            any: Ut,\n            array: Qt,\n            boolean: Xt,\n            class: Zt,\n            custom: Yt,\n            currency: te,\n            date: ee,\n            email: re,\n            enum: se,\n            equal: ae,\n            forbidden: oe,\n            function: ue,\n            multi: le,\n            number: ce,\n            object: fe,\n            objectID: me,\n            string: we,\n            tuple: Ce,\n            url: Ie,\n            uuid: Ee,\n            mac: _e,\n            luhn: Te,\n          }),\n          (this.aliases = {}),\n          (this.cache = new Map()),\n          t)\n        ) {\n          if (\n            (Wt(this.opts, t),\n            t.defaults && Wt(this.defaults, t.defaults),\n            t.messages)\n          )\n            for (const e in t.messages) this.addMessage(e, t.messages[e]);\n          if (t.aliases) for (const e in t.aliases) this.alias(e, t.aliases[e]);\n          if (t.customRules)\n            for (const e in t.customRules) this.add(e, t.customRules[e]);\n          if (t.plugins) {\n            const e = t.plugins;\n            if (!Array.isArray(e))\n              throw new Error('Plugins type must be array');\n            e.forEach(this.plugin.bind(this));\n          }\n        }\n      }\n      validate(t, e) {\n        return this.compile(e)(t);\n      }\n      wrapRequiredCheckSourceCode(t, e, n, i) {\n        const r = [];\n        let s,\n          a = !0 === t.schema.optional || 'forbidden' === t.schema.type,\n          o =\n            !0 === t.schema.optional ||\n            !0 === t.schema.nullable ||\n            'forbidden' === t.schema.type;\n        if (null != t.schema.default) {\n          let e;\n          (a = !1),\n            !0 !== t.schema.nullable && (o = !1),\n            'function' == typeof t.schema.default\n              ? (n.customs[t.index] || (n.customs[t.index] = {}),\n                (n.customs[t.index].defaultFn = t.schema.default),\n                (e = `context.customs[${t.index}].defaultFn()`))\n              : (e = JSON.stringify(t.schema.default)),\n            (s = `\\n\\t\\t\\t\\tvalue = ${e};\\n\\t\\t\\t\\t${i} = value;\\n\\t\\t\\t`);\n        } else\n          s = this.makeError({\n            type: 'required',\n            actual: 'value',\n            messages: t.messages,\n          });\n        return (\n          r.push(\n            `\\n\\t\\t\\tif (value === undefined) { ${\n              a ? '\\n// allow undefined\\n' : s\n            } }\\n\\t\\t\\telse if (value === null) { ${\n              o ? '\\n// allow null\\n' : s\n            } }\\n\\t\\t\\t${e ? `else { ${e} }` : ''}\\n\\t\\t`,\n          ),\n          r.join('\\n')\n        );\n      }\n      compile(t) {\n        if (null === t || 'object' != typeof t)\n          throw new Error('Invalid schema.');\n        const e = this,\n          n = { index: 0, rules: [], fn: [], customs: {} };\n        if ((this.cache.clear(), !0 !== t.$$root))\n          if (Array.isArray(t)) {\n            t = this.getRuleFromSchema(t).schema;\n          } else {\n            const e = Object.assign({}, t);\n            (t = { type: 'object', strict: e.$$strict, properties: e }),\n              delete e.$$strict;\n          }\n        const i = ['var errors = [];', 'var field;', 'var parent = null;'],\n          r = this.getRuleFromSchema(t);\n        i.push(\n          this.compileRule(\n            r,\n            n,\n            null,\n            'context.fn[%%INDEX%%](value, field, null, errors, context);',\n            'value',\n          ),\n        ),\n          i.push('if (errors.length) {'),\n          i.push(\n            '\\n\\t\\t\\treturn errors.map(err => {\\n\\t\\t\\t\\tif (err.message)\\n\\t\\t\\t\\t\\terr.message = err.message\\n\\t\\t\\t\\t\\t\\t.replace(/\\\\{field\\\\}/g, err.field || \"\")\\n\\t\\t\\t\\t\\t\\t.replace(/\\\\{expected\\\\}/g, err.expected != null ? err.expected : \"\")\\n\\t\\t\\t\\t\\t\\t.replace(/\\\\{actual\\\\}/g, err.actual != null ? err.actual : \"\");\\n\\n\\t\\t\\t\\treturn err;\\n\\t\\t\\t});\\n\\t\\t',\n          ),\n          i.push('}'),\n          i.push('return true;');\n        const s = i.join('\\n'),\n          a = new Function('value', 'context', s);\n        if (this.opts.debug) {\n          let t = function (t) {\n            return t;\n          };\n          'undefined' == typeof window && (t = $e),\n            n.fn.forEach((e, n) =>\n              console.log(t(`// Context.fn[${n}]\\n` + e.toString())),\n            ),\n            console.log(t('// Main check function\\n' + a.toString()));\n        }\n        return (\n          this.cache.clear(),\n          function (t) {\n            return (n.data = t), a.call(e, t, n);\n          }\n        );\n      }\n      compileRule(t, e, n, i, r) {\n        const s = [],\n          a = this.cache.get(t.schema);\n        if (a)\n          ((t = a).cycle = !0),\n            (t.cycleStack = []),\n            s.push(\n              this.wrapRequiredCheckSourceCode(\n                t,\n                `\\n\\t\\t\\t\\tvar rule = context.rules[${\n                  t.index\n                }];\\n\\t\\t\\t\\tif (rule.cycleStack.indexOf(value) === -1) {\\n\\t\\t\\t\\t\\trule.cycleStack.push(value);\\n\\t\\t\\t\\t\\t${i.replace(\n                  /%%INDEX%%/g,\n                  t.index,\n                )}\\n\\t\\t\\t\\t\\trule.cycleStack.pop(value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t`,\n                e,\n                r,\n              ),\n            );\n        else {\n          this.cache.set(t.schema, t),\n            (t.index = e.index),\n            (e.rules[e.index] = t);\n          const a = null != n ? n : '$$root';\n          e.index++;\n          const o = t.ruleFunction.call(this, t, n, e);\n          o.source = o.source.replace(/%%INDEX%%/g, t.index);\n          const u = new Function(\n            'value',\n            'field',\n            'parent',\n            'errors',\n            'context',\n            o.source,\n          );\n          (e.fn[t.index] = u),\n            s.push(\n              this.wrapRequiredCheckSourceCode(\n                t,\n                i.replace(/%%INDEX%%/g, t.index),\n                e,\n                r,\n              ),\n            ),\n            s.push(\n              this.makeCustomValidator({\n                vName: r,\n                path: a,\n                schema: t.schema,\n                context: e,\n                messages: t.messages,\n                ruleIndex: t.index,\n              }),\n            );\n        }\n        return s.join('\\n');\n      }\n      getRuleFromSchema(t) {\n        if ('string' == typeof t) t = this.parseShortHand(t);\n        else if (Array.isArray(t)) {\n          if (0 == t.length) throw new Error('Invalid schema.');\n          (t = { type: 'multi', rules: t }).rules\n            .map((t) => this.getRuleFromSchema(t))\n            .every((t) => 1 == t.schema.optional) && (t.optional = !0);\n        }\n        if (t.$$type) {\n          const e = t.$$type,\n            n = this.getRuleFromSchema(e).schema;\n          delete t.$$type;\n          const i = Object.assign({}, t);\n          for (const e in t) delete t[e];\n          Wt(t, n, { skipIfExist: !0 }), (t.props = i);\n        }\n        const e = this.aliases[t.type];\n        e && (delete t.type, (t = Wt(t, e, { skipIfExist: !0 })));\n        const n = this.rules[t.type];\n        if (!n)\n          throw new Error(\"Invalid '\" + t.type + \"' type in validator schema.\");\n        return {\n          messages: Object.assign({}, this.messages, t.messages),\n          schema: Wt(t, this.defaults[t.type], { skipIfExist: !0 }),\n          ruleFunction: n,\n        };\n      }\n      parseShortHand(t) {\n        const e = t.split('|').map((t) => t.trim());\n        let n,\n          i = e[0];\n        return (\n          (n = i.endsWith('[]')\n            ? this.getRuleFromSchema({ type: 'array', items: i.slice(0, -2) })\n                .schema\n            : { type: e[0] }),\n          e.slice(1).map((t) => {\n            const e = t.indexOf(':');\n            if (-1 !== e) {\n              const i = t.substr(0, e).trim();\n              let r = t.substr(e + 1).trim();\n              'true' === r || 'false' === r\n                ? (r = 'true' === r)\n                : Number.isNaN(Number(r)) || (r = Number(r)),\n                (n[i] = r);\n            } else t.startsWith('no-') ? (n[t.slice(3)] = !1) : (n[t] = !0);\n          }),\n          n\n        );\n      }\n      makeError({ type: t, field: e, expected: n, actual: i, messages: r }) {\n        const s = { type: `\"${t}\"`, message: `\"${r[t]}\"` };\n        (s.field = e ? `\"${e}\"` : 'field'),\n          null != n && (s.expected = n),\n          null != i && (s.actual = i);\n        return `errors.push({ ${Object.keys(s)\n          .map((t) => `${t}: ${s[t]}`)\n          .join(', ')} });`;\n      }\n      makeCustomValidator({\n        vName: t = 'value',\n        fnName: e = 'custom',\n        ruleIndex: n,\n        path: i,\n        schema: r,\n        context: s,\n        messages: a,\n      }) {\n        const o = 'rule' + n,\n          u = 'fnCustomErrors' + n;\n        if ('function' == typeof r[e]) {\n          if (\n            (s.customs[n]\n              ? ((s.customs[n].messages = a), (s.customs[n].schema = r))\n              : (s.customs[n] = { messages: a, schema: r }),\n            this.opts.useNewCustomCheckerFunction)\n          )\n            return `\\n               const ${o} = context.customs[${n}];\\n\\t\\t\\t\\t\\tconst ${u} = [];\\n\\t\\t\\t\\t\\t${t} = ${o}.schema.${e}.call(this, ${t}, ${u} , ${o}.schema, \"${i}\", parent, context);\\n\\t\\t\\t\\t\\tif (Array.isArray(${u} )) {\\n                  ${u} .forEach(err => errors.push(Object.assign({ message: ${o}.messages[err.type], field }, err)));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t`;\n          const l = 'res_' + o;\n          return `\\n\\t\\t\\t\\tconst ${o} = context.customs[${n}];\\n\\t\\t\\t\\tconst ${l} = ${o}.schema.${e}.call(this, ${t}, ${o}.schema, \"${i}\", parent, context);\\n\\t\\t\\t\\tif (Array.isArray(${l})) {\\n\\t\\t\\t\\t\\t${l}.forEach(err => errors.push(Object.assign({ message: ${o}.messages[err.type], field }, err)));\\n\\t\\t\\t\\t}\\n\\t\\t`;\n        }\n        return '';\n      }\n      add(t, e) {\n        this.rules[t] = e;\n      }\n      addMessage(t, e) {\n        this.messages[t] = e;\n      }\n      alias(t, e) {\n        if (this.rules[t])\n          throw new Error('Alias name must not be a rule name');\n        this.aliases[t] = e;\n      }\n      plugin(t) {\n        if ('function' != typeof t)\n          throw new Error('Plugin fn type must be function');\n        return t(this);\n      }\n    },\n    Le = 'INUMBER',\n    Re = 'IOP1',\n    Fe = 'IOP2',\n    ze = 'IOP3',\n    Ge = 'IVAR',\n    qe = 'IVARNAME',\n    Ke = 'IFUNCALL',\n    Je = 'IFUNDEF',\n    We = 'IEXPR',\n    He = 'IEXPREVAL',\n    Ue = 'IMEMBER',\n    Qe = 'IENDSTATEMENT',\n    Xe = 'IARRAY';\n  function Ze(t, e) {\n    (this.type = t), (this.value = null != e ? e : 0);\n  }\n  function Ye(t) {\n    return new Ze(Re, t);\n  }\n  function tn(t) {\n    return new Ze(Fe, t);\n  }\n  function en(t) {\n    return new Ze(ze, t);\n  }\n  function nn(t, e, n, i, r) {\n    for (var s, a, o, u, l = [], c = [], h = 0; h < t.length; h++) {\n      var p = t[h],\n        d = p.type;\n      if (d === Le || d === qe)\n        Array.isArray(p.value)\n          ? l.push.apply(\n              l,\n              nn(\n                p.value\n                  .map(function (t) {\n                    return new Ze(Le, t);\n                  })\n                  .concat(new Ze(Xe, p.value.length)),\n                e,\n                n,\n                i,\n                r,\n              ),\n            )\n          : l.push(p);\n      else if (d === Ge && r.hasOwnProperty(p.value))\n        (p = new Ze(Le, r[p.value])), l.push(p);\n      else if (d === Fe && l.length > 1)\n        (a = l.pop()),\n          (s = l.pop()),\n          (u = n[p.value]),\n          (p = new Ze(Le, u(s.value, a.value))),\n          l.push(p);\n      else if (d === ze && l.length > 2)\n        (o = l.pop()),\n          (a = l.pop()),\n          (s = l.pop()),\n          '?' === p.value\n            ? l.push(s.value ? a.value : o.value)\n            : ((u = i[p.value]),\n              (p = new Ze(Le, u(s.value, a.value, o.value))),\n              l.push(p));\n      else if (d === Re && l.length > 0)\n        (s = l.pop()),\n          (u = e[p.value]),\n          (p = new Ze(Le, u(s.value))),\n          l.push(p);\n      else if (d === We) {\n        for (; l.length > 0; ) c.push(l.shift());\n        c.push(new Ze(We, nn(p.value, e, n, i, r)));\n      } else if (d === Ue && l.length > 0)\n        (s = l.pop()), l.push(new Ze(Le, s.value[p.value]));\n      else {\n        for (; l.length > 0; ) c.push(l.shift());\n        c.push(p);\n      }\n    }\n    for (; l.length > 0; ) c.push(l.shift());\n    return c;\n  }\n  function rn(t, e, n) {\n    for (var i = [], r = 0; r < t.length; r++) {\n      var s = t[r],\n        a = s.type;\n      if (a === Ge && s.value === e)\n        for (var o = 0; o < n.tokens.length; o++) {\n          var u,\n            l = n.tokens[o];\n          (u =\n            l.type === Re\n              ? Ye(l.value)\n              : l.type === Fe\n              ? tn(l.value)\n              : l.type === ze\n              ? en(l.value)\n              : new Ze(l.type, l.value)),\n            i.push(u);\n        }\n      else a === We ? i.push(new Ze(We, rn(s.value, e, n))) : i.push(s);\n    }\n    return i;\n  }\n  function sn(t, e, n) {\n    var i,\n      r,\n      s,\n      a,\n      o,\n      u,\n      l = [];\n    if (on(t)) return un(t, n);\n    for (var c = t.length, h = 0; h < c; h++) {\n      var p = t[h],\n        d = p.type;\n      if (d === Le || d === qe) l.push(p.value);\n      else if (d === Fe)\n        (r = l.pop()),\n          (i = l.pop()),\n          'and' === p.value\n            ? l.push(!!i && !!sn(r, e, n))\n            : 'or' === p.value\n            ? l.push(!!i || !!sn(r, e, n))\n            : '=' === p.value\n            ? ((a = e.binaryOps[p.value]), l.push(a(i, sn(r, e, n), n)))\n            : ((a = e.binaryOps[p.value]), l.push(a(un(i, n), un(r, n))));\n      else if (d === ze)\n        (s = l.pop()),\n          (r = l.pop()),\n          (i = l.pop()),\n          '?' === p.value\n            ? l.push(sn(i ? r : s, e, n))\n            : ((a = e.ternaryOps[p.value]),\n              l.push(a(un(i, n), un(r, n), un(s, n))));\n      else if (d === Ge)\n        if (p.value in e.functions) l.push(e.functions[p.value]);\n        else if (p.value in e.unaryOps && e.parser.isOperatorEnabled(p.value))\n          l.push(e.unaryOps[p.value]);\n        else {\n          var f = n[p.value];\n          if (void 0 === f) throw new Error('undefined variable: ' + p.value);\n          l.push(f);\n        }\n      else if (d === Re)\n        (i = l.pop()), (a = e.unaryOps[p.value]), l.push(a(un(i, n)));\n      else if (d === Ke) {\n        for (u = p.value, o = []; u-- > 0; ) o.unshift(un(l.pop(), n));\n        if (!(a = l.pop()).apply || !a.call)\n          throw new Error(a + ' is not a function');\n        l.push(a.apply(void 0, o));\n      } else if (d === Je)\n        l.push(\n          (function () {\n            for (var t = l.pop(), i = [], r = p.value; r-- > 0; )\n              i.unshift(l.pop());\n            var s = l.pop(),\n              a = function () {\n                for (\n                  var r = Object.assign({}, n), s = 0, a = i.length;\n                  s < a;\n                  s++\n                )\n                  r[i[s]] = arguments[s];\n                return sn(t, e, r);\n              };\n            return (\n              Object.defineProperty(a, 'name', { value: s, writable: !1 }),\n              (n[s] = a),\n              a\n            );\n          })(),\n        );\n      else if (d === We) l.push(an(p, e));\n      else if (d === He) l.push(p);\n      else if (d === Ue) (i = l.pop()), l.push(i[p.value]);\n      else if (d === Qe) l.pop();\n      else {\n        if (d !== Xe) throw new Error('invalid Expression');\n        for (u = p.value, o = []; u-- > 0; ) o.unshift(l.pop());\n        l.push(o);\n      }\n    }\n    if (l.length > 1) throw new Error('invalid Expression (parity)');\n    return 0 === l[0] ? 0 : un(l[0], n);\n  }\n  function an(t, e, n) {\n    return on(t)\n      ? t\n      : {\n          type: He,\n          value: function (n) {\n            return sn(t.value, e, n);\n          },\n        };\n  }\n  function on(t) {\n    return t && t.type === He;\n  }\n  function un(t, e) {\n    return on(t) ? t.value(e) : t;\n  }\n  function ln(t, e) {\n    for (var n, i, r, s, a, o, u = [], l = 0; l < t.length; l++) {\n      var c = t[l],\n        h = c.type;\n      if (h === Le)\n        'number' == typeof c.value && c.value < 0\n          ? u.push('(' + c.value + ')')\n          : Array.isArray(c.value)\n          ? u.push('[' + c.value.map(cn).join(', ') + ']')\n          : u.push(cn(c.value));\n      else if (h === Fe)\n        (i = u.pop()),\n          (n = u.pop()),\n          (s = c.value),\n          e\n            ? '^' === s\n              ? u.push('Math.pow(' + n + ', ' + i + ')')\n              : 'and' === s\n              ? u.push('(!!' + n + ' && !!' + i + ')')\n              : 'or' === s\n              ? u.push('(!!' + n + ' || !!' + i + ')')\n              : '||' === s\n              ? u.push(\n                  '(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }((' +\n                    n +\n                    '),(' +\n                    i +\n                    ')))',\n                )\n              : '==' === s\n              ? u.push('(' + n + ' === ' + i + ')')\n              : '!=' === s\n              ? u.push('(' + n + ' !== ' + i + ')')\n              : '[' === s\n              ? u.push(n + '[(' + i + ') | 0]')\n              : u.push('(' + n + ' ' + s + ' ' + i + ')')\n            : '[' === s\n            ? u.push(n + '[' + i + ']')\n            : u.push('(' + n + ' ' + s + ' ' + i + ')');\n      else if (h === ze) {\n        if (\n          ((r = u.pop()), (i = u.pop()), (n = u.pop()), '?' !== (s = c.value))\n        )\n          throw new Error('invalid Expression');\n        u.push('(' + n + ' ? ' + i + ' : ' + r + ')');\n      } else if (h === Ge || h === qe) u.push(c.value);\n      else if (h === Re)\n        (n = u.pop()),\n          '-' === (s = c.value) || '+' === s\n            ? u.push('(' + s + n + ')')\n            : e\n            ? 'not' === s\n              ? u.push('(!' + n + ')')\n              : '!' === s\n              ? u.push('fac(' + n + ')')\n              : u.push(s + '(' + n + ')')\n            : '!' === s\n            ? u.push('(' + n + '!)')\n            : u.push('(' + s + ' ' + n + ')');\n      else if (h === Ke) {\n        for (o = c.value, a = []; o-- > 0; ) a.unshift(u.pop());\n        (s = u.pop()), u.push(s + '(' + a.join(', ') + ')');\n      } else if (h === Je) {\n        for (i = u.pop(), o = c.value, a = []; o-- > 0; ) a.unshift(u.pop());\n        (n = u.pop()),\n          e\n            ? u.push(\n                '(' +\n                  n +\n                  ' = function(' +\n                  a.join(', ') +\n                  ') { return ' +\n                  i +\n                  ' })',\n              )\n            : u.push('(' + n + '(' + a.join(', ') + ') = ' + i + ')');\n      } else if (h === Ue) (n = u.pop()), u.push(n + '.' + c.value);\n      else if (h === Xe) {\n        for (o = c.value, a = []; o-- > 0; ) a.unshift(u.pop());\n        u.push('[' + a.join(', ') + ']');\n      } else if (h === We) u.push('(' + ln(c.value, e) + ')');\n      else if (h !== Qe) throw new Error('invalid Expression');\n    }\n    return (\n      u.length > 1 && (u = e ? [u.join(',')] : [u.join(';')]), String(u[0])\n    );\n  }\n  function cn(t) {\n    return 'string' == typeof t\n      ? JSON.stringify(t)\n          .replace(/\\u2028/g, '\\\\u2028')\n          .replace(/\\u2029/g, '\\\\u2029')\n      : t;\n  }\n  function hn(t, e) {\n    for (var n = 0; n < t.length; n++) if (t[n] === e) return !0;\n    return !1;\n  }\n  function pn(t, e, n) {\n    for (\n      var i = !!(n = n || {}).withMembers, r = null, s = 0;\n      s < t.length;\n      s++\n    ) {\n      var a = t[s];\n      a.type === Ge || a.type === qe\n        ? i || hn(e, a.value)\n          ? null !== r\n            ? (hn(e, r) || e.push(r), (r = a.value))\n            : (r = a.value)\n          : e.push(a.value)\n        : a.type === Ue && i && null !== r\n        ? (r += '.' + a.value)\n        : a.type === We\n        ? pn(a.value, e, n)\n        : null !== r && (hn(e, r) || e.push(r), (r = null));\n    }\n    null === r || hn(e, r) || e.push(r);\n  }\n  function dn(t, e) {\n    (this.tokens = t),\n      (this.parser = e),\n      (this.unaryOps = e.unaryOps),\n      (this.binaryOps = e.binaryOps),\n      (this.ternaryOps = e.ternaryOps),\n      (this.functions = e.functions);\n  }\n  (Ze.prototype.toString = function () {\n    switch (this.type) {\n      case Le:\n      case Re:\n      case Fe:\n      case ze:\n      case Ge:\n      case qe:\n      case Qe:\n        return this.value;\n      case Ke:\n        return 'CALL ' + this.value;\n      case Je:\n        return 'DEF ' + this.value;\n      case Xe:\n        return 'ARRAY ' + this.value;\n      case Ue:\n        return '.' + this.value;\n      default:\n        return 'Invalid Instruction';\n    }\n  }),\n    (dn.prototype.simplify = function (t) {\n      return (\n        (t = t || {}),\n        new dn(\n          nn(this.tokens, this.unaryOps, this.binaryOps, this.ternaryOps, t),\n          this.parser,\n        )\n      );\n    }),\n    (dn.prototype.substitute = function (t, e) {\n      return (\n        e instanceof dn || (e = this.parser.parse(String(e))),\n        new dn(rn(this.tokens, t, e), this.parser)\n      );\n    }),\n    (dn.prototype.evaluate = function (t) {\n      return (t = t || {}), sn(this.tokens, this, t);\n    }),\n    (dn.prototype.toString = function () {\n      return ln(this.tokens, !1);\n    }),\n    (dn.prototype.symbols = function (t) {\n      t = t || {};\n      var e = [];\n      return pn(this.tokens, e, t), e;\n    }),\n    (dn.prototype.variables = function (t) {\n      t = t || {};\n      var e = [];\n      pn(this.tokens, e, t);\n      var n = this.functions;\n      return e.filter(function (t) {\n        return !(t in n);\n      });\n    }),\n    (dn.prototype.toJSFunction = function (t, e) {\n      var n = this,\n        i = new Function(\n          t,\n          'with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return ' +\n            ln(this.simplify(e).tokens, !0) +\n            '; }',\n        );\n      return function () {\n        return i.apply(n, arguments);\n      };\n    });\n  var fn = 'TEOF',\n    mn = 'TOP',\n    vn = 'TNUMBER',\n    yn = 'TSTRING',\n    gn = 'TPAREN',\n    bn = 'TBRACKET',\n    kn = 'TCOMMA',\n    xn = 'TNAME',\n    wn = 'TSEMICOLON';\n  function Cn(t, e, n) {\n    (this.type = t), (this.value = e), (this.index = n);\n  }\n  function On(t, e) {\n    (this.pos = 0),\n      (this.current = null),\n      (this.unaryOps = t.unaryOps),\n      (this.binaryOps = t.binaryOps),\n      (this.ternaryOps = t.ternaryOps),\n      (this.consts = t.consts),\n      (this.expression = e),\n      (this.savedPosition = 0),\n      (this.savedCurrent = null),\n      (this.options = t.options),\n      (this.parser = t);\n  }\n  (Cn.prototype.toString = function () {\n    return this.type + ': ' + this.value;\n  }),\n    (On.prototype.newToken = function (t, e, n) {\n      return new Cn(t, e, null != n ? n : this.pos);\n    }),\n    (On.prototype.save = function () {\n      (this.savedPosition = this.pos), (this.savedCurrent = this.current);\n    }),\n    (On.prototype.restore = function () {\n      (this.pos = this.savedPosition), (this.current = this.savedCurrent);\n    }),\n    (On.prototype.next = function () {\n      return this.pos >= this.expression.length\n        ? this.newToken(fn, 'EOF')\n        : this.isWhitespace() || this.isComment()\n        ? this.next()\n        : this.isRadixInteger() ||\n          this.isNumber() ||\n          this.isOperator() ||\n          this.isString() ||\n          this.isParen() ||\n          this.isBracket() ||\n          this.isComma() ||\n          this.isSemicolon() ||\n          this.isNamedOp() ||\n          this.isConst() ||\n          this.isName()\n        ? this.current\n        : void this.parseError(\n            'Unknown character \"' + this.expression.charAt(this.pos) + '\"',\n          );\n    }),\n    (On.prototype.isString = function () {\n      var t = !1,\n        e = this.pos,\n        n = this.expression.charAt(e);\n      if (\"'\" === n || '\"' === n)\n        for (\n          var i = this.expression.indexOf(n, e + 1);\n          i >= 0 && this.pos < this.expression.length;\n\n        ) {\n          if (((this.pos = i + 1), '\\\\' !== this.expression.charAt(i - 1))) {\n            var r = this.expression.substring(e + 1, i);\n            (this.current = this.newToken(yn, this.unescape(r), e)), (t = !0);\n            break;\n          }\n          i = this.expression.indexOf(n, i + 1);\n        }\n      return t;\n    }),\n    (On.prototype.isParen = function () {\n      var t = this.expression.charAt(this.pos);\n      return (\n        ('(' === t || ')' === t) &&\n        ((this.current = this.newToken(gn, t)), this.pos++, !0)\n      );\n    }),\n    (On.prototype.isBracket = function () {\n      var t = this.expression.charAt(this.pos);\n      return (\n        !(('[' !== t && ']' !== t) || !this.isOperatorEnabled('[')) &&\n        ((this.current = this.newToken(bn, t)), this.pos++, !0)\n      );\n    }),\n    (On.prototype.isComma = function () {\n      return (\n        ',' === this.expression.charAt(this.pos) &&\n        ((this.current = this.newToken(kn, ',')), this.pos++, !0)\n      );\n    }),\n    (On.prototype.isSemicolon = function () {\n      return (\n        ';' === this.expression.charAt(this.pos) &&\n        ((this.current = this.newToken(wn, ';')), this.pos++, !0)\n      );\n    }),\n    (On.prototype.isConst = function () {\n      for (var t = this.pos, e = t; e < this.expression.length; e++) {\n        var n = this.expression.charAt(e);\n        if (\n          n.toUpperCase() === n.toLowerCase() &&\n          (e === this.pos || ('_' !== n && '.' !== n && (n < '0' || n > '9')))\n        )\n          break;\n      }\n      if (e > t) {\n        var i = this.expression.substring(t, e);\n        if (i in this.consts)\n          return (\n            (this.current = this.newToken(vn, this.consts[i])),\n            (this.pos += i.length),\n            !0\n          );\n      }\n      return !1;\n    }),\n    (On.prototype.isNamedOp = function () {\n      for (var t = this.pos, e = t; e < this.expression.length; e++) {\n        var n = this.expression.charAt(e);\n        if (\n          n.toUpperCase() === n.toLowerCase() &&\n          (e === this.pos || ('_' !== n && (n < '0' || n > '9')))\n        )\n          break;\n      }\n      if (e > t) {\n        var i = this.expression.substring(t, e);\n        if (\n          this.isOperatorEnabled(i) &&\n          (i in this.binaryOps || i in this.unaryOps || i in this.ternaryOps)\n        )\n          return (\n            (this.current = this.newToken(mn, i)), (this.pos += i.length), !0\n          );\n      }\n      return !1;\n    }),\n    (On.prototype.isName = function () {\n      for (var t = this.pos, e = t, n = !1; e < this.expression.length; e++) {\n        var i = this.expression.charAt(e);\n        if (i.toUpperCase() === i.toLowerCase()) {\n          if (e === this.pos && ('$' === i || '_' === i)) {\n            '_' === i && (n = !0);\n            continue;\n          }\n          if (e === this.pos || !n || ('_' !== i && (i < '0' || i > '9')))\n            break;\n        } else n = !0;\n      }\n      if (n) {\n        var r = this.expression.substring(t, e);\n        return (\n          (this.current = this.newToken(xn, r)), (this.pos += r.length), !0\n        );\n      }\n      return !1;\n    }),\n    (On.prototype.isWhitespace = function () {\n      for (\n        var t = !1, e = this.expression.charAt(this.pos);\n        !(\n          (' ' !== e && '\\t' !== e && '\\n' !== e && '\\r' !== e) ||\n          ((t = !0), this.pos++, this.pos >= this.expression.length)\n        );\n\n      )\n        e = this.expression.charAt(this.pos);\n      return t;\n    });\n  var In = /^[0-9a-f]{4}$/i;\n  function Pn(t, e, n) {\n    (this.parser = t),\n      (this.tokens = e),\n      (this.current = null),\n      (this.nextToken = null),\n      this.next(),\n      (this.savedCurrent = null),\n      (this.savedNextToken = null),\n      (this.allowMemberAccess = !1 !== n.allowMemberAccess);\n  }\n  (On.prototype.unescape = function (t) {\n    var e = t.indexOf('\\\\');\n    if (e < 0) return t;\n    for (var n = t.substring(0, e); e >= 0; ) {\n      var i = t.charAt(++e);\n      switch (i) {\n        case \"'\":\n          n += \"'\";\n          break;\n        case '\"':\n          n += '\"';\n          break;\n        case '\\\\':\n          n += '\\\\';\n          break;\n        case '/':\n          n += '/';\n          break;\n        case 'b':\n          n += '\\b';\n          break;\n        case 'f':\n          n += '\\f';\n          break;\n        case 'n':\n          n += '\\n';\n          break;\n        case 'r':\n          n += '\\r';\n          break;\n        case 't':\n          n += '\\t';\n          break;\n        case 'u':\n          var r = t.substring(e + 1, e + 5);\n          In.test(r) || this.parseError('Illegal escape sequence: \\\\u' + r),\n            (n += String.fromCharCode(parseInt(r, 16))),\n            (e += 4);\n          break;\n        default:\n          throw this.parseError('Illegal escape sequence: \"\\\\' + i + '\"');\n      }\n      ++e;\n      var s = t.indexOf('\\\\', e);\n      (n += t.substring(e, s < 0 ? t.length : s)), (e = s);\n    }\n    return n;\n  }),\n    (On.prototype.isComment = function () {\n      return (\n        '/' === this.expression.charAt(this.pos) &&\n        '*' === this.expression.charAt(this.pos + 1) &&\n        ((this.pos = this.expression.indexOf('*/', this.pos) + 2),\n        1 === this.pos && (this.pos = this.expression.length),\n        !0)\n      );\n    }),\n    (On.prototype.isRadixInteger = function () {\n      var t,\n        e,\n        n = this.pos;\n      if (n >= this.expression.length - 2 || '0' !== this.expression.charAt(n))\n        return !1;\n      if ((++n, 'x' === this.expression.charAt(n)))\n        (t = 16), (e = /^[0-9a-f]$/i), ++n;\n      else {\n        if ('b' !== this.expression.charAt(n)) return !1;\n        (t = 2), (e = /^[01]$/i), ++n;\n      }\n      for (var i = !1, r = n; n < this.expression.length; ) {\n        var s = this.expression.charAt(n);\n        if (!e.test(s)) break;\n        n++, (i = !0);\n      }\n      return (\n        i &&\n          ((this.current = this.newToken(\n            vn,\n            parseInt(this.expression.substring(r, n), t),\n          )),\n          (this.pos = n)),\n        i\n      );\n    }),\n    (On.prototype.isNumber = function () {\n      for (\n        var t, e = !1, n = this.pos, i = n, r = n, s = !1, a = !1;\n        n < this.expression.length &&\n        (((t = this.expression.charAt(n)) >= '0' && t <= '9') ||\n          (!s && '.' === t));\n\n      )\n        '.' === t ? (s = !0) : (a = !0), n++, (e = a);\n      if ((e && (r = n), 'e' === t || 'E' === t)) {\n        n++;\n        for (var o = !0, u = !1; n < this.expression.length; ) {\n          if (\n            ((t = this.expression.charAt(n)), !o || ('+' !== t && '-' !== t))\n          ) {\n            if (!(t >= '0' && t <= '9')) break;\n            (u = !0), (o = !1);\n          } else o = !1;\n          n++;\n        }\n        u || (n = r);\n      }\n      return (\n        e\n          ? ((this.current = this.newToken(\n              vn,\n              parseFloat(this.expression.substring(i, n)),\n            )),\n            (this.pos = n))\n          : (this.pos = r),\n        e\n      );\n    }),\n    (On.prototype.isOperator = function () {\n      var t = this.pos,\n        e = this.expression.charAt(this.pos);\n      if (\n        '+' === e ||\n        '-' === e ||\n        '*' === e ||\n        '/' === e ||\n        '%' === e ||\n        '^' === e ||\n        '?' === e ||\n        ':' === e ||\n        '.' === e\n      )\n        this.current = this.newToken(mn, e);\n      else if ('∙' === e || '•' === e) this.current = this.newToken(mn, '*');\n      else if ('>' === e)\n        '=' === this.expression.charAt(this.pos + 1)\n          ? ((this.current = this.newToken(mn, '>=')), this.pos++)\n          : (this.current = this.newToken(mn, '>'));\n      else if ('<' === e)\n        '=' === this.expression.charAt(this.pos + 1)\n          ? ((this.current = this.newToken(mn, '<=')), this.pos++)\n          : (this.current = this.newToken(mn, '<'));\n      else if ('|' === e) {\n        if ('|' !== this.expression.charAt(this.pos + 1)) return !1;\n        (this.current = this.newToken(mn, '||')), this.pos++;\n      } else if ('=' === e)\n        '=' === this.expression.charAt(this.pos + 1)\n          ? ((this.current = this.newToken(mn, '==')), this.pos++)\n          : (this.current = this.newToken(mn, e));\n      else {\n        if ('!' !== e) return !1;\n        '=' === this.expression.charAt(this.pos + 1)\n          ? ((this.current = this.newToken(mn, '!=')), this.pos++)\n          : (this.current = this.newToken(mn, e));\n      }\n      return (\n        this.pos++,\n        !!this.isOperatorEnabled(this.current.value) || ((this.pos = t), !1)\n      );\n    }),\n    (On.prototype.isOperatorEnabled = function (t) {\n      return this.parser.isOperatorEnabled(t);\n    }),\n    (On.prototype.getCoordinates = function () {\n      var t,\n        e = 0,\n        n = -1;\n      do {\n        e++, (t = this.pos - n), (n = this.expression.indexOf('\\n', n + 1));\n      } while (n >= 0 && n < this.pos);\n      return { line: e, column: t };\n    }),\n    (On.prototype.parseError = function (t) {\n      var e = this.getCoordinates();\n      throw new Error('parse error [' + e.line + ':' + e.column + ']: ' + t);\n    }),\n    (Pn.prototype.next = function () {\n      return (\n        (this.current = this.nextToken), (this.nextToken = this.tokens.next())\n      );\n    }),\n    (Pn.prototype.tokenMatches = function (t, e) {\n      return (\n        void 0 === e ||\n        (Array.isArray(e)\n          ? hn(e, t.value)\n          : 'function' == typeof e\n          ? e(t)\n          : t.value === e)\n      );\n    }),\n    (Pn.prototype.save = function () {\n      (this.savedCurrent = this.current),\n        (this.savedNextToken = this.nextToken),\n        this.tokens.save();\n    }),\n    (Pn.prototype.restore = function () {\n      this.tokens.restore(),\n        (this.current = this.savedCurrent),\n        (this.nextToken = this.savedNextToken);\n    }),\n    (Pn.prototype.accept = function (t, e) {\n      return (\n        !(this.nextToken.type !== t || !this.tokenMatches(this.nextToken, e)) &&\n        (this.next(), !0)\n      );\n    }),\n    (Pn.prototype.expect = function (t, e) {\n      if (!this.accept(t, e)) {\n        var n = this.tokens.getCoordinates();\n        throw new Error(\n          'parse error [' + n.line + ':' + n.column + ']: Expected ' + (e || t),\n        );\n      }\n    }),\n    (Pn.prototype.parseAtom = function (t) {\n      var e = this.tokens.unaryOps;\n      if (\n        this.accept(xn) ||\n        this.accept(mn, function (t) {\n          return t.value in e;\n        })\n      )\n        t.push(new Ze(Ge, this.current.value));\n      else if (this.accept(vn)) t.push(new Ze(Le, this.current.value));\n      else if (this.accept(yn)) t.push(new Ze(Le, this.current.value));\n      else if (this.accept(gn, '('))\n        this.parseExpression(t), this.expect(gn, ')');\n      else {\n        if (!this.accept(bn, '['))\n          throw new Error('unexpected ' + this.nextToken);\n        if (this.accept(bn, ']')) t.push(new Ze(Xe, 0));\n        else {\n          var n = this.parseArrayList(t);\n          t.push(new Ze(Xe, n));\n        }\n      }\n    }),\n    (Pn.prototype.parseExpression = function (t) {\n      var e = [];\n      this.parseUntilEndStatement(t, e) ||\n        (this.parseVariableAssignmentExpression(e),\n        this.parseUntilEndStatement(t, e) || this.pushExpression(t, e));\n    }),\n    (Pn.prototype.pushExpression = function (t, e) {\n      for (var n = 0, i = e.length; n < i; n++) t.push(e[n]);\n    }),\n    (Pn.prototype.parseUntilEndStatement = function (t, e) {\n      return (\n        !!this.accept(wn) &&\n        (!this.nextToken ||\n          this.nextToken.type === fn ||\n          (this.nextToken.type === gn && ')' === this.nextToken.value) ||\n          e.push(new Ze(Qe)),\n        this.nextToken.type !== fn && this.parseExpression(e),\n        t.push(new Ze(We, e)),\n        !0)\n      );\n    }),\n    (Pn.prototype.parseArrayList = function (t) {\n      for (var e = 0; !this.accept(bn, ']'); )\n        for (this.parseExpression(t), ++e; this.accept(kn); )\n          this.parseExpression(t), ++e;\n      return e;\n    }),\n    (Pn.prototype.parseVariableAssignmentExpression = function (t) {\n      for (this.parseConditionalExpression(t); this.accept(mn, '='); ) {\n        var e = t.pop(),\n          n = [],\n          i = t.length - 1;\n        if (e.type !== Ke) {\n          if (e.type !== Ge && e.type !== Ue)\n            throw new Error('expected variable for assignment');\n          this.parseVariableAssignmentExpression(n),\n            t.push(new Ze(qe, e.value)),\n            t.push(new Ze(We, n)),\n            t.push(tn('='));\n        } else {\n          if (!this.tokens.isOperatorEnabled('()='))\n            throw new Error('function definition is not permitted');\n          for (var r = 0, s = e.value + 1; r < s; r++) {\n            var a = i - r;\n            t[a].type === Ge && (t[a] = new Ze(qe, t[a].value));\n          }\n          this.parseVariableAssignmentExpression(n),\n            t.push(new Ze(We, n)),\n            t.push(new Ze(Je, e.value));\n        }\n      }\n    }),\n    (Pn.prototype.parseConditionalExpression = function (t) {\n      for (this.parseOrExpression(t); this.accept(mn, '?'); ) {\n        var e = [],\n          n = [];\n        this.parseConditionalExpression(e),\n          this.expect(mn, ':'),\n          this.parseConditionalExpression(n),\n          t.push(new Ze(We, e)),\n          t.push(new Ze(We, n)),\n          t.push(en('?'));\n      }\n    }),\n    (Pn.prototype.parseOrExpression = function (t) {\n      for (this.parseAndExpression(t); this.accept(mn, 'or'); ) {\n        var e = [];\n        this.parseAndExpression(e), t.push(new Ze(We, e)), t.push(tn('or'));\n      }\n    }),\n    (Pn.prototype.parseAndExpression = function (t) {\n      for (this.parseComparison(t); this.accept(mn, 'and'); ) {\n        var e = [];\n        this.parseComparison(e), t.push(new Ze(We, e)), t.push(tn('and'));\n      }\n    });\n  var En = ['==', '!=', '<', '<=', '>=', '>', 'in'];\n  Pn.prototype.parseComparison = function (t) {\n    for (this.parseAddSub(t); this.accept(mn, En); ) {\n      var e = this.current;\n      this.parseAddSub(t), t.push(tn(e.value));\n    }\n  };\n  var An = ['+', '-', '||'];\n  Pn.prototype.parseAddSub = function (t) {\n    for (this.parseTerm(t); this.accept(mn, An); ) {\n      var e = this.current;\n      this.parseTerm(t), t.push(tn(e.value));\n    }\n  };\n  var _n = ['*', '/', '%'];\n  function Tn(t, e) {\n    return Number(t) + Number(e);\n  }\n  function Dn(t, e) {\n    return t - e;\n  }\n  function Mn(t, e) {\n    return t * e;\n  }\n  function Sn(t, e) {\n    return t / e;\n  }\n  function jn(t, e) {\n    return t % e;\n  }\n  function Vn(t, e) {\n    return Array.isArray(t) && Array.isArray(e) ? t.concat(e) : '' + t + e;\n  }\n  function Nn(t, e) {\n    return t === e;\n  }\n  function $n(t, e) {\n    return t !== e;\n  }\n  function Bn(t, e) {\n    return t > e;\n  }\n  function Ln(t, e) {\n    return t < e;\n  }\n  function Rn(t, e) {\n    return t >= e;\n  }\n  function Fn(t, e) {\n    return t <= e;\n  }\n  function zn(t, e) {\n    return Boolean(t && e);\n  }\n  function Gn(t, e) {\n    return Boolean(t || e);\n  }\n  function qn(t, e) {\n    return hn(e, t);\n  }\n  function Kn(t) {\n    return (Math.exp(t) - Math.exp(-t)) / 2;\n  }\n  function Jn(t) {\n    return (Math.exp(t) + Math.exp(-t)) / 2;\n  }\n  function Wn(t) {\n    return t === 1 / 0\n      ? 1\n      : t === -1 / 0\n      ? -1\n      : (Math.exp(t) - Math.exp(-t)) / (Math.exp(t) + Math.exp(-t));\n  }\n  function Hn(t) {\n    return t === -1 / 0 ? t : Math.log(t + Math.sqrt(t * t + 1));\n  }\n  function Un(t) {\n    return Math.log(t + Math.sqrt(t * t - 1));\n  }\n  function Qn(t) {\n    return Math.log((1 + t) / (1 - t)) / 2;\n  }\n  function Xn(t) {\n    return Math.log(t) * Math.LOG10E;\n  }\n  function Zn(t) {\n    return -t;\n  }\n  function Yn(t) {\n    return !t;\n  }\n  function ti(t) {\n    return t < 0 ? Math.ceil(t) : Math.floor(t);\n  }\n  function ei(t) {\n    return Math.random() * (t || 1);\n  }\n  function ni(t) {\n    return ri(t + 1);\n  }\n  (Pn.prototype.parseTerm = function (t) {\n    for (this.parseFactor(t); this.accept(mn, _n); ) {\n      var e = this.current;\n      this.parseFactor(t), t.push(tn(e.value));\n    }\n  }),\n    (Pn.prototype.parseFactor = function (t) {\n      var e = this.tokens.unaryOps;\n      if (\n        (this.save(),\n        this.accept(mn, function (t) {\n          return t.value in e;\n        }))\n      ) {\n        if ('-' !== this.current.value && '+' !== this.current.value) {\n          if (this.nextToken.type === gn && '(' === this.nextToken.value)\n            return this.restore(), void this.parseExponential(t);\n          if (\n            this.nextToken.type === wn ||\n            this.nextToken.type === kn ||\n            this.nextToken.type === fn ||\n            (this.nextToken.type === gn && ')' === this.nextToken.value)\n          )\n            return this.restore(), void this.parseAtom(t);\n        }\n        var n = this.current;\n        this.parseFactor(t), t.push(Ye(n.value));\n      } else this.parseExponential(t);\n    }),\n    (Pn.prototype.parseExponential = function (t) {\n      for (this.parsePostfixExpression(t); this.accept(mn, '^'); )\n        this.parseFactor(t), t.push(tn('^'));\n    }),\n    (Pn.prototype.parsePostfixExpression = function (t) {\n      for (this.parseFunctionCall(t); this.accept(mn, '!'); ) t.push(Ye('!'));\n    }),\n    (Pn.prototype.parseFunctionCall = function (t) {\n      var e = this.tokens.unaryOps;\n      if (\n        this.accept(mn, function (t) {\n          return t.value in e;\n        })\n      ) {\n        var n = this.current;\n        this.parseAtom(t), t.push(Ye(n.value));\n      } else\n        for (this.parseMemberExpression(t); this.accept(gn, '('); )\n          if (this.accept(gn, ')')) t.push(new Ze(Ke, 0));\n          else {\n            var i = this.parseArgumentList(t);\n            t.push(new Ze(Ke, i));\n          }\n    }),\n    (Pn.prototype.parseArgumentList = function (t) {\n      for (var e = 0; !this.accept(gn, ')'); )\n        for (this.parseExpression(t), ++e; this.accept(kn); )\n          this.parseExpression(t), ++e;\n      return e;\n    }),\n    (Pn.prototype.parseMemberExpression = function (t) {\n      for (this.parseAtom(t); this.accept(mn, '.') || this.accept(bn, '['); ) {\n        var e = this.current;\n        if ('.' === e.value) {\n          if (!this.allowMemberAccess)\n            throw new Error('unexpected \".\", member access is not permitted');\n          this.expect(xn), t.push(new Ze(Ue, this.current.value));\n        } else {\n          if ('[' !== e.value) throw new Error('unexpected symbol: ' + e.value);\n          if (!this.tokens.isOperatorEnabled('['))\n            throw new Error('unexpected \"[]\", arrays are disabled');\n          this.parseExpression(t), this.expect(bn, ']'), t.push(tn('['));\n        }\n      }\n    });\n  var ii = [\n    0.9999999999999971,\n    57.15623566586292,\n    -59.59796035547549,\n    14.136097974741746,\n    -0.4919138160976202,\n    3399464998481189e-20,\n    4652362892704858e-20,\n    -9837447530487956e-20,\n    0.0001580887032249125,\n    -0.00021026444172410488,\n    0.00021743961811521265,\n    -0.0001643181065367639,\n    8441822398385275e-20,\n    -26190838401581408e-21,\n    36899182659531625e-22,\n  ];\n  function ri(t) {\n    var e, n;\n    if (\n      (function (t) {\n        return isFinite(t) && t === Math.round(t);\n      })(t)\n    ) {\n      if (t <= 0) return isFinite(t) ? 1 / 0 : NaN;\n      if (t > 171) return 1 / 0;\n      for (var i = t - 2, r = t - 1; i > 1; ) (r *= i), i--;\n      return 0 === r && (r = 1), r;\n    }\n    if (t < 0.5) return Math.PI / (Math.sin(Math.PI * t) * ri(1 - t));\n    if (t >= 171.35) return 1 / 0;\n    if (t > 85) {\n      var s = t * t,\n        a = s * t,\n        o = a * t,\n        u = o * t;\n      return (\n        Math.sqrt((2 * Math.PI) / t) *\n        Math.pow(t / Math.E, t) *\n        (1 +\n          1 / (12 * t) +\n          1 / (288 * s) -\n          139 / (51840 * a) -\n          571 / (2488320 * o) +\n          163879 / (209018880 * u) +\n          5246819 / (75246796800 * u * t))\n      );\n    }\n    --t, (n = ii[0]);\n    for (var l = 1; l < ii.length; ++l) n += ii[l] / (t + l);\n    return (\n      (e = t + 4.7421875 + 0.5),\n      Math.sqrt(2 * Math.PI) * Math.pow(e, t + 0.5) * Math.exp(-e) * n\n    );\n  }\n  function si(t) {\n    return Array.isArray(t) ? t.length : String(t).length;\n  }\n  function ai() {\n    for (var t = 0, e = 0, n = 0; n < arguments.length; n++) {\n      var i,\n        r = Math.abs(arguments[n]);\n      e < r\n        ? ((t = t * (i = e / r) * i + 1), (e = r))\n        : (t += r > 0 ? (i = r / e) * i : r);\n    }\n    return e === 1 / 0 ? 1 / 0 : e * Math.sqrt(t);\n  }\n  function oi(t, e, n) {\n    return t ? e : n;\n  }\n  function ui(t, e) {\n    return void 0 === e || 0 == +e\n      ? Math.round(t)\n      : ((t = +t),\n        (e = -+e),\n        isNaN(t) || 'number' != typeof e || e % 1 != 0\n          ? NaN\n          : ((t = t.toString().split('e')),\n            +(\n              (t = (t = Math.round(+(t[0] + 'e' + (t[1] ? +t[1] - e : -e))))\n                .toString()\n                .split('e'))[0] +\n              'e' +\n              (t[1] ? +t[1] + e : e)\n            )));\n  }\n  function li(t, e, n) {\n    return n && (n[t] = e), e;\n  }\n  function ci(t, e) {\n    return t[0 | e];\n  }\n  function hi(t) {\n    return 1 === arguments.length && Array.isArray(t)\n      ? Math.max.apply(Math, t)\n      : Math.max.apply(Math, arguments);\n  }\n  function pi(t) {\n    return 1 === arguments.length && Array.isArray(t)\n      ? Math.min.apply(Math, t)\n      : Math.min.apply(Math, arguments);\n  }\n  function di(t, e) {\n    if ('function' != typeof t)\n      throw new Error('First argument to map is not a function');\n    if (!Array.isArray(e))\n      throw new Error('Second argument to map is not an array');\n    return e.map(function (e, n) {\n      return t(e, n);\n    });\n  }\n  function fi(t, e, n) {\n    if ('function' != typeof t)\n      throw new Error('First argument to fold is not a function');\n    if (!Array.isArray(n))\n      throw new Error('Second argument to fold is not an array');\n    return n.reduce(function (e, n, i) {\n      return t(e, n, i);\n    }, e);\n  }\n  function mi(t, e) {\n    if ('function' != typeof t)\n      throw new Error('First argument to filter is not a function');\n    if (!Array.isArray(e))\n      throw new Error('Second argument to filter is not an array');\n    return e.filter(function (e, n) {\n      return t(e, n);\n    });\n  }\n  function vi(t, e) {\n    if (!Array.isArray(e) && 'string' != typeof e)\n      throw new Error('Second argument to indexOf is not a string or array');\n    return e.indexOf(t);\n  }\n  function yi(t, e) {\n    if (!Array.isArray(e))\n      throw new Error('Second argument to join is not an array');\n    return e.join(t);\n  }\n  function gi(t) {\n    return (t > 0) - (t < 0) || +t;\n  }\n  var bi = 1 / 3;\n  function ki(t) {\n    return t < 0 ? -Math.pow(-t, bi) : Math.pow(t, bi);\n  }\n  function xi(t) {\n    return Math.exp(t) - 1;\n  }\n  function wi(t) {\n    return Math.log(1 + t);\n  }\n  function Ci(t) {\n    return Math.log(t) / Math.LN2;\n  }\n  function Oi(t) {\n    (this.options = t || {}),\n      (this.unaryOps = {\n        sin: Math.sin,\n        cos: Math.cos,\n        tan: Math.tan,\n        asin: Math.asin,\n        acos: Math.acos,\n        atan: Math.atan,\n        sinh: Math.sinh || Kn,\n        cosh: Math.cosh || Jn,\n        tanh: Math.tanh || Wn,\n        asinh: Math.asinh || Hn,\n        acosh: Math.acosh || Un,\n        atanh: Math.atanh || Qn,\n        sqrt: Math.sqrt,\n        cbrt: Math.cbrt || ki,\n        log: Math.log,\n        log2: Math.log2 || Ci,\n        ln: Math.log,\n        lg: Math.log10 || Xn,\n        log10: Math.log10 || Xn,\n        expm1: Math.expm1 || xi,\n        log1p: Math.log1p || wi,\n        abs: Math.abs,\n        ceil: Math.ceil,\n        floor: Math.floor,\n        round: Math.round,\n        trunc: Math.trunc || ti,\n        '-': Zn,\n        '+': Number,\n        exp: Math.exp,\n        not: Yn,\n        length: si,\n        '!': ni,\n        sign: Math.sign || gi,\n      }),\n      (this.binaryOps = {\n        '+': Tn,\n        '-': Dn,\n        '*': Mn,\n        '/': Sn,\n        '%': jn,\n        '^': Math.pow,\n        '||': Vn,\n        '==': Nn,\n        '!=': $n,\n        '>': Bn,\n        '<': Ln,\n        '>=': Rn,\n        '<=': Fn,\n        and: zn,\n        or: Gn,\n        in: qn,\n        '=': li,\n        '[': ci,\n      }),\n      (this.ternaryOps = { '?': oi }),\n      (this.functions = {\n        random: ei,\n        fac: ni,\n        min: pi,\n        max: hi,\n        hypot: Math.hypot || ai,\n        pyt: Math.hypot || ai,\n        pow: Math.pow,\n        atan2: Math.atan2,\n        if: oi,\n        gamma: ri,\n        roundTo: ui,\n        map: di,\n        fold: fi,\n        filter: mi,\n        indexOf: vi,\n        join: yi,\n      }),\n      (this.consts = { E: Math.E, PI: Math.PI, true: !0, false: !1 });\n  }\n  (Oi.prototype.parse = function (t) {\n    var e = [],\n      n = new Pn(this, new On(this, t), {\n        allowMemberAccess: this.options.allowMemberAccess,\n      });\n    return n.parseExpression(e), n.expect(fn, 'EOF'), new dn(e, this);\n  }),\n    (Oi.prototype.evaluate = function (t, e) {\n      return this.parse(t).evaluate(e);\n    });\n  var Ii = new Oi();\n  (Oi.parse = function (t) {\n    return Ii.parse(t);\n  }),\n    (Oi.evaluate = function (t, e) {\n      return Ii.parse(t).evaluate(e);\n    });\n  var Pi = {\n    '+': 'add',\n    '-': 'subtract',\n    '*': 'multiply',\n    '/': 'divide',\n    '%': 'remainder',\n    '^': 'power',\n    '!': 'factorial',\n    '<': 'comparison',\n    '>': 'comparison',\n    '<=': 'comparison',\n    '>=': 'comparison',\n    '==': 'comparison',\n    '!=': 'comparison',\n    '||': 'concatenate',\n    and: 'logical',\n    or: 'logical',\n    not: 'logical',\n    '?': 'conditional',\n    ':': 'conditional',\n    '=': 'assignment',\n    '[': 'array',\n    '()=': 'fndef',\n  };\n  Oi.prototype.isOperatorEnabled = function (t) {\n    var e = (function (t) {\n        return Pi.hasOwnProperty(t) ? Pi[t] : t;\n      })(t),\n      n = this.options.operators || {};\n    return !(e in n) || !!n[e];\n  };\n  var Ei = function (t) {\n      t = t.replace(/ /g, '');\n      var e = /\\(([^\\(\\)]|\\(([^\\(\\)]|\\(([^\\(\\)]|\\(([^\\(\\)])*\\))*\\))*\\))*\\)/.exec(\n        t,\n      );\n      if (void 0 === e) return { result: !1 };\n      var n = t.split(')');\n      return { result: !0, unit: n[n.length - 1], expression: e[0] };\n    },\n    Ai = (function () {\n      function t(e) {\n        o(this, t), (this.expressionProps = e);\n      }\n      return (\n        l(t, [\n          {\n            key: 'resize',\n            value: function (t) {\n              var e = Ei(this.expressionProps.expression),\n                n = '('.concat(e.expression, '*').concat(t, ')');\n              return ''\n                .concat(G.mathExpPreface, '(')\n                .concat(n, ')')\n                .concat(this.expressionProps.unit);\n            },\n          },\n          {\n            key: 'calculateValues',\n            value: function (t, e) {\n              for (\n                var n,\n                  i = t.length,\n                  r = new Oi().parse(this.expressionProps.expression),\n                  s = [],\n                  a =\n                    (c((n = {}), G.totalElements, i), c(n, G.initParams, e), n),\n                  o = 0;\n                o < i;\n                o++\n              ) {\n                a[G.elementIndex] = o;\n                try {\n                  var u = r.evaluate(a);\n                  if (null == u) {\n                    ot.error(\n                      ''.concat(\n                        this.expressionProps.expression,\n                        ' is not a valid mathematical expression. Returning 0',\n                      ),\n                    ),\n                      s.push(0);\n                    continue;\n                  }\n                  var l = ''.concat(u).concat(this.expressionProps.unit);\n                  'amount' === this.expressionProps.type && (l = parseFloat(l)),\n                    s.push(l);\n                } catch (t) {\n                  ot.error(\n                    ''.concat(\n                      this.expressionProps.expression,\n                      ' is not a valid mathematical expression. Returning 0',\n                    ),\n                  ),\n                    s.push(0);\n                }\n              }\n              return s;\n            },\n          },\n        ]),\n        t\n      );\n    })();\n  function _i(t) {\n    t = t.replace(/ /g, '');\n    return /^@stagger\\(([_A-z0-9.%-]+?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+)?(,[_A-z0-9.%-]+))\\)$/.test(\n      t,\n    );\n  }\n  var Ti = function (t) {\n    var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];\n    if (((t = t.replace(/ /g, '')), e && !_i(t))) return !1;\n    var n = /.*\\((.*)\\).*/,\n      i = n.exec(t)[1],\n      r = i.split(',');\n    return {\n      start: r[0],\n      end: r[1],\n      startFraction: 1 * r[2] || 0,\n      easing: r[3] || 'linear',\n      mode: r[4] || 'linear',\n      reverse: 'true' === r[5],\n    };\n  };\n  var Di = (function () {\n      function t(e) {\n        o(this, t), (this.staggerProps = e);\n      }\n      return (\n        l(t, [\n          {\n            key: 'resize',\n            value: function (t) {\n              return (\n                (this.staggerProps.from *= t),\n                (this.staggerProps.to *= t),\n                !0 === this.staggerProps.integer &&\n                  ((this.staggerProps.from = Math.round(\n                    this.staggerProps.from,\n                  )),\n                  (this.staggerProps.to = Math.round(this.staggerProps.to))),\n                '@stagger('\n                  .concat(this.staggerProps.from)\n                  .concat(this.staggerProps.unit, ', ')\n                  .concat(this.staggerProps.to)\n                  .concat(this.staggerProps.unit, ', ')\n                  .concat(this.staggerProps.fraction || 0, ', ')\n                  .concat(this.staggerProps.easing || 'linear', ', ')\n                  .concat(this.staggerProps.mode || 'linear', ', ')\n                  .concat(this.staggerProps.reverse || !1, ')')\n              );\n            },\n          },\n          {\n            key: 'calculateValues',\n            value: function (t) {\n              for (\n                var e,\n                  n,\n                  i,\n                  r,\n                  s = (function (t) {\n                    var e =\n                        arguments.length > 1 && void 0 !== arguments[1]\n                          ? arguments[1]\n                          : 0,\n                      n =\n                        arguments.length > 2 && void 0 !== arguments[2]\n                          ? arguments[2]\n                          : 'linear',\n                      i =\n                        arguments.length > 3 &&\n                        void 0 !== arguments[3] &&\n                        arguments[3],\n                      r = [];\n                    if ('linear' === n)\n                      for (var s = 0; s < t; s++) {\n                        var a = s / (t - 1),\n                          o = a < e ? a + 1 - e + 1 / (t - 1) : a - e;\n                        i && (o = 1 - o), r.push(o);\n                      }\n                    else if ('omni' === n)\n                      for (var u = 1 - e, l = 0; l < t; l++) {\n                        var c = Math.abs(l / (t - 1) - e) / u;\n                        i && (c = 1 - c), r.push(c);\n                      }\n                    return r;\n                  })(\n                    t.length,\n                    this.staggerProps.fraction,\n                    this.staggerProps.mode,\n                    this.staggerProps.reverse,\n                  ),\n                  a = [],\n                  o = 0;\n                o < s.length;\n                o++\n              ) {\n                var u =\n                  ((e = this.staggerProps.from),\n                  (n = this.staggerProps.to),\n                  (i = s[o]),\n                  (r = this.staggerProps.easing) || (r = 'linear'),\n                  Nt[r](i) * (n - e) + e);\n                !0 === this.staggerProps.integer && (u = Math.round(u)),\n                  'measurement' === this.staggerProps.type &&\n                    (u += this.staggerProps.unit),\n                  a.push(u);\n              }\n              return a;\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Mi = _i,\n    Si = new RegExp(\n      /^#([\\da-f]{3}){1,2}$|^#([\\da-f]{4}){1,2}$|(rgb|hsl)a?\\((\\s*-?\\d+%?\\s*,){2}(\\s*-?\\d+%?\\s*,?\\s*\\)?)(,\\s*(0?\\.\\d+)?|1)?\\)/,\n      'gi',\n    ),\n    ji = new RegExp(/^[-+]?\\d+$/),\n    Vi = new Be({\n      messages: {\n        color: \"The '{field}' field must be an a valid color! Actual: {actual}\",\n        measurement:\n          \"The '{field}' must be a measurement with specs that are not met. You've either provided wrong value/units or an invalid @ expression. Actual: {actual}\",\n      },\n    });\n  Vi.add('amount', function (t, e, n) {\n    var i = t.schema;\n    return (\n      t.messages,\n      {\n        source: '\\n      let startUnits, endUnits, startNumberPart, endNumberPart;\\n      const staggerValidation = '\n          .concat(Mi, ';\\n      const staggerAnalyser = ')\n          .concat(Ti, ';\\n      const easingKeys = \"')\n          .concat(\n            Object.keys(Nt).join(','),\n            \"\\\".split(','); // todo check for simpler expression\\n      const validateExpression = \",\n          )\n          .concat(Ei, ';\\n      const attributeRegexp = /^')\n          .concat(\n            G.attibuteValue,\n            '\\\\([_A-z0-9-]*\\\\)$/;\\n      const patternRegexp = /^',\n          )\n          .concat(\n            G.patternValue,\n            '\\\\(([_A-z0-9.%-]+?(,[_A-z0-9.%-]+)*?)\\\\)$/;\\n      const extractParenthesisAttrsAsArray = ',\n          )\n          .concat(\n            tt,\n            \";\\n\\n      function isNumeric(n) {\\n        return !isNaN(parseFloat(n)) && isFinite(n);\\n      }\\n\\n      if(typeof value === 'string' || value instanceof String){\\n        if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.staggerPreface,\n            \"')){\\n          const staggerValid = staggerValidation(value);\\n          if(staggerValid === false){\\n            \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount: 'The ' + G.staggerPreface + ' expression is invalid',\n              },\n            }),\n            ';\\n            return;\\n          } else {\\n            const analysis = staggerAnalyser(value, false);\\n            if(!isNumeric(analysis.start)){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.start',\n              messages: {\n                amount:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is invalid',\n              },\n            }),\n            ';\\n              return;\\n            } else {\\n              startNumberPart = analysis.start*1;\\n              if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n                if(',\n          )\n          .concat(i.min, ' > analysis.start){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.start',\n              messages: {\n                amount:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is smaller than the minimum accepted value (' +\n                  i.min +\n                  ')',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n              if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n                if(',\n          )\n          .concat(i.max, ' < analysis.start){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.start',\n              messages: {\n                amount:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is bigger than the maximum accepted value (' +\n                  i.max +\n                  ')',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n               if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n                if(!analysis.start.match(',\n          )\n          .concat(ji, ')){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.start',\n              messages: {\n                amount:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is not an integer',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n            }\\n\\n            if(!isNumeric(analysis.end)){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.end',\n              messages: {\n                amount:\n                  'The provided end ' + G.staggerPreface + ' value is invalid',\n              },\n            }),\n            ';\\n              return;\\n            } else {\\n              endNumberPart = analysis.end*1;\\n              if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n                if(',\n          )\n          .concat(i.min, ' > analysis.end){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.end',\n              messages: {\n                amount:\n                  'The provided end ' +\n                  G.staggerPreface +\n                  ' value is smaller than the minimum accepted value (' +\n                  i.min +\n                  ')',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n              if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n                if(',\n          )\n          .concat(i.max, ' < analysis.end){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.end',\n              messages: {\n                amount:\n                  'The provided end ' +\n                  G.staggerPreface +\n                  ' value is bigger than the maximum accepted value (' +\n                  i.max +\n                  ')',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n               if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n                if(!analysis.end.match(',\n          )\n          .concat(ji, ')){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.end',\n              messages: {\n                amount:\n                  'The provided end ' +\n                  G.staggerPreface +\n                  ' value is not an integer',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n            }\\n\\n            if(analysis.startFraction < 0 || analysis.startFraction > 1){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.startFraction',\n              messages: {\n                amount:\n                  'The ' +\n                  G.staggerPreface +\n                  ' fraction must be a number >=0 and <=1',\n              },\n            }),\n            ';\\n              return;\\n            }\\n\\n            if(easingKeys.indexOf(analysis.easing) < 0){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.startFraction',\n              messages: {\n                amount:\n                  'The provided ' +\n                  G.staggerPreface +\n                  ' easing is not recognised by the system',\n              },\n            }),\n            \";\\n              return;\\n            }\\n\\n            if(analysis.mode !== 'linear' && analysis.mode !== 'omni'){\\n              \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.mode',\n              messages: {\n                amount:\n                  G.staggerPreface + ' mode can only be either linear or omni',\n              },\n            }),\n            ';\\n              return;\\n            }\\n\\n            if(analysis.reverse !== true && analysis.reverse !== false){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'analysis.reverse',\n              messages: {\n                amount:\n                  G.staggerPreface +\n                  ' reverse needs to be either true or false',\n              },\n            }),\n            \";\\n              return;\\n            }\\n\\n            return value;\\n          }\\n        } else if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.patternValue,\n            \"')){\\n          if(!patternRegexp.test(value.replace(/ /g, ''))){\\n            \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount: 'The ' + G.patternValue + ' expression is invalid',\n              },\n            }),\n            ';\\n            return;\\n          }\\n          const patternValues = extractParenthesisAttrsAsArray(value);\\n          for(let i=0; i<patternValues.length; i++){\\n            const valToCheck = patternValues[i];\\n            if(!isNumeric(valToCheck)){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'valToCheck',\n              messages: { amount: 'The provided value is not a number' },\n            }),\n            ';\\n              return;\\n            } else {\\n              if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n                if(',\n          )\n          .concat(i.min, ' > valToCheck){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'valToCheck',\n              messages: {\n                amount:\n                  'The provided value is smaller than the minimum accepted value (' +\n                  i.min +\n                  ')',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n              if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n                if(',\n          )\n          .concat(i.max, ' < valToCheck){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'valToCheck',\n              messages: {\n                amount:\n                  'The provided start value is bigger than the maximum accepted value (' +\n                  i.max +\n                  ')',\n              },\n            }),\n            ';\\n                  return;\\n                }\\n              }\\n               if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n                if(!valToCheck.match(',\n          )\n          .concat(ji, ')){\\n                  ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'valToCheck',\n              messages: { amount: 'The provided value is not an integer' },\n            }),\n            \";\\n                  return;\\n                }\\n              }\\n          }\\n        }\\n        return value;\\n      }  else if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.attibuteValue,\n            \"')){\\n          if(!attributeRegexp.test(value)){\\n            \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount: 'The ' + G.attibuteValue + ' expression is invalid',\n              },\n            }),\n            \";\\n            return;\\n          }\\n\\n          return value;\\n        } else if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.mathExpPreface,\n            \"')){\\n          const validity = validateExpression(value);\\n          if(validity.result === false){\\n            \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount: 'The ' + G.expressionPreface + ' expression is invalid',\n              },\n            }),\n            ';\\n            return;\\n          } else {\\n            if(validity.unit !== \"\"){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount:\n                  'The ' + G.expressionPreface + ' expression includes units',\n              },\n            }),\n            \";\\n              return;\\n            }\\n\\n            return value;\\n          }\\n        }\\n      }\\n\\n\\n      if(typeof value !== 'number'){\\n        \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: { amount: 'The provided value is not a number' },\n            }),\n            ';\\n        return;\\n      }\\n      if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n        if(',\n          )\n          .concat(i.max, ' < value){\\n          ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount:\n                  'The provided amount is bigger than the maximum accepted value',\n              },\n            }),\n            ';\\n          return;\\n        }\\n      }\\n      if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n        if(',\n          )\n          .concat(i.min, ' > value){\\n          ')\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount:\n                  'The provided amount is lower than the minimum accepted value',\n              },\n            }),\n            ';\\n          return;\\n        }\\n      }\\n      if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n        if(value !== parseInt(value, 10)){\\n          ',\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: { amount: 'The provided amount is not an integer' },\n            }),\n            ';\\n          return;\\n        }\\n      }\\n      return value;\\n\\n    ',\n          ),\n      }\n    );\n  }),\n    Vi.add('measurement', function (t, e, n) {\n      var i = t.schema,\n        r = t.messages,\n        s = new RegExp(\n          '^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)(' + i.units.join('|') + ')$',\n          'gi',\n        ),\n        a = new RegExp('^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)', 'gi');\n      return {\n        source: '\\n      let startUnits, endUnits, startNumberPart, endNumberPart;\\n      const staggerValidation = '\n          .concat(Mi, ';\\n      const staggerAnalyser = ')\n          .concat(Ti, ';\\n      const easingKeys = \"')\n          .concat(\n            Object.keys(Nt).join(','),\n            \"\\\".split(',');\\n      const validateExpression = \",\n          )\n          .concat(Ei, \";\\n      const validUnits = ['\")\n          .concat(i.units.join(\"','\"), \"'];\\n      const attributeRegexp = /^\")\n          .concat(\n            G.attibuteValue,\n            '\\\\([_A-z0-9-]*\\\\)$/;\\n      const patternRegexp = /^',\n          )\n          .concat(\n            G.patternValue,\n            '\\\\(([_A-z0-9.%-]+?(,[_A-z0-9.%-]+)*?)\\\\)$/;\\n      const extractParenthesisAttrsAsArray = ',\n          )\n          .concat(\n            tt,\n            \";\\n\\n      if(typeof value !== 'string' && !(value instanceof String)){\\n        \",\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: r,\n            }),\n            \"\\n        return ;\\n      }\\n\\n      if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.attibuteValue,\n            \"')){\\n        if(!attributeRegexp.test(value)){\\n          \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount: 'The ' + G.attibuteValue + ' expression is invalid',\n              },\n            }),\n            \";\\n          return;\\n        }\\n\\n        return value;\\n      } else if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.staggerPreface,\n            \"')){\\n        const staggerValid = staggerValidation(value);\\n        if(staggerValid === false){\\n          \",\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: {\n                measurement:\n                  'The ' + G.staggerPreface + ' expression is invalid',\n              },\n            }),\n            ';\\n          return;\\n        } else {\\n          const analysis = staggerAnalyser(value, false);\\n          if(!analysis.start.match(',\n          )\n          .concat(s, ')){\\n            ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.start',\n              messages: {\n                measurement:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is invalid',\n              },\n            }),\n            ';\\n            return;\\n          } else {\\n            var numberPart = analysis.start.match(',\n          )\n          .concat(\n            a,\n            ')[0];\\n            startNumberPart = numberPart;\\n            startUnits = analysis.start.toString().substring(numberPart.length);\\n            if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n              if(',\n          )\n          .concat(i.min, ' > numberPart){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.start',\n              messages: {\n                measurement:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is smaller than the minimum accepted value (' +\n                  i.min +\n                  ')',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n            if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n              if(',\n          )\n          .concat(i.max, ' < numberPart){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.start',\n              messages: {\n                measurement:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is bigger than the maximum accepted value (' +\n                  i.max +\n                  ')',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n             if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n              if(!numberPart.match(',\n          )\n          .concat(ji, ')){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.start',\n              messages: {\n                measurement:\n                  'The provided start ' +\n                  G.staggerPreface +\n                  ' value is not an integer',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n          }\\n\\n          if(!analysis.end.match(',\n          )\n          .concat(s, ')){\\n            ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.end',\n              messages: {\n                measurement:\n                  'The provided end ' + G.staggerPreface + ' value is invalid',\n              },\n            }),\n            ';\\n            return;\\n          } else {\\n            var numberPart = analysis.end.match(',\n          )\n          .concat(\n            a,\n            ')[0];\\n            endNumberPart = numberPart;\\n            endUnits = analysis.end.toString().substring(numberPart.length);\\n            if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n              if(',\n          )\n          .concat(i.min, ' > numberPart){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.end',\n              messages: {\n                measurement:\n                  'The provided end ' +\n                  G.staggerPreface +\n                  ' value is smaller than the minimum accepted value (' +\n                  i.min +\n                  ')',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n            if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n              if(',\n          )\n          .concat(i.max, ' < numberPart){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.end',\n              messages: {\n                measurement:\n                  'The provided end ' +\n                  G.staggerPreface +\n                  ' value is bigger than the maximum accepted value (' +\n                  i.max +\n                  ')',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n             if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n              if(!numberPart.match(',\n          )\n          .concat(ji, ')){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.end',\n              messages: {\n                measurement:\n                  'The provided end ' +\n                  G.staggerPreface +\n                  ' value is not an integer',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n          }\\n\\n          if(startUnits !== endUnits){\\n            ',\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.startFraction',\n              messages: {\n                measurement:\n                  'The ' +\n                  G.staggerPreface +\n                  ' start and end must always have the same units',\n              },\n            }),\n            ';\\n            return;\\n          }\\n\\n          if(analysis.startFraction < 0 || analysis.startFraction > 1){\\n            ',\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.startFraction',\n              messages: {\n                measurement:\n                  'The ' +\n                  G.staggerPreface +\n                  ' fraction must be a number >=0 and <=1',\n              },\n            }),\n            ';\\n            return;\\n          }\\n\\n          if(easingKeys.indexOf(analysis.easing) < 0){\\n            ',\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.startFraction',\n              messages: {\n                measurement:\n                  'The provided ' +\n                  G.staggerPreface +\n                  ' easing is not recognised by the system',\n              },\n            }),\n            \";\\n            return;\\n          }\\n\\n          if(analysis.mode !== 'linear' && analysis.mode !== 'omni'){\\n            \",\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.mode',\n              messages: {\n                measurement:\n                  G.staggerPreface + ' mode can only be either linear or omni',\n              },\n            }),\n            ';\\n            return;\\n          }\\n\\n          if(analysis.reverse !== true && analysis.reverse !== false){\\n            ',\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'analysis.reverse',\n              messages: {\n                measurement:\n                  G.staggerPreface +\n                  ' reverse needs to be either true or false',\n              },\n            }),\n            \";\\n            return;\\n          }\\n\\n          return value;\\n        }\\n      } else if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.patternValue,\n            \"')){\\n        if(!patternRegexp.test(value.replace(/ /g, ''))){\\n          \",\n          )\n          .concat(\n            this.makeError({\n              type: 'amount',\n              actual: 'value',\n              messages: {\n                amount: 'The ' + G.patternValue + ' expression is invalid',\n              },\n            }),\n            ';\\n          return;\\n        }\\n        const patternValues = extractParenthesisAttrsAsArray(value);\\n        for(let i=0; i<patternValues.length; i++){\\n          const valToCheck = patternValues[i];\\n          if(!valToCheck.match(',\n          )\n          .concat(s, ')){\\n            ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'valToCheck',\n              messages: { measurement: 'The provided value is invalid' },\n            }),\n            ';\\n            return;\\n          } else {\\n            var numberPart = valToCheck.match(',\n          )\n          .concat(a, ')[0];\\n            if(')\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n              if(',\n          )\n          .concat(i.min, ' > numberPart){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'valToCheck',\n              messages: {\n                measurement:\n                  'The provided value is smaller than the minimum accepted value (' +\n                  i.min +\n                  ')',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n            if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n              if(',\n          )\n          .concat(i.max, ' < numberPart){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'valToCheck',\n              messages: {\n                measurement:\n                  'The provided value is bigger than the maximum accepted value (' +\n                  i.max +\n                  ')',\n              },\n            }),\n            ';\\n                return;\\n              }\\n            }\\n             if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n              if(!numberPart.match(',\n          )\n          .concat(ji, ')){\\n                ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'valToCheck',\n              messages: { measurement: 'The provided value is not an integer' },\n            }),\n            \";\\n                return;\\n              }\\n            }\\n          }\\n        }\\n        return value;\\n      } else if(value.trim().startsWith('\",\n          )\n          .concat(\n            G.mathExpPreface,\n            \"')){\\n          const validity = validateExpression(value);\\n          if(validity.result === false){\\n            \",\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: {\n                measurement:\n                  'The ' + G.expressionPreface + ' expression is invalid',\n              },\n            }),\n            ';\\n            return;\\n          } else {\\n            if(validUnits.indexOf(validity.unit) < 0){\\n              ',\n          )\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: {\n                measurement:\n                  'The ' +\n                  G.expressionPreface +\n                  ' expression has non-supported units',\n              },\n            }),\n            ';\\n              return;\\n            }\\n\\n            return value;\\n          }\\n        }\\n\\n\\n      if(!value.match(',\n          )\n          .concat(s, ')){\\n        ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: r,\n            }),\n            '\\n      } else {\\n        var numberPart = value.match(',\n          )\n          .concat(a, ')[0];\\n        if(')\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'min'),\n            '){\\n          if(',\n          )\n          .concat(i.min, ' > numberPart){\\n            ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: r,\n            }),\n            '\\n          }\\n        }\\n        if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'max'),\n            '){\\n          if(',\n          )\n          .concat(i.max, ' < numberPart){\\n            ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: r,\n            }),\n            '\\n          }\\n        }\\n         if(',\n          )\n          .concat(\n            Object.prototype.hasOwnProperty.call(i, 'integer'),\n            '){\\n          if(!numberPart.match(',\n          )\n          .concat(ji, ')){\\n            ')\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: r,\n            }),\n            '\\n          }\\n        }\\n      }\\n      return value;\\n    ',\n          ),\n      };\n    }),\n    Vi.add('html', function (t, e, n) {\n      t.schema;\n      var i = t.messages;\n      return {\n        source: '\\n      if(value === null){\\n        '.concat(\n          this.makeError({ type: 'html', actual: 'value', messages: i }),\n          '\\n      } else {\\n        return value;\\n      }\\n    ',\n        ),\n      };\n    }),\n    Vi.add('css', function (t, e, n) {\n      t.schema;\n      var i = t.messages;\n      return {\n        source: '\\n      if(value === null){\\n        '.concat(\n          this.makeError({ type: 'css', actual: 'value', messages: i }),\n          '\\n      } else {\\n        return value;\\n      }\\n    ',\n        ),\n      };\n    }),\n    Vi.add('color', function (t, e, n) {\n      t.schema;\n      var i = t.messages;\n      return {\n        source: \"\\n      if(typeof value !== 'string' && !(value instanceof String)){\\n        \"\n          .concat(\n            this.makeError({\n              type: 'measurement',\n              actual: 'value',\n              messages: i,\n            }),\n            '\\n        return ;\\n      }\\n      if(!value.match(',\n          )\n          .concat(\n            Si,\n            ') && [\\n          \"aliceblue\",\\n          \"antiquewhite\",\\n          \"aqua\",\\n          \"aquamarine\",\\n          \"azure\",\\n          \"beige\",\\n          \"bisque\",\\n          \"black\",\\n          \"blanchedalmond\",\\n          \"blue\",\\n          \"blueviolet\",\\n          \"brown\",\\n          \"burlywood\",\\n          \"cadetblue\",\\n          \"chartreuse\",\\n          \"chocolate\",\\n          \"coral\",\\n          \"cornflowerblue\",\\n          \"cornsilk\",\\n          \"crimson\",\\n          \"cyan\",\\n          \"darkblue\",\\n          \"darkcyan\",\\n          \"darkgoldenrod\",\\n          \"darkgray\",\\n          \"darkgrey\",\\n          \"darkgreen\",\\n          \"darkkhaki\",\\n          \"darkmagenta\",\\n          \"darkolivegreen\",\\n          \"darkorange\",\\n          \"darkorchid\",\\n          \"darkred\",\\n          \"darksalmon\",\\n          \"darkseagreen\",\\n          \"darkslateblue\",\\n          \"darkslategray\",\\n          \"darkslategrey\",\\n          \"darkturquoise\",\\n          \"darkviolet\",\\n          \"deeppink\",\\n          \"deepskyblue\",\\n          \"dimgray\",\\n          \"dimgrey\",\\n          \"dodgerblue\",\\n          \"firebrick\",\\n          \"floralwhite\",\\n          \"forestgreen\",\\n          \"fuchsia\",\\n          \"gainsboro\",\\n          \"ghostwhite\",\\n          \"gold\",\\n          \"goldenrod\",\\n          \"gray\",\\n          \"grey\",\\n          \"green\",\\n          \"greenyellow\",\\n          \"honeydew\",\\n          \"hotpink\",\\n          \"indianred\",\\n          \"indigo\",\\n          \"ivory\",\\n          \"khaki\",\\n          \"lavender\",\\n          \"lavenderblush\",\\n          \"lawngreen\",\\n          \"lemonchiffon\",\\n          \"lightblue\",\\n          \"lightcoral\",\\n          \"lightcyan\",\\n          \"lightgoldenrodyellow\",\\n          \"lightgray\",\\n          \"lightgrey\",\\n          \"lightgreen\",\\n          \"lightpink\",\\n          \"lightsalmon\",\\n          \"lightseagreen\",\\n          \"lightskyblue\",\\n          \"lightslategray\",\\n          \"lightslategrey\",\\n          \"lightsteelblue\",\\n          \"lightyellow\",\\n          \"lime\",\\n          \"limegreen\",\\n          \"linen\",\\n          \"magenta\",\\n          \"maroon\",\\n          \"mediumaquamarine\",\\n          \"mediumblue\",\\n          \"mediumorchid\",\\n          \"mediumpurple\",\\n          \"mediumseagreen\",\\n          \"mediumslateblue\",\\n          \"mediumspringgreen\",\\n          \"mediumturquoise\",\\n          \"mediumvioletred\",\\n          \"midnightblue\",\\n          \"mintcream\",\\n          \"mistyrose\",\\n          \"moccasin\",\\n          \"navajowhite\",\\n          \"navy\",\\n          \"oldlace\",\\n          \"olive\",\\n          \"olivedrab\",\\n          \"orange\",\\n          \"orangered\",\\n          \"orchid\",\\n          \"palegoldenrod\",\\n          \"palegreen\",\\n          \"paleturquoise\",\\n          \"palevioletred\",\\n          \"papayawhip\",\\n          \"peachpuff\",\\n          \"peru\",\\n          \"pink\",\\n          \"plum\",\\n          \"powderblue\",\\n          \"purple\",\\n          \"rebeccapurple\",\\n          \"red\",\\n          \"rosybrown\",\\n          \"royalblue\",\\n          \"saddlebrown\",\\n          \"salmon\",\\n          \"sandybrown\",\\n          \"seagreen\",\\n          \"seashell\",\\n          \"sienna\",\\n          \"silver\",\\n          \"skyblue\",\\n          \"slateblue\",\\n          \"slategray\",\\n          \"slategrey\",\\n          \"snow\",\\n          \"springgreen\",\\n          \"steelblue\",\\n          \"tan\",\\n          \"teal\",\\n          \"thistle\",\\n          \"tomato\",\\n          \"turquoise\",\\n          \"violet\",\\n          \"wheat\",\\n          \"white\",\\n          \"whitesmoke\",\\n          \"yellow\",\\n          \"yellowgreen\",\\n        ].indexOf(value.toLowerCase()) < 0){\\n        ',\n          )\n          .concat(\n            this.makeError({ type: 'color', actual: 'value', messages: i }),\n            '\\n      }\\n      return value;\\n    ',\n          ),\n      };\n    });\n  var Ni = [\n      'cm',\n      'mm',\n      'in',\n      'px',\n      'pt',\n      'pc',\n      'em',\n      'ex',\n      'ch',\n      'rem',\n      'vw',\n      'vh',\n      'vmin',\n      'vmax',\n      '%',\n    ],\n    $i = [\n      {\n        type: 'string',\n        optional: !0,\n        default: 'linear',\n        enum: [\n          'linear',\n          'easeInQuad',\n          'easeOutQuad',\n          'easeInOutQuad',\n          'easeInCubic',\n          'easeOutCubic',\n          'easeInOutCubic',\n          'easeInQuart',\n          'easeOutQuart',\n          'easeInOutQuart',\n          'easeInQuint',\n          'easeOutQuint',\n          'easeInOutQuint',\n          'easeInSine',\n          'easeOutSine',\n          'easeInOutSine',\n          'easeInExpo',\n          'easeOutExpo',\n          'easeInOutExpo',\n          'easeInCirc',\n          'easeOutCirc',\n          'easeInOutCirc',\n          'easeInElastic',\n          'easeOutElastic',\n          'easeInOutElastic',\n          'easeInBack',\n          'easeOutBack',\n          'easeInOutBack',\n          'easeInBounce',\n          'easeOutBounce',\n          'easeInOutBounce',\n        ],\n      },\n      { type: 'array', optional: !0, length: 4, items: { type: 'number' } },\n    ],\n    Bi = { type: 'string', empty: !1, trim: !0, optional: !0 },\n    Li = { type: 'string', empty: !1, trim: !0, optional: !0 },\n    Ri = { type: 'string', empty: !1, optional: !1 },\n    Fi = { type: 'amount', optional: !1, integer: !0, min: 0 },\n    zi = { type: 'amount', optional: !0, integer: !0, min: 0 },\n    Gi = { type: 'html', optional: !0 },\n    qi = { type: 'css', optional: !0 },\n    Ki = {\n      type: 'array',\n      optional: !0,\n      items: { type: 'object', props: { type: 'string', src: 'string' } },\n    },\n    Ji = {\n      type: 'array',\n      items: {\n        type: 'object',\n        strict: !0,\n        props: {\n          src: 'string',\n          id: 'string',\n          mcid: { type: 'string', optional: !0 },\n          classes: { type: 'array', optional: !0, items: 'string' },\n          base64: { type: 'boolean', optional: !0 },\n          startValues: {\n            optional: !0,\n            type: 'object',\n            props: {\n              gain: { optional: !0, type: 'number' },\n              pan: { optional: !0, type: 'number' },\n            },\n          },\n        },\n      },\n      optional: !0,\n    },\n    Wi = Vi.compile({\n      id: Bi,\n      name: Li,\n      selector: p(p({}, Ri), {}, { optional: !0 }),\n      easing: $i,\n      duration: Fi,\n      startFrom: { type: 'amount', integer: !0, min: 0, optional: !0 },\n      repeats: { type: 'amount', integer: !0, min: 1, optional: !0 },\n      hiatus: { type: 'amount', integer: !0, min: 0, optional: !0 },\n      delay: { type: 'amount', integer: !0, min: 0, optional: !0 },\n    }),\n    Hi = {\n      type: 'object',\n      optional: !0,\n      props: {\n        width: { type: 'measurement', units: Ni, optional: !0 },\n        height: { type: 'measurement', units: Ni, optional: !0 },\n      },\n    },\n    Ui = { type: 'string', enum: ['on', 'off', 'only'], optional: !0 },\n    Qi = Vi.compile({\n      props: [\n        {\n          type: 'object',\n          strict: !0,\n          props: {\n            id: Bi,\n            name: Li,\n            selector: p(p({}, Ri), {}, { optional: !0 }),\n            easing: $i,\n            duration: zi,\n            html: Gi,\n            css: qi,\n            audioSources: Ji,\n            audio: Ui,\n            containerParams: Hi,\n            fonts: Ki,\n            initParams: { type: 'object', optional: !0 },\n          },\n        },\n        {\n          type: 'object',\n          strict: !0,\n          props: {\n            id: Bi,\n            name: Li,\n            host: { type: 'any', optional: !1 },\n            duration: zi,\n            html: Gi,\n            css: qi,\n            audioSources: Ji,\n            audio: Ui,\n            containerParams: Hi,\n            fonts: Ki,\n            initParams: { type: 'object', optional: !0 },\n          },\n        },\n        {\n          type: 'object',\n          strict: !0,\n          props: {\n            root: { type: 'boolean', optional: !0 },\n            name: Li,\n            id: Bi,\n            audioSources: Ji,\n            audio: p(p({}, Ui), {}, { enum: ['on'] }),\n          },\n        },\n      ],\n    }),\n    Xi = Vi.compile({\n      selector: p(p({}, Ri), {}, { optional: !0, strict: !0 }),\n      name: Li,\n    }),\n    Zi = Vi.compile({\n      selector: p(p({}, Ri), {}, { strict: !0, optional: !0 }),\n      name: Li,\n      repeats: { type: 'amount', integer: !0, min: 1, optional: !0 },\n      hiatus: { type: 'amount', integer: !0, min: 0, optional: !0 },\n      delay: { type: 'amount', integer: !0, min: 0, optional: !0 },\n    });\n  function Yi(t) {\n    var e = new t.Class(t.attrs, t.props);\n    if (!1 === e.result) return e;\n    if (Object.prototype.hasOwnProperty.call(t, 'incidents'))\n      for (var n in t.incidents) {\n        var i = t.incidents[n],\n          r = Yi(i.leaf);\n        if (!1 === r.result) return r;\n        var s = e.addIncident(r, i.position);\n        if (!1 === s.result) return s;\n      }\n    return e;\n  }\n  function tr(t) {\n    t.descriptor.value = function () {\n      var t =\n          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n        n = this.exportLiveDefinition();\n      for (var i in t) qt(i, t[i], !0, 'attrs', n);\n      for (var r in e) qt(r, e[r], !0, 'props', n);\n      return Yi(n);\n    };\n  }\n  Vi.compile({ selector: Ri, duration: Fi });\n  var er = 'mc.descriptive.decisionAuthority';\n  function nr(t) {\n    t.descriptor.value = function (t) {\n      if (null !== this.constructor.attrsValidationRules) {\n        var e = this.constructor.attrsValidationMethod(t);\n        if (e.length > 0) return { result: !1, errors: e };\n      }\n      return !0 ===\n        this.putMessageOnPipe('checkForClip', {}, er, {\n          selfExecute: !0,\n          direction: ht,\n        }).response\n        ? this.manageEditAttrProps(t, 'attrs')\n        : ((this.attrs = t), { result: !0 });\n    };\n  }\n  function ir(t) {\n    t.descriptor.value = function (t) {\n      var e = ot.validateProps(\n        t,\n        this.constructor.propsValidationRules,\n        this.constructor,\n      );\n      return e.result\n        ? !0 ===\n          this.putMessageOnPipe('checkForClip', {}, er, {\n            selfExecute: !0,\n            direction: ht,\n          }).response\n          ? this.manageEditAttrProps(t, 'props')\n          : ((this.props = t), { result: !0 })\n        : e;\n    };\n  }\n  function rr(t) {\n    t.descriptor.value = function () {\n      return null !== this.props.host && void 0 !== this.props.host\n        ? [this.props.host]\n        : this.hasParent &&\n          this.putMessageOnPipe('checkForClip', {}, er, {\n            selfExecute: !0,\n            direction: ht,\n          }).response\n        ? this.putMessageOnPipe(\n            'getElements',\n            { selector: this.selector() },\n            er,\n            { selfExecute: !1, direction: ht },\n          ).response\n        : [];\n    };\n  }\n  function sr(t) {\n    t.descriptor.value = function (t) {\n      var e =\n        arguments.length > 1 && void 0 !== arguments[1]\n          ? arguments[1]\n          : { check: !0 };\n      if ('dynamic' === this.duration)\n        return {\n          result: !1,\n          reason:\n            \"Incidents with dynamic duration can't be resized. Once the Incident enters a Clip it'll become resizable\",\n        };\n      if (t === this.duration) return { result: !0, meta: { unprocessed: !0 } };\n      if (t <= 0) return { result: !1, reason: 'Size must always be > 0' };\n      if (e.check && this.hasParent) {\n        var n = this.putMessageOnPipe(\n          'checkResize',\n          { id: this.id, newSize: t, fraction: t / this.duration },\n          er,\n          { selfExecute: !1, direction: ht },\n        );\n        if (!n.response.result) return n.response;\n      }\n      return this.setNewDuration(t), { result: !0 };\n    };\n  }\n  function ar(t) {\n    t.descriptor.value = function () {\n      return null === this.inheritedSelector\n        ? Object.prototype.hasOwnProperty.call(this.props, 'selector')\n          ? this.props.selector\n          : null\n        : Object.prototype.hasOwnProperty.call(this.props, 'selector')\n        ? '&' === this.props.selector.charAt(0)\n          ? this.inheritedSelector + this.props.selector.substring(1)\n          : ''.concat(this.inheritedSelector, ' ').concat(this.props.selector)\n        : this.inheritedSelector;\n    };\n  }\n  var or = (function () {\n      function t(e) {\n        o(this, t), (this.expressionProps = e);\n      }\n      return (\n        l(t, [\n          {\n            key: 'calculateValues',\n            value: function (t) {\n              for (var e = [], n = 0; n < t.length; n++) {\n                var i = t[n].getAttribute(this.expressionProps.attribute);\n                J(i) && (i = parseFloat(i)), e.push(i);\n              }\n              return e;\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    ur = (function () {\n      function t(e) {\n        o(this, t), (this.patternProps = e);\n      }\n      return (\n        l(t, [\n          {\n            key: 'calculateValues',\n            value: function (t) {\n              for (\n                var e = this.patternProps.pattern.length, n = [], i = 0;\n                i < t.length;\n                i++\n              )\n                n.push(this.patternProps.pattern[i % e]);\n              return n;\n            },\n          },\n          {\n            key: 'resize',\n            value: function (t) {\n              if ('amount' !== this.patternProps.type)\n                return ''\n                  .concat(G.patternValue, '(')\n                  .concat(this.patternProps.pattern.join(), ')');\n              for (var e = [], n = 0; n < this.patternProps.pattern.length; n++)\n                e.push(t * this.patternProps.pattern[n]);\n              return ''.concat(G.patternValue, '(').concat(e.join(), ')');\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    lr = function t(e) {\n      return (\n        o(this, t),\n        'expression' === e.dynamicType\n          ? new Ai(e)\n          : 'stagger' === e.dynamicType\n          ? new Di(e)\n          : 'attribute' === e.dynamicType\n          ? new or(e)\n          : 'pattern' === e.dynamicType\n          ? new ur(e)\n          : (ot.error(\n              'dynamicType must be either \"stgger\" or \"expression\". '.concat(\n                e.dynamicType,\n                ' provided',\n              ),\n            ),\n            !1)\n      );\n    },\n    cr = new RegExp('^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)', 'gi'),\n    hr = function (t) {\n      var e = [];\n      return (\n        (function t(n) {\n          var i =\n            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '';\n          if (!n) return [];\n          for (var r = 0, s = Object.entries(n); r < s.length; r++) {\n            var a = C(s[r], 2),\n              o = a[0],\n              u = a[1];\n            if (!(u instanceof Element))\n              if (H(u))\n                t(\n                  u,\n                  ''\n                    .concat(i)\n                    .concat('' === i ? '' : '.')\n                    .concat(o),\n                );\n              else if (W(u)) {\n                var l = u.trim();\n                if (l.startsWith(G.staggerPreface)) {\n                  var c = Ti(l, !1),\n                    h = c.start.match(cr)[0],\n                    p = c.end.match(cr)[0],\n                    d = c.start.toString().substring(h.length),\n                    f = {\n                      dynamicType: 'stagger',\n                      path: ''\n                        .concat(i)\n                        .concat('' === i ? '' : '.')\n                        .concat(o),\n                      from: 1 * h,\n                      to: 1 * p,\n                      mode: c.mode,\n                      unit: d,\n                      fraction: c.startFraction,\n                      easing: c.easing,\n                      reverse: c.reverse,\n                      type: '' === d ? 'amount' : 'measurement',\n                    };\n                  e.push(f);\n                } else if (l.startsWith(G.attibuteValue)) {\n                  var m = {\n                    dynamicType: 'attribute',\n                    path: ''\n                      .concat(i)\n                      .concat('' === i ? '' : '.')\n                      .concat(o),\n                    unit: '',\n                    type: 'measurement',\n                    attribute: /\\(([^\\)]+)\\)/.exec(l)[1],\n                  };\n                  e.push(m);\n                } else if (l.startsWith(G.mathExpPreface)) {\n                  var v = Ei(l),\n                    y = {\n                      dynamicType: 'expression',\n                      path: ''\n                        .concat(i)\n                        .concat('' === i ? '' : '.')\n                        .concat(o),\n                      unit: v.unit,\n                      type: '' === v.unit ? 'amount' : 'measurement',\n                      expression: v.expression,\n                    };\n                  e.push(y);\n                } else if (l.startsWith(G.patternValue)) {\n                  for (\n                    var g = tt(l), b = !0, k = [], x = 0;\n                    x < g.length;\n                    x++\n                  ) {\n                    if (!J(g[x])) {\n                      b = !1;\n                      break;\n                    }\n                    k.push(parseFloat(g[x]));\n                  }\n                  b && (g = k);\n                  var w = {\n                    dynamicType: 'pattern',\n                    path: ''\n                      .concat(i)\n                      .concat('' === i ? '' : '.')\n                      .concat(o),\n                    unit: '',\n                    type: b ? 'amount' : 'measurement',\n                    pattern: g,\n                  };\n                  e.push(w);\n                }\n              }\n          }\n        })(t),\n        e\n      );\n    };\n  function pr(t) {\n    t.descriptor.value = function () {\n      for (var t = hr(this.props), e = 0; e < t.length; e++)\n        this.propsStaggers.push({ path: t[e].path, stagger: new lr(t[e]) });\n      for (var n = hr(this.attrs), i = 0; i < n.length; i++)\n        this.attributesStaggers.push({\n          path: n[i].path,\n          stagger: new lr(n[i]),\n        });\n    };\n  }\n  var dr = D(\n      null,\n      function (t, e) {\n        var n = (function (e) {\n          d(i, e);\n          var n = g(i);\n          function i() {\n            var e,\n              r =\n                arguments.length > 0 && void 0 !== arguments[0]\n                  ? arguments[0]\n                  : {},\n              s =\n                arguments.length > 1 && void 0 !== arguments[1]\n                  ? arguments[1]\n                  : null;\n            o(this, i),\n              null === s\n                ? ((e = n.call(this, r)),\n                  t(v(e)),\n                  (e.attrs = {}),\n                  (e.props = r))\n                : ((e = n.call(this, s)),\n                  t(v(e)),\n                  (e.attrs = r),\n                  (e.props = s));\n            var a = ot.validateProps(e.props, Xi, e.constructor);\n            return a.result\n              ? ((e._inheritedSelector = null),\n                (e.attributesStaggers = []),\n                (e.propsStaggers = []),\n                e.setupDynamicValues(),\n                (e.passiveAddition = !0),\n                e._buildTree(),\n                (e.passiveAddition = !1),\n                y(e))\n              : y(e, a);\n          }\n          return i;\n        })(e);\n        return {\n          F: n,\n          d: [\n            {\n              kind: 'field',\n              static: !0,\n              key: 'Incident',\n              value: function () {\n                return xt;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'plugin_npm_name',\n              value: function () {\n                return 'motor-cortex-js';\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'version',\n              value: function () {\n                return Jt;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'Channel',\n              value: function () {\n                return lt;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'ClassName',\n              value: function () {\n                return 'Group';\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'isGroup',\n              value: function () {\n                return !0;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'attrsValidationRules',\n              value: function () {\n                return null;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'propsValidationRules',\n              value: function () {\n                return Xi;\n              },\n            },\n            {\n              kind: 'method',\n              decorators: [nr],\n              key: 'editAttributes',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [ir],\n              key: 'editProperties',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [sr],\n              key: 'resize',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [tr],\n              key: 'clone',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [ar],\n              key: 'selector',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [rr],\n              key: 'getElements',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [pr],\n              key: 'setupDynamicValues',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              key: '_buildTree',\n              value: function () {\n                this.buildTree();\n              },\n            },\n            {\n              kind: 'method',\n              key: '_calculateDuration',\n              value: function () {\n                var t =\n                    arguments.length > 0 &&\n                    void 0 !== arguments[0] &&\n                    arguments[0],\n                  e = 0;\n                for (var n in this.children) {\n                  var i = this.children[n];\n                  if (\n                    (!0 === t &&\n                      !0 === i.leaf.constructor.isGroup &&\n                      i.leaf._calculateDuration(!0),\n                    'dynamic' === i.leaf.duration)\n                  ) {\n                    e = 'dynamic';\n                    break;\n                  }\n                  i.position + i.leaf.duration > e &&\n                    (e = i.position + i.leaf.duration);\n                }\n                return (\n                  e !== this.calculatedDuration &&\n                  (this.props &&\n                    Object.prototype.hasOwnProperty.call(\n                      this.props,\n                      'duration',\n                    ) &&\n                    (this.props.duration = e),\n                  (this.calculatedDuration = e),\n                  !0)\n                );\n              },\n            },\n            {\n              kind: 'method',\n              key: '_rebuildTree',\n              value: function () {\n                for (var t in this.children) {\n                  var e = this.children[t];\n                  !0 === e.leaf.passive && this.removeIncident(e.id);\n                }\n                (this.passiveAddition = !0),\n                  this.buildTree(),\n                  (this.passiveAddition = !1);\n              },\n            },\n            { kind: 'method', key: 'buildTree', value: function () {} },\n            {\n              kind: 'method',\n              key: 'manageEditAttrProps',\n              value: function (t, e) {\n                var n = this.parentNode,\n                  i = n.getLeafPosition(this.id),\n                  r = JSON.parse(JSON.stringify(this[e]));\n                (this[e] = t), n.removeIncident(this.id), this._rebuildTree();\n                var s = n.addIncident(this, i);\n                return (\n                  s.result ||\n                    ((this[e] = r),\n                    this._rebuildTree(),\n                    n.addIncident(this, i)),\n                  s\n                );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'detachFromParent',\n              value: function () {\n                k(f(n.prototype), 'detachFromParent', this).call(this),\n                  (this.inheritedSelector = null);\n              },\n            },\n            {\n              kind: 'get',\n              key: 'inheritedSelector',\n              value: function () {\n                return this._inheritedSelector;\n              },\n            },\n            {\n              kind: 'set',\n              key: 'inheritedSelector',\n              value: function (t) {\n                for (var e in ((this._inheritedSelector = t), this.children)) {\n                  this.children[e].leaf.inheritedSelector = this.selector();\n                }\n              },\n            },\n            {\n              kind: 'get',\n              key: 'selectorToPassToChildren',\n              value: function () {\n                return this.selector();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'exportDefinition',\n              value: function () {\n                var t = {\n                  ClassName: this.constructor.ClassName,\n                  version: this.constructor.version,\n                  plugin:\n                    this.constructor.plugin || this.constructor.plugin_npm_name,\n                  plugin_npm_name: this.constructor.plugin_npm_name,\n                  attrs: this.attrs,\n                  props: this.props,\n                  incidents: {},\n                  duration: this.duration,\n                };\n                for (var e in this.children) {\n                  var n = this.children[e];\n                  !0 !== n.leaf.passive &&\n                    (t.incidents[e] = {\n                      id: n.id,\n                      position: n.position,\n                      leaf: n.leaf.exportDefinition(),\n                    });\n                }\n                return t;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'exportLiveDefinition',\n              value: function () {\n                var t =\n                    !(arguments.length > 0 && void 0 !== arguments[0]) ||\n                    arguments[0],\n                  e = JSON.parse(JSON.stringify(this.props));\n                !1 === t && delete e.id;\n                var n = {\n                  Class: this.constructor,\n                  attrs: JSON.parse(JSON.stringify(this.attrs)),\n                  props: e,\n                  incidents: {},\n                };\n                for (var i in this.children) {\n                  var r = this.children[i];\n                  !0 !== r.leaf.passive &&\n                    (n.incidents[i] = {\n                      position: r.position,\n                      leaf: r.leaf.exportLiveDefinition(t),\n                    });\n                }\n                return n;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'addIncident',\n              value: function (t, e) {\n                var i,\n                  r =\n                    arguments.length > 2 && void 0 !== arguments[2]\n                      ? arguments[2]\n                      : { check: !0 };\n                if (\n                  ((t.inheritedSelector = this.selectorToPassToChildren),\n                  !0 === r.check)\n                ) {\n                  var s = k(f(n.prototype), 'checkAddition', this).call(\n                    this,\n                    t,\n                    e,\n                  );\n                  if (!s.result) return (t.inheritedSelector = null), s;\n                  if (\n                    !0 ===\n                    (i = this.putMessageOnPipe('checkForClip', {}, er, {\n                      selfExecute: !0,\n                      direction: ht,\n                    })).response\n                  ) {\n                    var a = t.putMessageOnPipe(\n                      'checkForInvalidSelectors',\n                      {},\n                      null,\n                      { selfExecute: !0, direction: pt },\n                    );\n                    if (a.length > 0) {\n                      for (var o = [], u = 0; u < a.length; u++)\n                        o.push(a[u].response);\n                      return { result: !1, errors: o };\n                    }\n                  }\n                  var l = this.putMessageOnPipe(\n                    'checkAddition',\n                    { incident: t, millisecond: e, parentGroupId: this.id },\n                    er,\n                    { selfExecute: !0, direction: ht },\n                  );\n                  if (!l.response.result)\n                    return (t.inheritedSelector = null), l.response;\n                }\n                !0 === this.passiveAddition && (t.passive = !0);\n                var c = this.addChild(t, e);\n                return (\n                  c.result || (t.inheritedSelector = null),\n                  'dynamic' === t.duration && i && this._calculateDuration(!0),\n                  c\n                );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'moveIncident',\n              value: function (t, e) {\n                var i = t;\n                'object' === a(t) && (i = t.id);\n                var r = k(f(n.prototype), 'checkEditPosition', this).call(\n                  this,\n                  i,\n                  e,\n                );\n                if (!r.result) return r;\n                var s = e - this.getLeafPosition(i);\n                if (0 === s) return { result: !0 };\n                var o = this.putMessageOnPipe(\n                  'checkMove',\n                  {\n                    id: i,\n                    millisecond: e,\n                    positionDelta: s,\n                    parentGroupId: this.id,\n                  },\n                  er,\n                  { selfExecute: !0, direction: ht },\n                );\n                return o.response.result ? this.editPosition(i, e) : o.response;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'removeIncident',\n              value: function (t) {\n                var e = t;\n                'object' === a(t) && (e = t.id);\n                var i = k(f(n.prototype), 'checkRemoveChild', this).call(\n                  this,\n                  e,\n                );\n                if (!i.result) return i;\n                var r = this.putMessageOnPipe(\n                  'checkDeletion',\n                  { id: e, parentGroupId: this.id },\n                  er,\n                  { selfExecute: !0, direction: ht },\n                );\n                return r.response.result ? this.removeChild(e) : r.response;\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleCheckForClip',\n              value: function (t, e) {\n                return !!this.hasParent && this.bypass();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleCheckAddition',\n              value: function (t, e) {\n                return this.hasParent ? this.bypass() : { result: !0 };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleCheckMove',\n              value: function (t, e) {\n                return this.hasParent ? this.bypass() : { result: !0 };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleCheckDeletion',\n              value: function (t, e) {\n                return this.hasParent ? this.bypass() : { result: !0 };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleCheckResize',\n              value: function (t, e) {\n                return this.hasParent ? this.bypass() : { result: !0 };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleSetDurationDynamic',\n              value: function (t, e) {\n                (this.calculatedDuration = 'dynamic'),\n                  this.putMessageOnPipe('setDurationDynamic', {}, 'Groups', {\n                    selfExecute: !1,\n                    direction: ht,\n                  });\n              },\n            },\n          ],\n        };\n      },\n      gt,\n    ),\n    fr = '-',\n    mr = {\n      isCombo: function (t) {\n        return t.incidentClass.isCombo;\n      },\n      getItem: function (t, e) {\n        return (function (t) {\n          for (\n            var e,\n              n =\n                arguments.length > 2 && void 0 !== arguments[2]\n                  ? arguments[2]\n                  : window,\n              i = (t =\n                (arguments.length > 1 && void 0 !== arguments[1]\n                  ? arguments[1]\n                  : F) +\n                '.' +\n                t).split('.'),\n              r = 0;\n            r < i.length;\n            r++\n          ) {\n            if (!Object.prototype.hasOwnProperty.call(n, i[r])) return;\n            (e = n[i[r]]), (n = n[i[r]]);\n          }\n          return e;\n        })(e.join('.'), 'attrs', t);\n      },\n      getRepeatPosition: function (t, e, n, i) {\n        return i * (e || 0) + (i + 1) * (t || 0) + i * n;\n      },\n      refersToOwnSelector: function (t, e) {\n        var n =\n            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n          i = e;\n        !1 === Array.isArray(e) && (i = e.split('.'));\n        var r = this.getItem(t, i.slice(0, 2 + n));\n        return (\n          ('' === r.props.selector ||\n            void 0 === r.props.selector ||\n            null === r.props.selector) &&\n          ('props' === i[2] ||\n            !this.isCombo(r) ||\n            this.refersToOwnSelector(t, i, n + 3))\n        );\n      },\n      cascadeSelectors: function (t, e) {\n        for (\n          var n =\n              arguments.length > 2 && void 0 !== arguments[2]\n                ? arguments[2]\n                : '',\n            i = [],\n            r = 0;\n          r < e.length;\n          r++\n        ) {\n          var s = e[r],\n            a = void 0;\n          if (\n            ((a = Object.prototype.hasOwnProperty.call(s.props, 'selector')\n              ? ''.concat(t, ' ').concat(s.props.selector)\n              : t),\n            i.push({\n              path: ''\n                .concat(n)\n                .concat('' === n ? '' : '.')\n                .concat(r, '.props.selector'),\n              value: a,\n            }),\n            this.isCombo(s))\n          ) {\n            var o = this.cascadeSelectors(\n              a,\n              s.attrs.incidents,\n              ''\n                .concat(n)\n                .concat('' === n ? '' : '.')\n                .concat(r, '.attrs.incidents'),\n            );\n            i = i.concat(o);\n          }\n        }\n        return i;\n      },\n      createDescriptiveIncidentLikeObject: function (t, e, n, i, r) {\n        return {\n          constructor: {\n            Incident: t.incidentClass.targetClass.Incident,\n            plugin_npm_name: t.incidentClass.targetClass.plugin_npm_name,\n            Channel: t.incidentClass.targetClass.Channel,\n            isClip: !1,\n          },\n          attrs: i || t.attrs,\n          props: r || t.props,\n          selector: function () {\n            return t.props.selector;\n          },\n          id: t.props.id,\n          audioClip: null,\n          audio: 'no',\n          dynamicDurationValue: null,\n          putMessageOnPipe: function () {},\n          attributesStaggers: e,\n          propsStaggers: n,\n        };\n      },\n      parseElementsDynamics: function (t, e, n, i, r) {\n        for (\n          var s = 'incidents.'.concat(r, '.attrs'),\n            a = 'incidents.'.concat(r, '.props'),\n            o = Kt(e),\n            u = Kt(n),\n            l = 0;\n          l < t.length;\n          l++\n        )\n          if (0 === t[l].path.indexOf(s)) {\n            var c = t[l].path.substring(s.length + 1);\n            o.setValue(c, t[l].values[i]);\n          } else if (0 === t[l].path.indexOf(a)) {\n            var h = t[l].path.substring(a.length + 1);\n            u.setValue(h, t[l].values[i]);\n          }\n        return {\n          incidentAttrs: o.exportFlattened(),\n          incidentProps: u.exportFlattened(),\n        };\n      },\n      getStaggersForChild: function (t, e, n) {\n        for (var i = [], r = [], s = 0; s < t.length; s++)\n          'position' === n &&\n          0 === t[s].path.indexOf('incidents.'.concat(e, '.').concat(n))\n            ? r.push({ path: 'position', stagger: t[s].stagger })\n            : 0 === t[s].path.indexOf('incidents.'.concat(e, '.').concat(n))\n            ? r.push({\n                path: t[s].path.substring(\n                  'incidents.'.concat(e, '.').concat(n).length + 1,\n                ),\n                stagger: t[s].stagger,\n              })\n            : i.push(t[s]);\n        return { identifiedDynamics: r, remainingDynamics: i };\n      },\n      createElementProxy: function (t, e, n, i, r) {\n        for (\n          var s = Kt(t),\n            a = this.cascadeSelectors(e, t.attrs.incidents, 'attrs.incidents'),\n            o = 0;\n          o < i.length;\n          o++\n        )\n          s.setValue('attrs.'.concat(i[o].path), i[o].values[n]);\n        for (var u = 0; u < r.length; u++)\n          s.setValue('props.'.concat(r[u].path), r[u].values[n]);\n        for (var l = 0; l < a.length; l++) s.setValue(a[l].path, a[l].value);\n        return s;\n      },\n    },\n    vr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        return o(this, n), e.apply(this, arguments);\n      }\n      return (\n        l(n, [\n          {\n            key: 'parseAttrsDynamicValues',\n            value: function (t, e) {\n              this.childrenStaggers = [];\n              for (var n = 0; n < t.attributesStaggers.length; n++)\n                mr.refersToOwnSelector(t, t.attributesStaggers[n].path)\n                  ? this.staggerAttrs.push({\n                      path: t.attributesStaggers[n].path,\n                      values: t.attributesStaggers[n].stagger.calculateValues(\n                        e,\n                        this.initParams,\n                      ),\n                    })\n                  : this.childrenStaggers.push(t.attributesStaggers[n]);\n            },\n          },\n          {\n            key: 'handleRecalcDuration',\n            value: function (t, e) {\n              var i = k(f(n.prototype), 'handleRecalcDuration', this).call(\n                this,\n                t,\n                e,\n              );\n              return (\n                (this.descriptiveIncident.dynamicDurationValue =\n                  1 * this.duration),\n                i\n              );\n            },\n          },\n          {\n            key: 'lastWish',\n            value: function () {\n              (this.descriptiveIncident.dynamicDurationValue = null),\n                this.descriptiveIncident.putMessageOnPipe(\n                  'setDurationDynamic',\n                  {},\n                  'Groups',\n                  { selfExecute: !1, direction: ht },\n                ),\n                k(f(n.prototype), 'lastWish', this).call(this);\n            },\n          },\n          {\n            key: '_createElementIncident',\n            value: function (t, e, n, i, r, s) {\n              for (\n                var a = this,\n                  o = mr.createElementProxy(\n                    e,\n                    n.context.getElementSelectorByMCID(s),\n                    i,\n                    this.staggerAttrs,\n                    this.staggerProps,\n                  ),\n                  u = 0;\n                u < this.staggerAttrs.length;\n                u++\n              )\n                o.setValue(\n                  'attrs.'.concat(this.staggerAttrs[u].path),\n                  this.staggerAttrs[u].values[i],\n                );\n              for (\n                var l = Vt({\n                    id: ''.concat(this.id, '_element').concat(fr).concat(i),\n                    attrs: {},\n                    props: {},\n                    Incident: dr.Incident,\n                    plugin_npm_name: dr.plugin_npm_name,\n                    Channel: dr.Channel,\n                    DescriptiveIncident: new dr(),\n                  }),\n                  c = function (t) {\n                    var e = Vt({\n                        id: ''\n                          .concat(a.id, '_element')\n                          .concat(fr)\n                          .concat(i, '_repeat')\n                          .concat(fr)\n                          .concat(t),\n                        attrs: {},\n                        props: {},\n                        Incident: dr.Incident,\n                        plugin_npm_name: dr.plugin_npm_name,\n                        Channel: dr.Channel,\n                        DescriptiveIncident: new dr(),\n                      }),\n                      s = a.childrenStaggers;\n                    o.attrs.incidents.forEach(function (u, l) {\n                      var c = mr.parseElementsDynamics(\n                          a.staggerAttrs,\n                          u.attrs,\n                          u.props,\n                          i,\n                          l,\n                        ),\n                        h = c.incidentAttrs,\n                        p = c.incidentProps,\n                        d = mr.getStaggersForChild(s, l, 'attrs'),\n                        f = mr.getStaggersForChild(\n                          d.remainingDynamics,\n                          l,\n                          'props',\n                        ),\n                        m = mr.getStaggersForChild(\n                          d.remainingDynamics,\n                          l,\n                          'position',\n                        );\n                      (s = f.remainingDynamics),\n                        o.setValue(\n                          'attrs.incidents.'.concat(l, '.props.id'),\n                          ''\n                            .concat(a.id, '_element')\n                            .concat(fr)\n                            .concat(i, '_repeat')\n                            .concat(fr)\n                            .concat(t, '_incident')\n                            .concat(fr)\n                            .concat(l),\n                        );\n                      var v = yr(\n                          mr.createDescriptiveIncidentLikeObject(\n                            u,\n                            d.identifiedDynamics,\n                            f.identifiedDynamics,\n                            h,\n                            p,\n                          ),\n                          n,\n                        ),\n                        y = u.position;\n                      1 === m.identifiedDynamics.length &&\n                        (y = m.identifiedDynamics[0].stagger.calculateValues(\n                          new Array(r),\n                          a.initParams,\n                        )[i]),\n                        e.addChild(v, y);\n                    }),\n                      l.addChild(\n                        e,\n                        mr.getRepeatPosition(\n                          o.props.delay,\n                          o.props.hiatus,\n                          e.duration,\n                          t,\n                        ),\n                      );\n                  },\n                  h = 0;\n                h < (o.props.repeats || 1);\n                h++\n              )\n                c(h);\n              this.addChild(l, 0);\n            },\n          },\n        ]),\n        n\n      );\n    })(zt);\n  function yr(t, e) {\n    var n,\n      i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n    if ((i && 'off' === t.audio) || (!i && 'only' === t.audio)) return null;\n    if (\n      Object.prototype.hasOwnProperty.call(t.props, 'selector') &&\n      ((!i && '~' === t.props.selector.charAt(0)) ||\n        (i && '~' !== t.props.selector.charAt(0) && !t.constructor.isClip))\n    )\n      return null;\n    if (t.constructor.isClip) {\n      if (!Object.prototype.hasOwnProperty.call(t.props, 'selector') || i)\n        return i ? t.audioClip : t.realClip;\n      (n = new Gt(t, e)).plugin_channel_class = lt;\n    } else if (t.constructor.isCombo) n = new vr(t, e);\n    else if (t.constructor.isGroup)\n      for (var r in ((n = Vt({\n        id: t.id,\n        attrs: t.attrs,\n        props: t.props,\n        Incident: t.constructor.Incident,\n        plugin_npm_name: t.constructor.plugin_npm_name,\n        Channel: t.constructor.Channel,\n        DescriptiveIncident: t,\n      })),\n      t.children)) {\n        var s = yr(t.children[r].leaf, e);\n        null !== s && n.addChild(s, t.children[r].position);\n      }\n    else n = new zt(t, e);\n    return n;\n  }\n  var gr = '@kissmybutton/self-contained-incidents',\n    br = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i) {\n        var r;\n        return (\n          o(this, n),\n          ((r = e.call(this, t, i)).attrs = t),\n          (r.props = i),\n          (r.isTheClip = !0),\n          (r.blockingWaitings = {}),\n          (r.instantiatedChannels = {}),\n          (r.isHostedClip = !0),\n          (r.instantiatedCopiesContexts = {}),\n          (r.instantiatedCopiesUnblockingMethods = []),\n          r.onClipInitialise(),\n          (r.runTimeInfo = r.props.runTimeInfo),\n          (r.durationSubs = []),\n          (r.audioClip = !1),\n          r\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'contextReady',\n            get: function () {\n              return this.context.contextLoaded;\n            },\n          },\n          { key: 'onClipInitialise', value: function () {} },\n          {\n            key: 'contextLoading',\n            value: function () {\n              this.context.contextLoaded = !1;\n            },\n          },\n          {\n            key: 'contextLoaded',\n            value: function () {\n              for (var t in ((this.context.contextLoaded = !0),\n              this.putMessageOnPipe(\n                'contextLoaded',\n                {},\n                {},\n                { selfExecute: !1, direction: pt },\n              ),\n              this.instantiatedChannels))\n                this.instantiatedChannels[t].recalcScratchValues();\n              for (\n                var e = 0;\n                e < this.instantiatedCopiesUnblockingMethods.length;\n                e++\n              )\n                this.instantiatedCopiesUnblockingMethods[e]();\n              this.unblock();\n            },\n          },\n          {\n            key: 'getElements',\n            value: function (t) {\n              if (null !== this.props.host && void 0 !== this.props.host)\n                return this.context.getElements(t);\n              var e = [];\n              for (var n in this.instantiatedCopiesContexts)\n                for (\n                  var i = this.instantiatedCopiesContexts[n].getElements(t),\n                    r = 0;\n                  r < i.length;\n                  r++\n                )\n                  e.push(i[r]);\n              return e;\n            },\n          },\n          {\n            key: 'addContext',\n            value: function (t) {\n              (this.instantiatedCopiesContexts[t.clipId] = t.context),\n                (t.instantiatedCopiesContexts = this.instantiatedCopiesContexts),\n                this.instantiatedCopiesUnblockingMethods.push(t.unblock);\n              var e = this.putMessageOnPipe(\n                'addContext',\n                t,\n                {},\n                { selfExecute: !1, direction: pt },\n              );\n              if (1 === Object.keys(this.instantiatedCopiesContexts).length) {\n                for (var n in this.instantiatedChannels)\n                  this.instantiatedChannels[n].recalcScratchValues(t.clipId);\n                this.context.nonFragmentedContext = t.context;\n              }\n              return e;\n            },\n          },\n          {\n            key: 'exportConstructionArguments',\n            value: function () {\n              return { attrs: this.attrs, props: this.props };\n            },\n          },\n          {\n            key: '_resize',\n            value: function (t) {\n              for (var e in this.instantiatedChannels)\n                this.instantiatedChannels[e]._resize(t);\n              this.setNewDuration(this.duration * t);\n              for (var n = 0; n < this.durationSubs.length; n++)\n                this.durationSubs[n](this.duration);\n            },\n          },\n          {\n            key: 'addIncident',\n            value: function (t) {\n              for (\n                var e = this,\n                  n = this.putMessageOnPipe(\n                    'addIncident',\n                    {\n                      incident: t.incident,\n                      millisecond: t.millisecond,\n                      parentGroupId: t.parentGroupId,\n                      incidentFromDescription: yr,\n                      contextData: {\n                        clipId: this.id,\n                        context: this.context,\n                        instantiatedCopiesContexts: this\n                          .instantiatedCopiesContexts,\n                      },\n                      audio: this.audioClip,\n                    },\n                    t.parentGroupId,\n                    { selfExecute: !0, direction: pt },\n                  ),\n                  i = {},\n                  r = 0;\n                r < n.length;\n                r++\n              ) {\n                var s = n[r].response.getIncidentsByChannel(\n                  n[r].positionDelta + t.millisecond,\n                );\n                for (var a in s) {\n                  var o;\n                  Object.prototype.hasOwnProperty.call(i, a) || (i[a] = []),\n                    (o = i[a]).push.apply(o, O(s[a]));\n                }\n              }\n              var u = this.checkAddition(i);\n              if (u.result) {\n                return {\n                  result: !0,\n                  execute: function () {\n                    u.execute();\n                    for (var i = 0; i < n.length; i++)\n                      for (var r in (n[i].responder.addChild(\n                        n[i].response,\n                        t.millisecond,\n                      ),\n                      n[i].responder.putMessageOnPipe(\n                        'recalcDuration',\n                        {},\n                        'Groups',\n                        { selfExecute: !0, direction: ht },\n                      ),\n                      e.instantiatedCopiesContexts))\n                        n[i].responder.putMessageOnPipe(\n                          'addContext',\n                          {\n                            clipId: r,\n                            context: e.instantiatedCopiesContexts[r],\n                          },\n                          'ContextAwareIncidents',\n                          { selfExecute: !1, direction: pt },\n                        );\n                  },\n                };\n              }\n              return u;\n            },\n          },\n          {\n            key: 'checkAddition',\n            value: function (t) {\n              var e =\n                  arguments.length > 1 && void 0 !== arguments[1]\n                    ? arguments[1]\n                    : 'all-or-nothing',\n                n = !0,\n                i = [],\n                r = [];\n              for (var s in t) {\n                Object.prototype.hasOwnProperty.call(\n                  this.instantiatedChannels,\n                  s,\n                ) ||\n                  (this.instantiatedChannels[s] = new t[\n                    s\n                  ][0].incident.plugin_channel_class({\n                    runTimeInfo: this.runTimeInfo,\n                    context: this.context,\n                    subscribe: this.props.subscribe,\n                  }));\n                var a = this.instantiatedChannels[s].addIncidents(t[s], e);\n                (n = n && a.result),\n                  a.result ? r.push(a.execute) : (i = i.concat(a.errors));\n              }\n              var o = function () {\n                for (var t = 0; t < r.length; t++) r[t]();\n              };\n              return { result: n, errors: i, execute: o };\n            },\n          },\n          {\n            key: 'moveIncident',\n            value: function (t) {\n              for (\n                var e = this.putMessageOnPipe(\n                    'moveIncident',\n                    {\n                      incidentId: t.id,\n                      millisecond: t.millisecond,\n                      parentGroupId: t.parentGroupId,\n                      contextData: { clipId: this.id, context: this.context },\n                      audio: this.audioClip,\n                    },\n                    t.parentGroupId,\n                    { selfExecute: !0, direction: pt },\n                  ),\n                  n = {},\n                  i = 0;\n                i < e.length;\n                i++\n              ) {\n                var r = e[i].response.getIncidentsByChannel(\n                  e[i].positionDelta + t.millisecond,\n                );\n                for (var s in r) {\n                  var a;\n                  Object.prototype.hasOwnProperty.call(n, s) || (n[s] = []),\n                    (a = n[s]).push.apply(a, O(r[s]));\n                }\n              }\n              var o = this.checkMove(n, t.positionDelta);\n              if (o.result) {\n                return {\n                  result: !0,\n                  execute: function () {\n                    o.execute();\n                    for (var n = 0; n < e.length; n++)\n                      e[n].responder.editPosition(\n                        e[n].response.id,\n                        t.millisecond,\n                      ),\n                        e[n].responder.putMessageOnPipe(\n                          'recalcDuration',\n                          {},\n                          'Groups',\n                          { selfExecute: !0, direction: ht },\n                        );\n                  },\n                };\n              }\n              return o;\n            },\n          },\n          {\n            key: 'checkMove',\n            value: function (t, e) {\n              var n = !0,\n                i = [],\n                r = [];\n              for (var s in t) {\n                var a = this.instantiatedChannels[s].editIncidents(t[s], e);\n                (n = n && a.result),\n                  a.result ? r.push(a.execute) : (i = i.concat(a.errors));\n              }\n              return {\n                result: n,\n                errors: i,\n                execute: function () {\n                  for (var t = 0; t < r.length; t++) r[t]();\n                },\n              };\n            },\n          },\n          {\n            key: 'removeIncident',\n            value: function (t) {\n              for (\n                var e = this.putMessageOnPipe(\n                    'removeIncident',\n                    {\n                      incidentId: t.id,\n                      parentGroupId: t.parentGroupId,\n                      contextData: { clipId: this.id, context: this.context },\n                      audio: this.audioClip,\n                    },\n                    t.parentGroupId,\n                    { selfExecute: !0, direction: pt },\n                  ),\n                  n = {},\n                  i = 0;\n                i < e.length;\n                i++\n              ) {\n                var r = e[i].response.getIncidentsByChannel();\n                for (var s in r) {\n                  var a;\n                  Object.prototype.hasOwnProperty.call(n, s) || (n[s] = []),\n                    (a = n[s]).push.apply(a, O(r[s]));\n                }\n              }\n              var o = this.checkDelete(n);\n              if (o.result) {\n                return {\n                  result: !0,\n                  execute: function () {\n                    o.execute();\n                    for (var t = 0; t < e.length; t++)\n                      e[t].responder.removeChild(e[t].response.id),\n                        e[t].responder.putMessageOnPipe(\n                          'recalcDuration',\n                          {},\n                          'Groups',\n                          { selfExecute: !0, direction: ht },\n                        );\n                  },\n                };\n              }\n              return o;\n            },\n          },\n          {\n            key: 'checkDelete',\n            value: function (t) {\n              var e = !0,\n                n = [],\n                i = [];\n              for (var r in t) {\n                var s = this.instantiatedChannels[r].removeIncidents(t[r]);\n                (e = e && s.result),\n                  s.result ? i.push(s.execute) : (n = n.concat(s.errors));\n              }\n              return {\n                result: e,\n                errors: n,\n                execute: function () {\n                  for (var t = 0; t < i.length; t++) i[t]();\n                },\n              };\n            },\n          },\n          {\n            key: 'resizeIncident',\n            value: function (t) {\n              for (\n                var e = this.putMessageOnPipe(\n                    'resize',\n                    {\n                      incidentId: t.id,\n                      newSize: t.newSize,\n                      fraction: t.fraction,\n                      contextData: { clipId: this.id, context: this.context },\n                      audio: this.audioClip,\n                    },\n                    t.id,\n                    { selfExecute: !1, direction: pt },\n                  ),\n                  n = {},\n                  i = 0;\n                i < e.length;\n                i++\n              ) {\n                var r = e[i].response.getIncidentsByChannel(e[i].positionDelta);\n                for (var s in r) {\n                  var a;\n                  Object.prototype.hasOwnProperty.call(n, s) || (n[s] = []),\n                    (a = n[s]).push.apply(a, O(r[s]));\n                }\n              }\n              var o = 0;\n              e.length > 0 && (o = e[0].positionDelta);\n              var u = this.checkResize(t.fraction, n, o);\n              if (u.result) {\n                return {\n                  result: !0,\n                  execute: function () {\n                    u.execute();\n                    for (var n = 0; n < e.length; n++)\n                      e[n].responder.setNewDuration(t.newSize);\n                  },\n                };\n              }\n              return u;\n            },\n          },\n          {\n            key: 'checkResize',\n            value: function (t, e) {\n              var n =\n                  arguments.length > 2 && void 0 !== arguments[2]\n                    ? arguments[2]\n                    : 0,\n                i = !0,\n                r = [],\n                s = [];\n              for (var a in e) {\n                var o = ot.systoleDiastoleProjections(e[a], t, n),\n                  u = this.instantiatedChannels[a].checkResizedIncidents(o);\n                (i = i && u.result),\n                  u.result ? s.push(u.execute) : (r = r.concat(u.errors));\n              }\n              var l = function () {\n                  for (var t = 0; t < s.length; t++) s[t]();\n                },\n                c = { result: i, errors: r, execute: l };\n              return c;\n            },\n          },\n          {\n            key: 'context',\n            get: function () {\n              return this.ownContext;\n            },\n          },\n          {\n            key: 'getIncidentsByChannel',\n            value: function () {\n              var t =\n                  arguments.length > 0 && void 0 !== arguments[0]\n                    ? arguments[0]\n                    : 0,\n                e = {};\n              return (\n                (e[gr] = [{ millisecond: t, incident: this, id: this.id }]), e\n              );\n            },\n          },\n          {\n            key: 'setVolume',\n            value: function (t) {\n              this.volume = parseFloat(t);\n            },\n          },\n          { key: '_onGetContextOnce', value: function (t) {} },\n          {\n            key: 'handleRecalcDuration',\n            value: function (t, e) {\n              if (this._calculateDuration())\n                for (var n = 0; n < this.durationSubs.length; n++)\n                  this.durationSubs[n](this.duration);\n              return !0;\n            },\n          },\n          {\n            key: 'onProgress',\n            value: function (t, e, n) {\n              var i =\n                arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n              if (!1 !== this.contextReady) {\n                for (var r in (n || (n = this.id), this.instantiatedChannels)) {\n                  var s = this.instantiatedChannels[r];\n                  s.moveTo(this.runTimeInfo.currentMillisecond, e, n, i);\n                }\n                this.onAfterProgress(t, e);\n              } else this.setBlock();\n            },\n          },\n          { key: 'onAfterProgress', value: function (t, e) {} },\n          {\n            key: 'flash',\n            value: function () {\n              for (var t in this.instantiatedChannels) {\n                this.instantiatedChannels[t].moveTo(\n                  0,\n                  this.runTimeInfo.currentMillisecond,\n                  this.id,\n                  !0,\n                );\n              }\n            },\n          },\n          {\n            key: 'subscribeToDurationChange',\n            value: function (t) {\n              this.durationSubs.push(t);\n            },\n          },\n          { key: 'handleSetBlockingWaiting', value: function (t, e) {} },\n          { key: 'handleRemoveBlockingWaiting', value: function (t, e) {} },\n        ]),\n        n\n      );\n    })(xt),\n    kr = (function () {\n      function t() {\n        o(this, t),\n          (this.output = q.createGain()),\n          (this.gainNode = q.createGain()),\n          q.createStereoPanner && (this.pannerNode = q.createStereoPanner()),\n          q.createStereoPanner\n            ? (this.pannerNode.connect(this.gainNode),\n              this.gainNode.connect(this.output),\n              (this.input = this.pannerNode))\n            : (this.gainNode.connect(this.output),\n              (this.input = this.gainNode));\n      }\n      return (\n        l(t, [\n          {\n            key: 'connect',\n            value: function (t) {\n              this.output.connect(t);\n            },\n          },\n          {\n            key: 'disconnect',\n            value: function () {\n              this.output.disconnect();\n            },\n          },\n        ]),\n        t\n      );\n    })();\n  function xr(t) {\n    for (\n      var e = window.atob(t), n = e.length, i = new Uint8Array(n), r = 0;\n      r < n;\n      r++\n    )\n      i[r] = e.charCodeAt(r);\n    return i.buffer;\n  }\n  var wr = /\\[data(-mcid=\"+\\w+\")+\\]/g,\n    Cr = (function () {\n      function t() {\n        o(this, t), (this.subscribers = []);\n      }\n      return (\n        l(t, [\n          {\n            key: 'sub',\n            value: function (t, e) {\n              this.subscribers.push(e);\n            },\n          },\n          {\n            key: 'pub',\n            value: function (t) {\n              for (var e = 0; e < this.subscribers.length; e++)\n                this.subscribers[e](t);\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Or = (function () {\n      function t() {\n        var e = this,\n          n =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          i = arguments.length > 1 ? arguments[1] : void 0;\n        o(this, t),\n          (this.totalSources = n.length),\n          (this.audioSources = {}),\n          (this.elementsByMCID = {});\n        for (\n          var r = function (t) {\n              var r = n[t],\n                s = {\n                  mcid: r.mcid || rt(),\n                  id: r.id,\n                  src: r.src,\n                  classes: r.classes || [],\n                  base64: r.base64 || !1,\n                  pubSub: new Cr(),\n                  soundLoaded: !1,\n                  startValues: r.startValues || {},\n                };\n              if (\n                ((e.audioSources[s.id] = s),\n                (e.elementsByMCID[s.mcid] = s),\n                r.base64)\n              )\n                q.decodeAudioData(xr(r.src), function (t) {\n                  e._setBuffer(s, t, i);\n                });\n              else {\n                var a = new XMLHttpRequest();\n                a.open('GET', s.src, !0),\n                  (a.responseType = 'arraybuffer'),\n                  (e.soundLoaded = !1),\n                  (a.onload = function () {\n                    q.decodeAudioData(\n                      a.response,\n                      function (t) {\n                        e._setBuffer(s, t, i);\n                      },\n                      e.onError,\n                    );\n                  }),\n                  a.send();\n              }\n            },\n            s = 0;\n          s < n.length;\n          s++\n        )\n          r(s);\n        this.context = {\n          document: document,\n          window: window,\n          rootElement: document.body,\n          unmount: function () {},\n          masterNode: i,\n          audioContext: q,\n          getElements: this.getElements.bind(this),\n          getMCID: this.getMCID.bind(this),\n          setMCID: this.setMCID.bind(this),\n          getElementSelectorByMCID: this.getElementSelectorByMCID.bind(this),\n          getElementByMCID: this.getElementByMCID.bind(this),\n        };\n      }\n      return (\n        l(t, [\n          {\n            key: '_setBuffer',\n            value: function (t, e, n) {\n              (t.soundLoaded = !0),\n                (t.buffer = e),\n                (t.effectsAudioNode = new kr()),\n                t.effectsAudioNode.connect(n.input),\n                t.pubSub.pub();\n            },\n          },\n          {\n            key: 'getElementByMCID',\n            value: function (t) {\n              return Object.prototype.hasOwnProperty.call(\n                this.elementsByMCID,\n                t,\n              )\n                ? this.elementsByMCID[t]\n                : null;\n            },\n          },\n          {\n            key: 'getElements',\n            value: function (t) {\n              if ('~' !== t.charAt(0)) {\n                if (wr.exec(t)) {\n                  var e = t.split('\"')[1];\n                  return this.elementsByMCID[e];\n                }\n                return [];\n              }\n              if ('#' === (t = t.substr(1)).charAt(0))\n                return Object.prototype.hasOwnProperty.call(\n                  this.audioSources,\n                  t.substr(1),\n                )\n                  ? [this.audioSources[t.substr(1)]]\n                  : [];\n              if ('.' === t.charAt(0)) {\n                var n = t.substr(1),\n                  i = [];\n                for (var r in this.audioSources)\n                  r.classes.indexOf(n) >= 0 && i.push(r);\n                return i;\n              }\n            },\n          },\n          {\n            key: 'getMCID',\n            value: function (t) {\n              return t.mcid;\n            },\n          },\n          {\n            key: 'setMCID',\n            value: function (t, e) {\n              t.mcid = e;\n            },\n          },\n          {\n            key: 'getElementSelectorByMCID',\n            value: function (t) {\n              return '[data-mcid=\"'.concat(t, '\"]');\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Ir = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i) {\n        var r;\n        o(this, n),\n          ((r = e.call(this, t, i)).audioNode = new kr()),\n          r.audioNode.connect(q.destination);\n        var s = new Or(r.props.audioSources, r.audioNode);\n        return (\n          (r.ownContext = p(\n            p({}, s.context),\n            {},\n            { isHostedClip: !0, contextLoaded: !0 },\n          )),\n          (r.audioClip = !0),\n          r\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'onProgress',\n            value: function (t, e, i) {\n              var r =\n                arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n              k(f(n.prototype), 'onProgress', this).call(\n                this,\n                t,\n                e,\n                this.id,\n                r,\n              );\n            },\n          },\n          {\n            key: '_onGetContextOnce',\n            value: function (t) {\n              this.audioNode.disconnect(),\n                (this.parentClipContext = t),\n                this.audioNode.connect(t.masterNode.input);\n            },\n          },\n          {\n            key: 'lastWish',\n            value: function () {\n              this.audioNode.output.disconnect(),\n                this.audioNode.output.connect(q.destination);\n            },\n          },\n          {\n            key: 'setVolume',\n            value: function (t) {\n              this.audioNode.output.gain.value = t;\n            },\n          },\n        ]),\n        n\n      );\n    })(br),\n    Pr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        return o(this, n), e.apply(this, arguments);\n      }\n      return (\n        l(n, [\n          {\n            key: 'onProgress',\n            value: function (t) {\n              var e = this;\n              if (!this.element.soundLoaded)\n                return (\n                  this.setBlock('loading sound'),\n                  this.element.pubSub.sub(this.id, function () {\n                    e.unblock();\n                  }),\n                  !1\n                );\n              if ('gain' === this.attributeKey) {\n                var n =\n                  (this.targetValue - this.initialValues) * t +\n                  this.initialValues;\n                this.element.effectsAudioNode.gainNode.gain.value = n;\n              } else if ('pan' === this.attributeKey) {\n                var i =\n                  (this.targetValue - this.initialValues) * t +\n                  this.initialValues;\n                this.element.effectsAudioNode.pannerNode.pan.value = i;\n              }\n            },\n          },\n          {\n            key: 'getScratchValue',\n            value: function () {\n              return 'pan' === this.attributeKey\n                ? Object.prototype.hasOwnProperty.call(\n                    this.element.startValues,\n                    'pan',\n                  )\n                  ? this.element.startValues.pan\n                  : 0\n                : 'gain' === this.attributeKey\n                ? Object.prototype.hasOwnProperty.call(\n                    this.element.startValues,\n                    'gain',\n                  )\n                  ? this.element.startValues.gain\n                  : 1\n                : void 0;\n            },\n          },\n        ]),\n        n\n      );\n    })(St),\n    Er = '|||',\n    Ar = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t) {\n        var i;\n        return (\n          o(this, n),\n          ((i = e.call(this, t)).playingIncidentsIds = []),\n          (i.transitioned = !1),\n          t.subscribe(rt(), i._stateChange.bind(v(i)), 0, 1, !0),\n          i\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: '_stateChange',\n            value: function (t, e) {\n              ('paused' !== e && 'idle' !== e && 'blocked' !== e) ||\n                (this._stopPlayingIncidents(), (this.transitioned = !0));\n            },\n          },\n          {\n            key: '_stopPlayingIncidents',\n            value: function () {\n              for (var t = 0; t < this.playingIncidentsIds.length; t++) {\n                var e = this.playingIncidentsIds[t].split(Er);\n                this._incidentById(e[0]).stop(e[1]);\n              }\n              this.playingIncidentsIds = [];\n            },\n          },\n          {\n            key: 'moveTo',\n            value: function (t, e, n) {\n              var i =\n                arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n              if ('transitional' === this.runTimeInfo.state || i) {\n                (this.transitioned = !0), this._stopPlayingIncidents();\n                for (var r = 0; r < this.incidents.length; r++) {\n                  var s = this.incidents[r],\n                    a = s.id,\n                    o = s.millisecond,\n                    u = this._incidentById(a),\n                    l = void 0,\n                    c = void 0;\n                  e < o\n                    ? ((l = 0), (c = 0))\n                    : e > o + u.duration\n                    ? ((l = 1), (c = u.duration))\n                    : (l = (c = e - o) / u.duration),\n                    u.onProgress(l, c, n, !0);\n                }\n              } else {\n                this.transitioned && ((t = 0), (this.transitioned = !1));\n                for (var h = this.incidents, p = 0; p < h.length; p++) {\n                  var d = h[p],\n                    f = d.millisecond,\n                    m = this._incidentById(d.id),\n                    v = m.duration,\n                    y = f + v,\n                    g = ''.concat(d.id).concat(Er).concat(n);\n                  if (f >= t && f < e && y > e) {\n                    var b = (e - f) / v >= 1,\n                      k = b ? 1 : (e - f) / v,\n                      x = b ? v : e - f,\n                      w = m.play(k, x, n);\n                    w && this.playingIncidentsIds.push(g);\n                  } else if (y > t && y <= e) {\n                    m.stop(n);\n                    var C = this.playingIncidentsIds.indexOf(g);\n                    C > -1 && this.playingIncidentsIds.splice(C, 1);\n                  }\n                }\n                this.runTimeInfo.currentMillisecond = e;\n              }\n            },\n          },\n        ]),\n        n\n      );\n    })(wt),\n    _r = D(null, function (t) {\n      return {\n        F: function e() {\n          var n =\n              arguments.length > 0 && void 0 !== arguments[0]\n                ? arguments[0]\n                : {},\n            i =\n              arguments.length > 1 && void 0 !== arguments[1]\n                ? arguments[1]\n                : {},\n            r = arguments.length > 2 ? arguments[2] : void 0;\n          o(this, e),\n            t(this),\n            (this.attrs = n),\n            (this.props = i),\n            (this.dna = r),\n            (this.context = r.context),\n            (this.mcid = r.mcid),\n            (this.id = i.id || rt()),\n            (this.modelId = i.modelId),\n            (this.gotContext = !1),\n            (this.plugin_channel_class = Ar),\n            (this.mc_plugin_npm_name = 'motor-cortex-js-media-playback'),\n            Object.prototype.hasOwnProperty.call(i, 'plugin_channel_class') &&\n              (this.plugin_channel_class = i.plugin_channel_class),\n            Object.prototype.hasOwnProperty.call(i, 'mc_plugin_npm_name') &&\n              (this.mc_plugin_npm_name = i.mc_plugin_npm_name),\n            (this.hasIncidents = !1),\n            (this.autoGenerated = !1),\n            this.onInitialise(n, i);\n        },\n        d: [\n          {\n            kind: 'get',\n            key: 'selector',\n            value: function () {\n              return this.props.selector;\n            },\n          },\n          {\n            kind: 'get',\n            key: 'element',\n            value: function () {\n              return this.context.getElementByMCID(this.mcid);\n            },\n          },\n          {\n            kind: 'method',\n            decorators: [Mt],\n            key: 'getIncidentsByChannel',\n            value: function () {},\n          },\n          {\n            kind: 'method',\n            key: '_onGetContextOnce',\n            value: function () {\n              try {\n                if (!0 === this.context.fragment) return;\n                this.gotContext ||\n                  (this.onGetContext(), (this.gotContext = !0));\n              } catch (t) {\n                ot.error(t), ot.error(this.mcid);\n              }\n            },\n          },\n          {\n            kind: 'method',\n            key: 'onGetContext',\n            value: function () {\n              ot.info(\n                'Overwritte the \"onGetContext\" method with the code you want to get executed',\n                'info',\n              );\n            },\n          },\n          { kind: 'method', key: 'lastWish', value: function () {} },\n          {\n            kind: 'method',\n            key: 'onInitialise',\n            value: function () {\n              ot.info(\n                'Overwritte the \"onInialise\" method with the code you want to get executed',\n                'info',\n              );\n            },\n          },\n          { kind: 'method', key: 'onProgress', value: function (t, e) {} },\n          {\n            kind: 'method',\n            key: 'play',\n            value: function (t) {\n              return !0;\n            },\n          },\n          { kind: 'method', key: 'stop', value: function () {} },\n          {\n            kind: 'method',\n            decorators: [bt],\n            key: 'setBlock',\n            value: function () {},\n          },\n          {\n            kind: 'method',\n            decorators: [kt],\n            key: 'unblock',\n            value: function () {},\n          },\n        ],\n      };\n    }),\n    Tr = {\n      npm_name: '@kissmybutton/motorcortex-soundsystem',\n      name: 'Internal MotorCortex Soundsystem',\n      incidents: [\n        {\n          exportable: (function (t) {\n            d(n, t);\n            var e = g(n);\n            function n() {\n              return o(this, n), e.apply(this, arguments);\n            }\n            return (\n              l(n, [\n                {\n                  key: 'play',\n                  value: function (t) {\n                    var e = this;\n                    if (!this.element.soundLoaded)\n                      return (\n                        this.setBlock('loading sound'),\n                        this.element.pubSub.sub(this.id, function () {\n                          e.unblock();\n                        }),\n                        !1\n                      );\n                    var n = 0;\n                    return (\n                      Object.prototype.hasOwnProperty.call(\n                        this.props,\n                        'startFrom',\n                      ) && (n = this.props.startFrom),\n                      (this.audioNode = q.createBufferSource()),\n                      (this.audioNode.buffer = this.element.buffer),\n                      this.audioNode.connect(\n                        this.element.effectsAudioNode.input,\n                      ),\n                      this.audioNode.start(0, (t + n) / 1e3),\n                      !0\n                    );\n                  },\n                },\n                {\n                  key: 'stop',\n                  value: function () {\n                    this.audioNode.stop();\n                  },\n                },\n              ]),\n              n\n            );\n          })(_r),\n          name: 'AudioPlayback',\n        },\n        { exportable: Pr, name: 'AudioEffect' },\n      ],\n      Clip: { exportable: Ir },\n      audio: 'only',\n    },\n    Dr = (function () {\n      function t() {\n        var e =\n          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;\n        o(this, t), (this.realArray = []), null != e && (this.realArray = e);\n      }\n      return (\n        l(t, [\n          {\n            key: '_hasOwnProperty',\n            value: function (t) {\n              return Object.prototype.hasOwnProperty.call(this.realArray, t);\n            },\n          },\n          {\n            key: '_get',\n            value: function (t) {\n              return this.realArray[t];\n            },\n          },\n          {\n            key: '_set',\n            value: function (t, e) {\n              this.realArray[t] = e;\n            },\n          },\n          {\n            key: '_keys',\n            value: function () {\n              return Object.keys(this.realArray);\n            },\n          },\n          {\n            key: '_delete',\n            value: function (t) {\n              return delete this.realArray[t];\n            },\n          },\n          {\n            key: '_export',\n            value: function () {\n              return this.realArray;\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Mr = (function () {\n      function t(e) {\n        o(this, t),\n          (this.originalArray = e),\n          (this.extraArray = {}),\n          (this.addedKeys = []),\n          (this.removedKeys = []);\n      }\n      return (\n        l(t, [\n          {\n            key: '_hasOwnProperty',\n            value: function (t) {\n              return (\n                Object.prototype.hasOwnProperty.call(this.originalArray, t) ||\n                Object.prototype.hasOwnProperty.call(this.extraArray, t)\n              );\n            },\n          },\n          {\n            key: '_get',\n            value: function (t) {\n              return Object.prototype.hasOwnProperty.call(this.extraArray, t)\n                ? this.extraArray[t]\n                : Object.prototype.hasOwnProperty.call(this.originalArray, t)\n                ? this.originalArray[t]\n                : void 0;\n            },\n          },\n          {\n            key: '_set',\n            value: function (t, e) {\n              (this.extraArray[t] = e),\n                Object.prototype.hasOwnProperty.call(this.originalArray, t) ||\n                  this.addedKeys.push(t);\n              var n = this.removedKeys.indexOf(t);\n              n > -1 && this.removedKeys.splice(n, 1);\n            },\n          },\n          {\n            key: '_keys',\n            value: function () {\n              for (\n                var t = Object.keys(this.originalArray).concat(this.addedKeys),\n                  e = 0;\n                e < this.removedKeys.length;\n                e++\n              ) {\n                var n = this.removedKeys.indexOf(this.removedKeys[e]);\n                t.splice(n, 1);\n              }\n              return t;\n            },\n          },\n          {\n            key: '_delete',\n            value: function (t) {\n              var e = this.addedKeys.indexOf(t);\n              return e > -1\n                ? (this.addedKeys.splice(e), delete this.extraArray[t])\n                : this.removedKeys.push(t);\n            },\n          },\n          {\n            key: '_export',\n            value: function () {\n              for (var t in this.extraArray)\n                this.originalArray[t] = this.extraArray[t];\n              for (var e = 0; e < this.removedKeys.length; e++)\n                delete this.originalArray[this.removedKeys[e]];\n              return this.originalArray;\n            },\n          },\n        ]),\n        t\n      );\n    })();\n  function Sr(t, e, n, i) {\n    var r = !1;\n    for (var s in e)\n      Object.prototype.hasOwnProperty.call(n, s) || ((r = !0), (i[s] = e[s]));\n    return (t.animatedAttributeValue = i), r;\n  }\n  function jr(t, e, n, i) {\n    var r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],\n      s = t[i],\n      a = e._get(s.id);\n    a.setInitialValue(n, r);\n    var o = Sr(\n      a,\n      a.initialValue,\n      a.originalAnimatedAttributeValue,\n      JSON.parse(JSON.stringify(a.animatedAttributeValue)),\n    );\n    o && (a.lastWish(), a.onGetContext()),\n      o && i < t.length - 1 && jr(t, e, a.animatedAttributeValue, i + 1, !1);\n  }\n  var Vr = (function () {\n      function t() {\n        var e =\n          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        o(this, t),\n          (this.lanes = {}),\n          e.lanes && (this.lanes = e.lanes),\n          (this.comboAttributes = {}),\n          null != e.comboAttributes &&\n            (this.comboAttributes = e.comboAttributes),\n          (this.runTimeInfo = e.runTimeInfo),\n          (this.belongingLaneKeysByAnimationId = {}),\n          e.belongingLaneKeysByAnimationId &&\n            (this.belongingLaneKeysByAnimationId =\n              e.belongingLaneKeysByAnimationId),\n          (this.incidentsById = new Dr({})),\n          e.incidentsById && (this.incidentsById = e.incidentsById);\n      }\n      return (\n        l(t, [\n          {\n            key: '_resize',\n            value: function (t) {\n              for (var e = Object.keys(this.lanes), n = 0; n < e.length; n++)\n                for (var i = e[n], r = this.lanes[i], s = 0; s < r.length; s++)\n                  r[s].millisecond = r[s].millisecond * t;\n            },\n          },\n          {\n            key: 'createTestLanesSanbox',\n            value: function () {\n              var e = {\n                lanes: Kt(this.lanes),\n                belongingLaneKeysByAnimationId: Kt(\n                  this.belongingLaneKeysByAnimationId,\n                ),\n                incidentsById: new Mr(this.incidentsById._export()),\n              };\n              return (\n                this.comboAttributes &&\n                  (e.comboAttributes = this.comboAttributes),\n                new t(e)\n              );\n            },\n          },\n          {\n            key: 'getLane',\n            value: function (t, e) {\n              return this.lanes[st(t, e)];\n            },\n          },\n          {\n            key: 'applySandboxChanges',\n            value: function (t) {\n              (this.lanes = t.lanes.exportFlattened()),\n                (this.belongingLaneKeysByAnimationId = t.belongingLaneKeysByAnimationId.exportFlattened()),\n                (this.incidentsById = new Dr(t.incidentsById._export()));\n            },\n          },\n          {\n            key: 'laneExists',\n            value: function (t, e) {\n              var n =\n                  arguments.length > 2 &&\n                  void 0 !== arguments[2] &&\n                  arguments[2],\n                i = st(t, e);\n              return (\n                !!this.lanes.hasOwnProperty(i) ||\n                (n && this.lanes.setValue(i, []), !1)\n              );\n            },\n          },\n          {\n            key: 'getOverlappingAnims',\n            value: function (t, e, n) {\n              var i = this,\n                r =\n                  arguments.length > 3 && void 0 !== arguments[3]\n                    ? arguments[3]\n                    : [],\n                s =\n                  arguments.length > 4 && void 0 !== arguments[4]\n                    ? arguments[4]\n                    : null;\n              return Array.from(this.lanes[st(e, n)] || []).filter(function (\n                e,\n              ) {\n                var n = t.incident.duration;\n                null != s && (n = s);\n                var a = i.incidentsById._get(e.id).duration;\n                return (\n                  e.id !== t.incident.id &&\n                  !r.includes(e.id) &&\n                  ((e.millisecond >= t.millisecond &&\n                    e.millisecond < n + t.millisecond) ||\n                    (e.millisecond + a > t.millisecond &&\n                      e.millisecond + a <= n + t.millisecond) ||\n                    (e.millisecond < t.millisecond &&\n                      e.millisecond + a > n + t.millisecond))\n                );\n              });\n            },\n          },\n          {\n            key: 'addElementToLane',\n            value: function (t, e, n, i) {\n              var r = this,\n                s = [],\n                a = st(t, e);\n              this.incidentsById._set(i.id, i);\n              var o = { millisecond: n, id: i.id };\n              this.laneExists(t, e, !0),\n                this.lanes.pushValue(a, o),\n                this.lanes[a].sortBy('millisecond');\n              var u = this.lanes[a],\n                l = this.lanes[a].findIndex(function (t) {\n                  return t.id === i.id;\n                });\n              return (\n                Object.prototype.hasOwnProperty.call(i.id) ||\n                  this.belongingLaneKeysByAnimationId.setValue(i.id, []),\n                this.belongingLaneKeysByAnimationId.pushValue(i.id, a),\n                0 === l\n                  ? this.lanes[a].length > 1\n                    ? s.push(function () {\n                        i.setInitialValue(\n                          r.incidentsById._get(u[1].id).pureInitialValues,\n                        );\n                      })\n                    : s.push(function () {\n                        i.setInitialValue();\n                      })\n                  : s.push(function () {\n                      i.setInitialValue(\n                        r.incidentsById._get(u[l - 1].id)\n                          .animatedAttributeValue,\n                      );\n                    }),\n                Object.prototype.hasOwnProperty.call(this.comboAttributes, e) &&\n                  s.push(function () {\n                    return jr(u, r.incidentsById, i.initialValue, l);\n                  }),\n                l + 1 < u.length &&\n                  s.push(function () {\n                    r.incidentsById\n                      ._get(u[l + 1].id)\n                      .setInitialValue(i.animatedAttributeValue),\n                      r.incidentsById._get(u[l + 1].id).gotContext &&\n                        (r.incidentsById._get(u[l + 1].id).lastWish(),\n                        r.incidentsById._get(u[l + 1].id).onGetContext());\n                  }),\n                s\n              );\n            },\n          },\n          {\n            key: 'updateLane',\n            value: function (t, e) {\n              for (var n = this, i = {}, r = 0; r < t.length; r++)\n                for (\n                  var s = this.belongingLaneKeysByAnimationId[t[r]], a = 0;\n                  a < s.length;\n                  a++\n                ) {\n                  var o = s[a];\n                  Object.prototype.hasOwnProperty.call(i, o) ||\n                    (i[o] = {\n                      animations: [],\n                      lane: this.lanes[o],\n                      laneData: nt(s[a]),\n                    }),\n                    i[o].animations.push(t[r]);\n                }\n              for (var u in i) {\n                var l = i[u],\n                  c = l.laneData,\n                  h = l.lane,\n                  p = l.animations,\n                  d = O(h);\n                d.sort(function (t, e) {\n                  return t.millisecond - e.millisecond;\n                });\n                for (\n                  var f = Object.prototype.hasOwnProperty.call(\n                      this.comboAttributes,\n                      c.attribute,\n                    ),\n                    m = 0;\n                  m < h.length;\n                  m++\n                )\n                  p.includes(h[m].id) && (h[m].millisecond += e);\n                h.sort(function (t, e) {\n                  return t.millisecond - e.millisecond;\n                }),\n                  (this.lanes[u] = h);\n                for (\n                  var v = function (t) {\n                      var e = p[t],\n                        i = d.findIndex(function (t) {\n                          return t.id === e;\n                        }),\n                        r = h.findIndex(function (t) {\n                          return t.id === e;\n                        });\n                      if (i === r && r <= 1) return 'continue';\n                      var s = n.incidentsById._get(h[r].id);\n                      if (i + 1 < h.length)\n                        if (0 === i)\n                          if (f)\n                            jr(h, n.incidentsById, s.pureInitialValues, 0, !0);\n                          else {\n                            var a = n.incidentsById._get(d[1].id);\n                            a.setInitialValue(s.pureInitialValues),\n                              a.onGetContext();\n                          }\n                        else if (f) {\n                          var o = r > i ? i : r;\n                          jr(\n                            h,\n                            n.incidentsById,\n                            n.incidentsById._get(d[i - 1].id)\n                              .animatedAttributeValue,\n                            o,\n                            !0,\n                          );\n                        } else\n                          n.incidentsById\n                            ._get(d[i + 1].id)\n                            .setInitialValue(\n                              n.incidentsById._get(d[i - 1].id)\n                                .animatedAttributeValue,\n                            ),\n                            n.incidentsById._get(d[i + 1].id).onGetContext();\n                      if (\n                        (0 === r\n                          ? f\n                            ? jr(\n                                h,\n                                n.incidentsById,\n                                n.incidentsById._get(d[0].id).pureInitialValues,\n                                r,\n                                !0,\n                              )\n                            : (s.setInitialValue(\n                                n.incidentsById._get(d[0].id).pureInitialValues,\n                              ),\n                              s.onGetContext())\n                          : f\n                          ? jr(\n                              h,\n                              n.incidentsById,\n                              n.incidentsById._get(h[r - 1].id)\n                                .animatedAttributeValue,\n                              r,\n                              !0,\n                            )\n                          : (s.setInitialValue(\n                              n.incidentsById._get(h[r - 1].id)\n                                .animatedAttributeValue,\n                            ),\n                            s.onGetContext()),\n                        r + 1 >= h.length)\n                      )\n                        return 'continue';\n                      if (f)\n                        return (\n                          jr(\n                            h,\n                            n.incidentsById,\n                            s.animatedAttributeValue,\n                            r + 1,\n                            !0,\n                          ),\n                          'continue'\n                        );\n                      var u = n.incidentsById._get(h[r + 1].id);\n                      u.setInitialValue(s.animatedAttributeValue),\n                        u.onGetContext();\n                    },\n                    y = 0;\n                  y < p.length;\n                  y++\n                )\n                  v(y);\n              }\n            },\n          },\n          {\n            key: 'deleteAnimations',\n            value: function (t) {\n              for (var e = {}, n = 0; n < t.length; n++) {\n                for (\n                  var i = t[n],\n                    r = this.belongingLaneKeysByAnimationId[i],\n                    s = 0;\n                  s < r.length;\n                  s++\n                ) {\n                  for (\n                    var a = this.lanes[r[s]], o = -1, u = 0;\n                    u < a.length;\n                    u++\n                  )\n                    if (a[u].id === i) {\n                      o = u;\n                      break;\n                    }\n                  for (\n                    var l = p({}, a[o]),\n                      c = this.incidentsById._get(l.id),\n                      h = nt(r[s]),\n                      d = [],\n                      f = 0;\n                    f < a.length;\n                    f++\n                  )\n                    a[f].id !== i && d.push(a[f]);\n                  if (\n                    ((this.lanes[r[s]] = d),\n                    0 !== (a = this.lanes[r[s]]).length)\n                  ) {\n                    e[r[s]] = nt(r[s]);\n                    var m = this.incidentsById._get(l.id).pureInitialValues;\n                    if (!(o >= a.length || !1 === m))\n                      if (\n                        Object.prototype.hasOwnProperty.call(\n                          this.comboAttributes,\n                          h.attribute,\n                        )\n                      )\n                        jr(a, this.incidentsById, m, o, !0);\n                      else {\n                        var v = this.incidentsById._get(a[o].id);\n                        v.setInitialValue(m), v.onGetContext();\n                      }\n                  } else\n                    c.onProgress(0, 0),\n                      delete this.lanes[r[s]],\n                      Object.prototype.hasOwnProperty.call(e, r[s]) &&\n                        delete e[r[s]];\n                }\n                delete this.belongingLaneKeysByAnimationId[t[n]];\n              }\n              return e;\n            },\n          },\n          {\n            key: 'recalcScratchValues',\n            value: function (t) {\n              for (var e = Object.keys(this.lanes), n = 0; n < e.length; n++) {\n                var i = e[n],\n                  r = this.lanes[i];\n                if (r.length > 0) {\n                  var s = this.incidentsById._get(r[0].id),\n                    a = s.getScratchValue(t),\n                    o = nt(i);\n                  Object.prototype.hasOwnProperty.call(\n                    this.comboAttributes,\n                    o.attribute,\n                  )\n                    ? jr(r, this.incidentsById, a, 0, !0)\n                    : s.setInitialValue(a),\n                    s.lastWish(),\n                    s.onGetContext();\n                }\n              }\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Nr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t) {\n        var i;\n        return (\n          o(this, n),\n          ((i = e.call(this, t)).comboAttributes = {}),\n          (i.fixedAttributeName = '_'),\n          null != t.comboAttributes && (i.comboAttributes = t.comboAttributes),\n          (i.LanesHandler = new Vr({\n            comboAttributes: i.comboAttributes,\n            runTimeInfo: i.runTimeInfo,\n          })),\n          i\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'setComboAttributes',\n            value: function (t) {\n              (this.comboAttributes = t),\n                (this.LanesHandler = new Vr({\n                  comboAttributes: this.comboAttributes,\n                }));\n            },\n          },\n          {\n            key: 'lanes',\n            get: function () {\n              return this.LanesHandler.lanes;\n            },\n          },\n          {\n            key: 'incidentsById',\n            get: function () {\n              return this.LanesHandler.incidentsById;\n            },\n          },\n          {\n            key: '_resize',\n            value: function (t) {\n              this.LanesHandler._resize(t);\n            },\n          },\n          {\n            key: 'checkAddition',\n            value: function (t) {\n              for (\n                var e = this,\n                  n =\n                    arguments.length > 1 && void 0 !== arguments[1]\n                      ? arguments[1]\n                      : 'all-or-nothing',\n                  i = this.LanesHandler.createTestLanesSanbox(),\n                  r = [],\n                  s = [],\n                  a = [],\n                  o = function (n) {\n                    var o = !1,\n                      u = t[n],\n                      l = u.incident,\n                      c = l.mcid,\n                      h = l.attribute || e.fixedAttributeName;\n                    i.laneExists(c, h), r.push({ mcid: c, attribute: h });\n                    var p = i.getOverlappingAnims(u, c, h);\n                    if (\n                      (p.length > 0 &&\n                        ((o = !0),\n                        a.push({\n                          type:\n                            'unauthorised, overlapping incidents on the same element',\n                          meta: {\n                            element_mcid: c,\n                            attribute: h,\n                            incident: u,\n                            overlappingAnims: p,\n                          },\n                        })),\n                      !o)\n                    ) {\n                      var d = i.addElementToLane(c, h, u.millisecond, l);\n                      s.push(function () {\n                        for (var t = 0; t < d.length; t++) d[t]();\n                        l._onGetContextOnce();\n                      });\n                    }\n                  },\n                  u = 0;\n                u < t.length;\n                u++\n              )\n                o(u);\n              if (a.length > 0 && 'all-or-nothing' === n)\n                return { result: !1, errors: a };\n              var l = this.LanesHandler,\n                c = function () {\n                  for (var t = 0; t < r.length; t++) {\n                    var e = st(r[t].mcid, r[t].attribute),\n                      n = i.lanes[e].exportFlattened();\n                    n.sort(function (t, e) {\n                      return t.millisecond - e.millisecond;\n                    }),\n                      i.lanes.setValue(e, n);\n                  }\n                  for (var a = 0; a < s.length; a++) s[a]();\n                  l.applySandboxChanges(i);\n                };\n              return { result: !0, errors: a, execute: c };\n            },\n          },\n          {\n            key: 'checkEdit',\n            value: function (t, e) {\n              for (var n = [], i = 0; i < t.length; i++) n.push(t[i].id);\n              for (\n                var r = this.LanesHandler.createTestLanesSanbox(),\n                  s = [],\n                  a = 0;\n                a < t.length;\n                a++\n              )\n                for (\n                  var o = t[a].incident.id,\n                    u = t[a].incident.mcid,\n                    l = t[a].incident.attribute || this.fixedAttributeName,\n                    c = r.getLane(u, l),\n                    h = 0;\n                  h < c.length;\n                  h++\n                )\n                  if (c[h].id === o) {\n                    var d = p({}, c[h]);\n                    (d.millisecond += e),\n                      (d.incident = r.incidentsById._get(d.id));\n                    var f = r.getOverlappingAnims(d, u, l, n);\n                    f.length > 0 &&\n                      s.push({\n                        type:\n                          'anauthorised, overlapping animations on the same element',\n                        meta: {\n                          element_mcid: u,\n                          attribute: l,\n                          newAnimation: d,\n                          overlappingAnims: f,\n                        },\n                      });\n                    break;\n                  }\n              if (s.length > 0) return { result: !1, errors: s };\n              var m = this;\n              return {\n                result: !0,\n                execute: function () {\n                  m.LanesHandler.updateLane(n, e);\n                },\n              };\n            },\n          },\n          {\n            key: 'checkResizedIncidents',\n            value: function (t) {\n              for (\n                var e =\n                    arguments.length > 1 &&\n                    void 0 !== arguments[1] &&\n                    arguments[1],\n                  n = [],\n                  i = 0;\n                i < t.length;\n                i++\n              )\n                n.push(t[i].id);\n              for (\n                var r = this.LanesHandler.createTestLanesSanbox(),\n                  s = [],\n                  a = 0;\n                a < t.length;\n                a++\n              )\n                for (\n                  var o = this.LanesHandler.incidentsById._get(t[a].id),\n                    u = o.mcid,\n                    l = o.attribute || this.fixedAttributeName,\n                    c = r.getLane(u, l),\n                    h = { mcid: u, attribute: l },\n                    d = t[a].end - t[a].start,\n                    f = 0;\n                  f < c.length;\n                  f++\n                )\n                  if (c[f].id === t[a].id) {\n                    if (!e) {\n                      var m = c[f],\n                        v = p({}, m);\n                      (v.millisecond += t[a].startDelta),\n                        (v.incident = r.incidentsById._get(v.id));\n                      var y = r.getOverlappingAnims(\n                        v,\n                        h.mcid,\n                        h.attribute,\n                        n,\n                        d,\n                      );\n                      y.length > 0 &&\n                        s.push({\n                          type:\n                            'anauthorised overlapping animations on the same element',\n                          meta: {\n                            element_mcid: h.mcid,\n                            attribute: h.attribute,\n                            newAnimation: v,\n                            overlappingAnims: y,\n                          },\n                        });\n                    }\n                    break;\n                  }\n              if (s.length > 0) return { result: !1, errors: s };\n              var g = this,\n                b = function () {\n                  for (var e = 0; e < t.length; e++)\n                    g.LanesHandler.updateLane([t[e].id], t[e].startDelta);\n                };\n              return { execute: b, result: !0 };\n            },\n          },\n          {\n            key: 'checkDelete',\n            value: function (t) {\n              for (var e = [], n = 0; n < t.length; n++) e.push(t[n].id);\n              var i = this;\n              return {\n                result: !0,\n                execute: function () {\n                  i.LanesHandler.deleteAnimations(e);\n                },\n              };\n            },\n          },\n          {\n            key: 'recalcScratchValues',\n            value: function (t) {\n              this.LanesHandler.recalcScratchValues(t);\n            },\n          },\n          {\n            key: 'slipIntoLaneForwards',\n            value: function (t, e, n, i) {\n              var r = this,\n                s =\n                  arguments.length > 4 &&\n                  void 0 !== arguments[4] &&\n                  arguments[4],\n                a = t.filter(function (t) {\n                  var i = r.incidentsById._get(t.id).duration + t.millisecond;\n                  return (i >= e && i <= n) || (i >= n && t.millisecond <= n);\n                });\n              if (0 === a.length) {\n                if (s && 0 === e) {\n                  var o = this.incidentsById._get(t[0].id);\n                  o.onProgress(0, 0, i);\n                }\n                return !0;\n              }\n              var u = a.length - 1,\n                l = this.incidentsById._get(a[u].id),\n                c = a[u].millisecond,\n                h = 1,\n                p = l.duration;\n              l.duration + c > n && (h = (p = n - c) / l.duration),\n                l.onProgress(h, p, i);\n            },\n          },\n          {\n            key: 'slipToLaneBackwards',\n            value: function (t, e, n, i) {\n              var r = this,\n                s = t.filter(function (t) {\n                  var i = r.incidentsById._get(t.id).duration + t.millisecond;\n                  return (\n                    (i <= n && i >= e) ||\n                    (t.millisecond >= e && t.millisecond <= n) ||\n                    (t.millisecond < e && i > n)\n                  );\n                });\n              if (0 === s.length) return !0;\n              var a = this.incidentsById._get(s[0].id),\n                o = s[0].millisecond,\n                u = 0,\n                l = 0;\n              o < n && ((u = (n - o) / a.duration), (l = n - o)),\n                a.onProgress(u, l, i);\n            },\n          },\n          {\n            key: 'moveTo',\n            value: function (t, e, n) {\n              for (\n                var i =\n                    arguments.length > 3 &&\n                    void 0 !== arguments[3] &&\n                    arguments[3],\n                  r = Object.keys(this.lanes),\n                  s = 0;\n                s < r.length;\n                s++\n              ) {\n                var a = this.lanes[r[s]];\n                t <= e\n                  ? this.slipIntoLaneForwards(a, t, e, n, i)\n                  : this.slipToLaneBackwards(a, t, e, n, i);\n              }\n            },\n          },\n        ]),\n        n\n      );\n    })(lt);\n  c(Nr, 'type', 'attributes');\n  var $r = (function () {\n      function t() {\n        o(this, t), (this.customEntities = {});\n      }\n      return (\n        l(t, [\n          {\n            key: 'calcClipDims',\n            value: function (t) {\n              var e = { use: !1, width: null, height: null };\n              return Object.prototype.hasOwnProperty.call(t, 'originalDims') &&\n                null !== t.originalDims.width &&\n                void 0 !== t.originalDims.width &&\n                null !== t.originalDims.height &&\n                void 0 !== t.originalDims.height\n                ? {\n                    use: !0,\n                    width:\n                      t.originalDims.width.number + t.originalDims.width.unit,\n                    height:\n                      t.originalDims.height.number + t.originalDims.height.unit,\n                  }\n                : (Object.prototype.hasOwnProperty.call(t, 'containerParams') &&\n                    (Object.prototype.hasOwnProperty.call(\n                      t.containerParams,\n                      'width',\n                    ) && ((e.use = !0), (e.width = t.containerParams.width)),\n                    Object.prototype.hasOwnProperty.call(\n                      t.containerParams,\n                      'height',\n                    ) && ((e.use = !0), (e.height = t.containerParams.height))),\n                  e);\n            },\n          },\n          {\n            key: 'scalingCalculator',\n            value: function (t) {\n              if (\n                !Object.prototype.hasOwnProperty.call(t, 'containerParams') ||\n                !Object.prototype.hasOwnProperty.call(t, 'originalDims')\n              )\n                return { width: 1, height: 1 };\n              if (\n                !(\n                  (null !== t.originalDims.width &&\n                    void 0 !== t.originalDims.width) ||\n                  (null !== t.originalDims.height &&\n                    void 0 !== t.originalDims.height)\n                )\n              )\n                return { width: 1, height: 1 };\n              var e = Y(t.containerParams),\n                n = null,\n                i = null;\n              return (\n                null !== e.width &&\n                  null !== t.originalDims.width &&\n                  (e.width.unit === t.originalDims.width.unit\n                    ? (n = e.width.number / t.originalDims.width.number)\n                    : ot.warning(\n                        'containerParams and originalDims width of Incident have different dimensions.\\n          containerParams.width will be ignored',\n                      )),\n                null !== e.height &&\n                  null !== t.originalDims.height &&\n                  (e.height.unit === t.originalDims.height.unit\n                    ? (i = e.height.number / t.originalDims.height.number)\n                    : ot.warning(\n                        'containerParams and originalDims height of Incident have different dimensions.\\n          containerParams.width will be ignored',\n                      )),\n                null === n && null === i\n                  ? { width: 1, height: 1 }\n                  : ((null !== n) & (null === i)\n                      ? (i = n)\n                      : (null !== i) & (null === n) && (n = i),\n                    { width: n, height: i })\n              );\n            },\n          },\n          {\n            key: 'getElementByMCID',\n            value: function (t) {\n              if (Object.prototype.hasOwnProperty.call(this.customEntities, t))\n                return this.customEntities[t];\n              if (Object.prototype.hasOwnProperty.call(this.elementsByMCID, t))\n                return this.elementsByMCID[t];\n              var e = this.context.rootElement.querySelector(\n                this.getElementSelectorByMCID(t),\n              );\n              return (this.elementsByMCID[t] = e), e;\n            },\n          },\n          {\n            key: 'getElements',\n            value: function (t) {\n              if (null == t || '' === t) return [];\n              if ('!' === t.charAt(0)) {\n                if ('#' === (t = t.substr(1)).charAt(0))\n                  return [this.customEntities[t.substr(1)]];\n                if ('.' === t.charAt(0)) {\n                  var e = [];\n                  for (var n in this.customEntities) {\n                    var i = this.customEntities[n];\n                    i.classes.indexOf(t.substr(1)) > -1 && e.push(i);\n                  }\n                  return e;\n                }\n              }\n              return Array.from(this.context.rootElement.querySelectorAll(t));\n            },\n          },\n          {\n            key: 'getMCID',\n            value: function (t) {\n              return !0 === t.customEntity ? t.id : t.getAttribute(L);\n            },\n          },\n          {\n            key: 'setMCID',\n            value: function (t, e) {\n              t.setAttribute(L, e);\n            },\n          },\n          {\n            key: 'getElementSelectorByMCID',\n            value: function (t) {\n              return Object.prototype.hasOwnProperty.call(\n                this.customEntities,\n                t,\n              )\n                ? '!#'.concat(t)\n                : '['.concat(L, '=\"').concat(t, '\"]');\n            },\n          },\n          {\n            key: 'setCustomEntity',\n            value: function (t, e) {\n              var n =\n                arguments.length > 2 && void 0 !== arguments[2]\n                  ? arguments[2]\n                  : [];\n              return Object.prototype.hasOwnProperty.call(\n                this.customEntities,\n                t,\n              )\n                ? (ot.error(\n                    'Clip '\n                      .concat(this.id, ' already has custom Entity with id: ')\n                      .concat(t),\n                  ),\n                  !1)\n                : ((this.customEntities[t] = {\n                    id: t,\n                    entity: e,\n                    classes: n,\n                    customEntity: !0,\n                  }),\n                  !0);\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Br = De(function (t, e) {\n      var n = /[|\\\\{}()[\\]^$+*?.]/g;\n      e.escapeRegExpChars = function (t) {\n        return t ? String(t).replace(n, '\\\\$&') : '';\n      };\n      var i = {\n          '&': '&amp;',\n          '<': '&lt;',\n          '>': '&gt;',\n          '\"': '&#34;',\n          \"'\": '&#39;',\n        },\n        r = /[&<>'\"]/g;\n      function s(t) {\n        return i[t] || t;\n      }\n      (e.escapeXML = function (t) {\n        return null == t ? '' : String(t).replace(r, s);\n      }),\n        (e.escapeXML.toString = function () {\n          return (\n            Function.prototype.toString.call(this) +\n            ';\\nvar _ENCODE_HTML_RULES = {\\n      \"&\": \"&amp;\"\\n    , \"<\": \"&lt;\"\\n    , \">\": \"&gt;\"\\n    , \\'\"\\': \"&#34;\"\\n    , \"\\'\": \"&#39;\"\\n    }\\n  , _MATCH_HTML = /[&<>\\'\"]/g;\\nfunction encode_char(c) {\\n  return _ENCODE_HTML_RULES[c] || c;\\n};\\n'\n          );\n        }),\n        (e.shallowCopy = function (t, e) {\n          for (var n in (e = e || {})) t[n] = e[n];\n          return t;\n        }),\n        (e.shallowCopyFromList = function (t, e, n) {\n          for (var i = 0; i < n.length; i++) {\n            var r = n[i];\n            void 0 !== e[r] && (t[r] = e[r]);\n          }\n          return t;\n        }),\n        (e.cache = {\n          _data: {},\n          set: function (t, e) {\n            this._data[t] = e;\n          },\n          get: function (t) {\n            return this._data[t];\n          },\n          remove: function (t) {\n            delete this._data[t];\n          },\n          reset: function () {\n            this._data = {};\n          },\n        }),\n        (e.hyphenToCamel = function (t) {\n          return t.replace(/-[a-z]/g, function (t) {\n            return t[1].toUpperCase();\n          });\n        });\n    }),\n    Lr = '3.1.6',\n    Rr = De(function (t, e) {\n      /**\n       * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n       * @author Matthew Eernisse <mde@fleegix.org>\n       * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n       * @project EJS\n       * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n       */\n      var n = s.default,\n        i = !1,\n        a = Lr,\n        o = 'locals',\n        u = [\n          'delimiter',\n          'scope',\n          'context',\n          'debug',\n          'compileDebug',\n          'client',\n          '_with',\n          'rmWhitespace',\n          'strict',\n          'filename',\n          'async',\n        ],\n        l = u.concat('cache'),\n        c = /^\\uFEFF/;\n      function h(t, n) {\n        var i;\n        if (\n          n.some(function (n) {\n            return (i = e.resolveInclude(t, n, !0)), r.default.existsSync(i);\n          })\n        )\n          return i;\n      }\n      function p(t, n) {\n        var i,\n          r = t.filename,\n          s = arguments.length > 1;\n        if (t.cache) {\n          if (!r) throw new Error('cache option requires a filename');\n          if ((i = e.cache.get(r))) return i;\n          s || (n = f(r).toString().replace(c, ''));\n        } else if (!s) {\n          if (!r)\n            throw new Error(\n              'Internal EJS error: no file name or template provided',\n            );\n          n = f(r).toString().replace(c, '');\n        }\n        return (i = e.compile(n, t)), t.cache && e.cache.set(r, i), i;\n      }\n      function d(t, n, i) {\n        var r;\n        if (!i) {\n          if ('function' == typeof e.promiseImpl)\n            return new e.promiseImpl(function (e, i) {\n              try {\n                e((r = p(t)(n)));\n              } catch (t) {\n                i(t);\n              }\n            });\n          throw new Error('Please provide a callback function');\n        }\n        try {\n          r = p(t)(n);\n        } catch (t) {\n          return i(t);\n        }\n        i(null, r);\n      }\n      function f(t) {\n        return e.fileLoader(t);\n      }\n      function m(t, n) {\n        var i = Br.shallowCopy({}, n);\n        if (\n          ((i.filename = (function (t, n) {\n            var i,\n              s,\n              a = n.views,\n              o = /^[A-Za-z]+:\\\\|^\\//.exec(t);\n            if (o && o.length)\n              (t = t.replace(/^\\/*/, '')),\n                (i = Array.isArray(n.root)\n                  ? h(t, n.root)\n                  : e.resolveInclude(t, n.root || '/', !0));\n            else if (\n              (n.filename &&\n                ((s = e.resolveInclude(t, n.filename)),\n                r.default.existsSync(s) && (i = s)),\n              !i && Array.isArray(a) && (i = h(t, a)),\n              !i && 'function' != typeof n.includer)\n            )\n              throw new Error(\n                'Could not find the include file \"' + n.escapeFunction(t) + '\"',\n              );\n            return i;\n          })(t, i)),\n          'function' == typeof n.includer)\n        ) {\n          var s = n.includer(t, i.filename);\n          if (s && (s.filename && (i.filename = s.filename), s.template))\n            return p(i, s.template);\n        }\n        return p(i);\n      }\n      function v(t, e, n, i, r) {\n        var s = e.split('\\n'),\n          a = Math.max(i - 3, 0),\n          o = Math.min(s.length, i + 3),\n          u = r(n),\n          l = s\n            .slice(a, o)\n            .map(function (t, e) {\n              var n = e + a + 1;\n              return (n == i ? ' >> ' : '    ') + n + '| ' + t;\n            })\n            .join('\\n');\n        throw (\n          ((t.path = u),\n          (t.message = (u || 'ejs') + ':' + i + '\\n' + l + '\\n\\n' + t.message),\n          t)\n        );\n      }\n      function y(t) {\n        return t.replace(/;(\\s*$)/, '$1');\n      }\n      function g(t, n) {\n        n = n || {};\n        var i = {};\n        (this.templateText = t),\n          (this.mode = null),\n          (this.truncate = !1),\n          (this.currentLine = 1),\n          (this.source = ''),\n          (i.client = n.client || !1),\n          (i.escapeFunction = n.escape || n.escapeFunction || Br.escapeXML),\n          (i.compileDebug = !1 !== n.compileDebug),\n          (i.debug = !!n.debug),\n          (i.filename = n.filename),\n          (i.openDelimiter = n.openDelimiter || e.openDelimiter || '<'),\n          (i.closeDelimiter = n.closeDelimiter || e.closeDelimiter || '>'),\n          (i.delimiter = n.delimiter || e.delimiter || '%'),\n          (i.strict = n.strict || !1),\n          (i.context = n.context),\n          (i.cache = n.cache || !1),\n          (i.rmWhitespace = n.rmWhitespace),\n          (i.root = n.root),\n          (i.includer = n.includer),\n          (i.outputFunctionName = n.outputFunctionName),\n          (i.localsName = n.localsName || e.localsName || o),\n          (i.views = n.views),\n          (i.async = n.async),\n          (i.destructuredLocals = n.destructuredLocals),\n          (i.legacyInclude = void 0 === n.legacyInclude || !!n.legacyInclude),\n          i.strict ? (i._with = !1) : (i._with = void 0 === n._with || n._with),\n          (this.opts = i),\n          (this.regex = this.createRegex());\n      }\n      (e.cache = Br.cache),\n        (e.fileLoader = r.default.readFileSync),\n        (e.localsName = o),\n        (e.promiseImpl = new Function('return this;')().Promise),\n        (e.resolveInclude = function (t, e, i) {\n          var r = n.dirname,\n            s = n.extname,\n            a = (0, n.resolve)(i ? e : r(e), t);\n          return s(t) || (a += '.ejs'), a;\n        }),\n        (e.compile = function (t, e) {\n          return (\n            e &&\n              e.scope &&\n              (i ||\n                (console.warn(\n                  '`scope` option is deprecated and will be removed in EJS 3',\n                ),\n                (i = !0)),\n              e.context || (e.context = e.scope),\n              delete e.scope),\n            new g(t, e).compile()\n          );\n        }),\n        (e.render = function (t, e, n) {\n          var i = e || {},\n            r = n || {};\n          return (\n            2 == arguments.length && Br.shallowCopyFromList(r, i, u), p(r, t)(i)\n          );\n        }),\n        (e.renderFile = function () {\n          var t,\n            e,\n            n,\n            i = Array.prototype.slice.call(arguments),\n            r = i.shift(),\n            s = { filename: r };\n          return (\n            'function' == typeof arguments[arguments.length - 1] &&\n              (t = i.pop()),\n            i.length\n              ? ((e = i.shift()),\n                i.length\n                  ? Br.shallowCopy(s, i.pop())\n                  : (e.settings &&\n                      (e.settings.views && (s.views = e.settings.views),\n                      e.settings['view cache'] && (s.cache = !0),\n                      (n = e.settings['view options']) && Br.shallowCopy(s, n)),\n                    Br.shallowCopyFromList(s, e, l)),\n                (s.filename = r))\n              : (e = {}),\n            d(s, e, t)\n          );\n        }),\n        (e.Template = g),\n        (e.clearCache = function () {\n          e.cache.reset();\n        }),\n        (g.modes = {\n          EVAL: 'eval',\n          ESCAPED: 'escaped',\n          RAW: 'raw',\n          COMMENT: 'comment',\n          LITERAL: 'literal',\n        }),\n        (g.prototype = {\n          createRegex: function () {\n            var t = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)',\n              e = Br.escapeRegExpChars(this.opts.delimiter),\n              n = Br.escapeRegExpChars(this.opts.openDelimiter),\n              i = Br.escapeRegExpChars(this.opts.closeDelimiter);\n            return (\n              (t = t.replace(/%/g, e).replace(/</g, n).replace(/>/g, i)),\n              new RegExp(t)\n            );\n          },\n          compile: function () {\n            var t,\n              e,\n              i,\n              r = this.opts,\n              s = '',\n              a = '',\n              o = r.escapeFunction,\n              u = r.filename ? JSON.stringify(r.filename) : 'undefined';\n            if (!this.source) {\n              if (\n                (this.generateSource(),\n                (s +=\n                  '  var __output = \"\";\\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n'),\n                r.outputFunctionName &&\n                  (s += '  var ' + r.outputFunctionName + ' = __append;\\n'),\n                r.destructuredLocals && r.destructuredLocals.length)\n              ) {\n                for (\n                  var l = '  var __locals = (' + r.localsName + ' || {}),\\n',\n                    c = 0;\n                  c < r.destructuredLocals.length;\n                  c++\n                ) {\n                  var h = r.destructuredLocals[c];\n                  c > 0 && (l += ',\\n  '), (l += h + ' = __locals.' + h);\n                }\n                s += l + ';\\n';\n              }\n              !1 !== r._with &&\n                ((s += '  with (' + r.localsName + ' || {}) {\\n'),\n                (a += '  }\\n')),\n                (a += '  return __output;\\n'),\n                (this.source = s + this.source + a);\n            }\n            (t = r.compileDebug\n              ? 'var __line = 1\\n  , __lines = ' +\n                JSON.stringify(this.templateText) +\n                '\\n  , __filename = ' +\n                u +\n                ';\\ntry {\\n' +\n                this.source +\n                '} catch (e) {\\n  rethrow(e, __lines, __filename, __line, escapeFn);\\n}\\n'\n              : this.source),\n              r.client &&\n                ((t = 'escapeFn = escapeFn || ' + o.toString() + ';\\n' + t),\n                r.compileDebug &&\n                  (t = 'rethrow = rethrow || ' + v.toString() + ';\\n' + t)),\n              r.strict && (t = '\"use strict\";\\n' + t),\n              r.debug && console.log(t),\n              r.compileDebug &&\n                r.filename &&\n                (t = t + '\\n//# sourceURL=' + u + '\\n');\n            try {\n              if (r.async)\n                try {\n                  i = new Function(\n                    'return (async function(){}).constructor;',\n                  )();\n                } catch (t) {\n                  throw t instanceof SyntaxError\n                    ? new Error('This environment does not support async/await')\n                    : t;\n                }\n              else i = Function;\n              e = new i(r.localsName + ', escapeFn, include, rethrow', t);\n            } catch (t) {\n              throw (\n                (t instanceof SyntaxError &&\n                  (r.filename && (t.message += ' in ' + r.filename),\n                  (t.message += ' while compiling ejs\\n\\n'),\n                  (t.message +=\n                    'If the above error is not helpful, you may want to try EJS-Lint:\\n'),\n                  (t.message += 'https://github.com/RyanZim/EJS-Lint'),\n                  r.async ||\n                    ((t.message += '\\n'),\n                    (t.message +=\n                      'Or, if you meant to create an async function, pass `async: true` as an option.'))),\n                t)\n              );\n            }\n            var p = r.client\n              ? e\n              : function (t) {\n                  return e.apply(r.context, [\n                    t || {},\n                    o,\n                    function (e, n) {\n                      var i = Br.shallowCopy({}, t);\n                      return n && (i = Br.shallowCopy(i, n)), m(e, r)(i);\n                    },\n                    v,\n                  ]);\n                };\n            if (r.filename && 'function' == typeof Object.defineProperty) {\n              var d = r.filename,\n                f = n.basename(d, n.extname(d));\n              try {\n                Object.defineProperty(p, 'name', {\n                  value: f,\n                  writable: !1,\n                  enumerable: !1,\n                  configurable: !0,\n                });\n              } catch (t) {}\n            }\n            return p;\n          },\n          generateSource: function () {\n            this.opts.rmWhitespace &&\n              (this.templateText = this.templateText\n                .replace(/[\\r\\n]+/g, '\\n')\n                .replace(/^\\s+|\\s+$/gm, '')),\n              (this.templateText = this.templateText\n                .replace(/[ \\t]*<%_/gm, '<%_')\n                .replace(/_%>[ \\t]*/gm, '_%>'));\n            var t = this,\n              e = this.parseTemplateText(),\n              n = this.opts.delimiter,\n              i = this.opts.openDelimiter,\n              r = this.opts.closeDelimiter;\n            e &&\n              e.length &&\n              e.forEach(function (s, a) {\n                var o;\n                if (\n                  0 === s.indexOf(i + n) &&\n                  0 !== s.indexOf(i + n + n) &&\n                  (o = e[a + 2]) != n + r &&\n                  o != '-' + n + r &&\n                  o != '_' + n + r\n                )\n                  throw new Error(\n                    'Could not find matching close tag for \"' + s + '\".',\n                  );\n                t.scanLine(s);\n              });\n          },\n          parseTemplateText: function () {\n            for (\n              var t,\n                e = this.templateText,\n                n = this.regex,\n                i = n.exec(e),\n                r = [];\n              i;\n\n            )\n              0 !== (t = i.index) &&\n                (r.push(e.substring(0, t)), (e = e.slice(t))),\n                r.push(i[0]),\n                (e = e.slice(i[0].length)),\n                (i = n.exec(e));\n            return e && r.push(e), r;\n          },\n          _addOutput: function (t) {\n            if (\n              (this.truncate &&\n                ((t = t.replace(/^(?:\\r\\n|\\r|\\n)/, '')), (this.truncate = !1)),\n              !t)\n            )\n              return t;\n            (t = (t = (t = (t = t.replace(/\\\\/g, '\\\\\\\\')).replace(\n              /\\n/g,\n              '\\\\n',\n            )).replace(/\\r/g, '\\\\r')).replace(/\"/g, '\\\\\"')),\n              (this.source += '    ; __append(\"' + t + '\")\\n');\n          },\n          scanLine: function (t) {\n            var e,\n              n = this.opts.delimiter,\n              i = this.opts.openDelimiter,\n              r = this.opts.closeDelimiter;\n            switch (((e = t.split('\\n').length - 1), t)) {\n              case i + n:\n              case i + n + '_':\n                this.mode = g.modes.EVAL;\n                break;\n              case i + n + '=':\n                this.mode = g.modes.ESCAPED;\n                break;\n              case i + n + '-':\n                this.mode = g.modes.RAW;\n                break;\n              case i + n + '#':\n                this.mode = g.modes.COMMENT;\n                break;\n              case i + n + n:\n                (this.mode = g.modes.LITERAL),\n                  (this.source +=\n                    '    ; __append(\"' + t.replace(i + n + n, i + n) + '\")\\n');\n                break;\n              case n + n + r:\n                (this.mode = g.modes.LITERAL),\n                  (this.source +=\n                    '    ; __append(\"' + t.replace(n + n + r, n + r) + '\")\\n');\n                break;\n              case n + r:\n              case '-' + n + r:\n              case '_' + n + r:\n                this.mode == g.modes.LITERAL && this._addOutput(t),\n                  (this.mode = null),\n                  (this.truncate =\n                    0 === t.indexOf('-') || 0 === t.indexOf('_'));\n                break;\n              default:\n                if (this.mode) {\n                  switch (this.mode) {\n                    case g.modes.EVAL:\n                    case g.modes.ESCAPED:\n                    case g.modes.RAW:\n                      t.lastIndexOf('//') > t.lastIndexOf('\\n') && (t += '\\n');\n                  }\n                  switch (this.mode) {\n                    case g.modes.EVAL:\n                      this.source += '    ; ' + t + '\\n';\n                      break;\n                    case g.modes.ESCAPED:\n                      this.source += '    ; __append(escapeFn(' + y(t) + '))\\n';\n                      break;\n                    case g.modes.RAW:\n                      this.source += '    ; __append(' + y(t) + ')\\n';\n                      break;\n                    case g.modes.COMMENT:\n                      break;\n                    case g.modes.LITERAL:\n                      this._addOutput(t);\n                  }\n                } else this._addOutput(t);\n            }\n            this.opts.compileDebug &&\n              e &&\n              ((this.currentLine += e),\n              (this.source += '    ; __line = ' + this.currentLine + '\\n'));\n          },\n        }),\n        (e.escapeXML = Br.escapeXML),\n        (e.__express = e.renderFile),\n        (e.VERSION = a),\n        (e.name = 'ejs'),\n        'undefined' != typeof window && (window.ejs = e);\n    });\n  function Fr(t, e) {\n    return U(t) ? t(e) : Rr.render(t, { initParams: e });\n  }\n  var zr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        var t,\n          i =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        if ((o(this, n), (t = e.call(this)), !H(i)))\n          return (\n            ot.error(\n              'ContextHandler expects an object on its constructor. '.concat(\n                a(i),\n                ' passed',\n              ),\n            ),\n            y(t, !1)\n          );\n        if (!Object.prototype.hasOwnProperty.call(i, 'html'))\n          return (\n            ot.error(\n              'ContextHandler expects the html key on its constructor properties which is missing',\n            ),\n            y(t, !1)\n          );\n        if (!Object.prototype.hasOwnProperty.call(i, 'css'))\n          return (\n            ot.error(\n              'ContextHandler expects the css key on its constructor properties which is missing',\n            ),\n            y(t, !1)\n          );\n        if (\n          (Object.prototype.hasOwnProperty.call(i, 'initParams') ||\n            ot.info('ContextHandler got null initParams'),\n          !Object.prototype.hasOwnProperty.call(i, 'host'))\n        )\n          return (\n            ot.error(\n              'ContextHandler expects the host key on its constructor properties which is missing',\n            ),\n            y(t, !1)\n          );\n        t.isDOM = !0;\n        var r = i.host.ownerDocument;\n        if (\n          !r.getElementById(\n            '@kissmybutton/motorcortex/iframeContextHandler/css',\n          )\n        ) {\n          var s =\n              '\\n            iframe[seamless]{\\n                background-color: transparent;\\n                border: 0px none transparent;\\n                padding: 0px;\\n                overflow: hidden;\\n            }\\n            ',\n            u = r.createElement('style');\n          (u.id = '@kissmybutton/motorcortex/iframeContextHandler/css'),\n            (u.type = 'text/css');\n          var l = r.head || r.getElementsByTagName('head')[0];\n          u.styleSheet\n            ? (u.styleSheet.cssText = s)\n            : u.appendChild(r.createTextNode(s)),\n            l.appendChild(u);\n        }\n        var c = r.createElement('iframe');\n        i.host.appendChild(c);\n        var h = t.scalingCalculator(i),\n          p = t.calcClipDims(i);\n        c.setAttribute('seamless', 'seamless'),\n          !0 === p.use &&\n            (null !== p.width && c.setAttribute('width', p.width),\n            null !== p.height && c.setAttribute('height', p.height)),\n          (c.style.transform = 'scale('\n            .concat(h.width, ', ')\n            .concat(h.height, ')')),\n          (c.style.transformOrigin = 'top left'),\n          (c.style.position = 'absolute'),\n          (c.src = '');\n        var d = c.contentWindow || c.contentDocument;\n        d.document && (d = d.document), d.write(Fr(i.html, i.initParams));\n        var f =\n            '\\n        body{\\n            padding:0;\\n            margin:0;\\n        }\\n        ',\n          m = d.createElement('style');\n        (m.type = 'text/css'),\n          m.styleSheet\n            ? (m.styleSheet.cssText = Fr(i.css, i.initParams) + f)\n            : m.appendChild(r.createTextNode(Fr(i.css, i.initParams) + f));\n        var g = d.head || d.getElementsByTagName('head')[0];\n        if (\n          (g.appendChild(m), Object.prototype.hasOwnProperty.call(i, 'fonts'))\n        )\n          for (var b = 0; b < i.fonts.length; b++) {\n            var k = i.fonts[b];\n            if ('google-font' === k.type) {\n              var x = d.createElement('link');\n              x.setAttribute('rel', 'stylesheet'),\n                x.setAttribute('href', k.src),\n                g.appendChild(x);\n            }\n          }\n        return (\n          (t.rootElement = c),\n          d.close(),\n          (t.context = {\n            document: d,\n            window: c.contentWindow || c,\n            clipContainer: c,\n            rootElement: d.body,\n            unmount: function () {\n              i.host.removeChild(c);\n            },\n            getElements: t.getElements.bind(v(t)),\n            getMCID: t.getMCID.bind(v(t)),\n            setMCID: t.setMCID.bind(v(t)),\n            getElementSelectorByMCID: t.getElementSelectorByMCID.bind(v(t)),\n            getElementByMCID: t.getElementByMCID.bind(v(t)),\n            setCustomEntity: t.setCustomEntity.bind(v(t)),\n          }),\n          (t.elementsByMCID = {}),\n          t\n        );\n      }\n      return n;\n    })($r),\n    Gr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        var t,\n          i =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        if ((o(this, n), (t = e.call(this)), !H(i)))\n          return (\n            ot.error(\n              'ContextHandler expects an object on its constructor. '.concat(\n                a(i),\n                ' passed',\n              ),\n            ),\n            y(t, !1)\n          );\n        if (!Object.prototype.hasOwnProperty.call(i, 'html'))\n          return (\n            ot.error(\n              'ContextHandler expects the html key on its constructor properties which is missing',\n            ),\n            y(t, !1)\n          );\n        if (!Object.prototype.hasOwnProperty.call(i, 'css'))\n          return (\n            ot.error(\n              'ContextHandler expects the css key on its constructor properties which is missing',\n            ),\n            y(t, !1)\n          );\n        if (!Object.prototype.hasOwnProperty.call(i, 'host'))\n          return (\n            ot.error(\n              'ContextHandler expects the host key on its constructor properties which is missing',\n            ),\n            y(t, !1)\n          );\n        t.isDOM = !0;\n        var r = i.host.shadowRoot;\n        r || (r = i.host.attachShadow({ mode: 'open' }));\n        var s = document.createElement('div'),\n          u = t.scalingCalculator(i),\n          l = t.calcClipDims(i);\n        s.setAttribute('data-motorocortex-container', 'true'),\n          !0 === l.use &&\n            (null !== l.width && (s.style.width = l.width),\n            null !== l.height && (s.style.height = l.height)),\n          (s.style.transform = 'scale('\n            .concat(u.width, ', ')\n            .concat(u.height, ')')),\n          (s.style.transformOrigin = 'top left'),\n          (s.style.position = 'absolute'),\n          (s.style.overflow = 'hidden'),\n          (s.innerHTML = Fr(i.html, i.initParams)),\n          r.appendChild(s);\n        var c = document.createElement('slot');\n        r.appendChild(c);\n        var h = document.createElement('style');\n        if (\n          ((h.type = 'text/css'),\n          h.styleSheet\n            ? (h.styleSheet.cssText = Fr(i.css, i.initParams))\n            : h.appendChild(\n                document.createTextNode(\n                  '[data-motorocortex-container] { all: initial; }' +\n                    Fr(i.css, i.initParams),\n                ),\n              ),\n          r.appendChild(h),\n          (t.fontTags = []),\n          Object.prototype.hasOwnProperty.call(i, 'fonts'))\n        )\n          for (var p = 0; p < i.fonts.length; p++) {\n            var d = i.fonts[p];\n            if ('google-font' === d.type) {\n              var f = document.createElement('link');\n              f.setAttribute('rel', 'stylesheet'),\n                f.setAttribute('href', d.src),\n                document.getElementsByTagName('head')[0].appendChild(f),\n                t.fontTags.push(f);\n            }\n          }\n        return (\n          (s.style.overflow = 'hidden'),\n          (t.rootElement = s),\n          (t.context = {\n            document: document,\n            window: window,\n            clipContainer: t.rootElement,\n            rootElement: s,\n            unmount: function () {\n              try {\n                r.innerHTML = '';\n                for (var t = 0; t < this.fontTags.length; t++)\n                  document\n                    .getElementsByTagName('head')[0]\n                    .removeChild(this.fontTags[t]);\n              } catch (t) {\n                ot.warning(\n                  'The element of the Clip to be removed seems not to exist any more',\n                );\n              }\n            },\n            getElements: t.getElements.bind(v(t)),\n            getMCID: t.getMCID.bind(v(t)),\n            setMCID: t.setMCID.bind(v(t)),\n            getElementSelectorByMCID: t.getElementSelectorByMCID.bind(v(t)),\n            getElementByMCID: t.getElementByMCID.bind(v(t)),\n            setCustomEntity: t.setCustomEntity.bind(v(t)),\n          }),\n          (t.elementsByMCID = {}),\n          t\n        );\n      }\n      return n;\n    })($r),\n    qr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        var t,\n          i,\n          r,\n          s =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          a =\n            arguments.length > 1 && void 0 !== arguments[1]\n              ? arguments[1]\n              : null;\n        o(this, n),\n          null === a ? ((i = {}), (r = s)) : ((i = s), (r = a)),\n          (t = e.call(this, i, r)),\n          (r = p(\n            p({}, r),\n            {},\n            {\n              html: '' !== t.html ? t.html : r.html,\n              css: '' !== t.css ? t.css : r.css,\n              fonts: t.fonts.length > 0 ? t.fonts : r.fonts,\n            },\n          ));\n        var u = R;\n        t.clipType = u;\n        var l = new (document.head.createShadowRoot ||\n        document.head.attachShadow\n          ? Gr\n          : zr)(r);\n        return (\n          (t.ownContext = p(\n            p({}, l.context),\n            {},\n            {\n              isHostedClip: t.isHostedClip,\n              contextLoaded: !0,\n              initParams: r.initParams,\n            },\n          )),\n          (t.iframe = l.iframeElement),\n          (t.forceExportIncidents = !0),\n          t.onAfterRender(),\n          t\n        );\n      }\n      return (\n        l(n, [\n          { key: 'onAfterRender', value: function () {} },\n          {\n            key: 'html',\n            get: function () {\n              return '';\n            },\n          },\n          {\n            key: 'css',\n            get: function () {\n              return '';\n            },\n          },\n          {\n            key: 'fonts',\n            get: function () {\n              return [];\n            },\n          },\n          {\n            key: 'rootElement',\n            get: function () {\n              return this.ownContext.clipContainer;\n            },\n          },\n          {\n            key: 'exportConstructionArguments',\n            value: function () {\n              return {\n                attrs: this.attrs,\n                props: p(\n                  p({}, this.props),\n                  {},\n                  {\n                    host: void 0,\n                    html:\n                      !0 === this.DescriptiveIncident.constructor.customClip\n                        ? ''\n                        : this.ownContext.rootElement.innerHTML,\n                  },\n                ),\n              };\n            },\n          },\n          {\n            key: 'setCustomEntity',\n            value: function (t, e) {\n              var n =\n                arguments.length > 2 && void 0 !== arguments[2]\n                  ? arguments[2]\n                  : [];\n              return this.context.setCustomEntity(t, e, n);\n            },\n          },\n        ]),\n        n\n      );\n    })(br),\n    Kr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        var t,\n          i =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        o(this, n), (t = e.call(this));\n        var r = p({}, i);\n        if (!H(r))\n          return (\n            ot.error(\n              'HTMLFragmentContextHandler expects an object on its constructor. '.concat(\n                a(r),\n                ' passed',\n              ),\n            ),\n            y(t, !1)\n          );\n        Object.prototype.hasOwnProperty.call(r, 'html') || (r.html = ''),\n          (t.isDOM = !0);\n        var s = document.createDocumentFragment(),\n          u = document.createElement('div');\n        return (\n          Object.prototype.hasOwnProperty.call(r, 'containerParams') &&\n            (Object.prototype.hasOwnProperty.call(r, 'width') &&\n              (u.style.width = r.containerParams.width),\n            Object.prototype.hasOwnProperty.call(r, 'height') &&\n              (u.style.height = r.containerParams.height)),\n          (u.innerHTML = Fr(r.html, r.initParams)),\n          s.appendChild(u),\n          (u.style.overflow = 'hidden'),\n          (t.rootElement = u),\n          (t.context = {\n            document: document,\n            window: window,\n            clipContainer: t.rootElement,\n            rootElement: u,\n            unmount: function () {\n              r.host.removeChild(s);\n            },\n            getElements: t.getElements.bind(v(t)),\n            getMCID: t.getMCID.bind(v(t)),\n            setMCID: t.setMCID.bind(v(t)),\n            getElementSelectorByMCID: t.getElementSelectorByMCID.bind(v(t)),\n            getElementByMCID: t.getElementByMCID.bind(v(t)),\n            setCustomEntity: t.setCustomEntity.bind(v(t)),\n            fragment: !0,\n          }),\n          (t.elementsByMCID = {}),\n          t\n        );\n      }\n      return n;\n    })($r),\n    Jr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n() {\n        var t,\n          i,\n          r,\n          s =\n            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          a =\n            arguments.length > 1 && void 0 !== arguments[1]\n              ? arguments[1]\n              : null;\n        o(this, n),\n          null === a ? ((i = {}), (r = s)) : ((i = s), (r = a)),\n          (t = e.call(this, i, r));\n        var u = new Kr(\n          p(\n            p({}, r),\n            {},\n            {\n              html: Object.prototype.hasOwnProperty.call(r, 'html')\n                ? r.html\n                : t.html,\n              css: Object.prototype.hasOwnProperty.call(r, 'css')\n                ? r.css\n                : t.css,\n              fonts: Object.prototype.hasOwnProperty.call(r, 'fonts')\n                ? r.fonts\n                : t.fonts,\n            },\n          ),\n        );\n        return (\n          (t.ownContext = p(p({}, u.context), {}, { isHostedClip: !1 })),\n          (t.iframe = u.iframeElement),\n          (t.forceExportIncidents = !0),\n          t.onDOMCLipInitialise(),\n          t\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: 'exportConstructionArguments',\n            value: function () {\n              return {\n                attrs: this.attrs,\n                props: p(\n                  p({}, this.props),\n                  {},\n                  { html: this.ownContext.rootElement.innerHTML },\n                ),\n              };\n            },\n          },\n          { key: 'onDOMCLipInitialise', value: function () {} },\n          {\n            key: 'rootElement',\n            get: function () {\n              return this.ownContext.clipContainer;\n            },\n          },\n        ]),\n        n\n      );\n    })(br),\n    Wr = (function () {\n      function t() {\n        o(this, t);\n      }\n      return (\n        l(t, [\n          {\n            key: 'duration',\n            get: function () {\n              return 0;\n            },\n          },\n          {\n            key: 'addIncident',\n            value: function () {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'moveIncident',\n            value: function () {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'removeIncident',\n            value: function () {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'resizeIncident',\n            value: function () {\n              return { result: !0, execute: function () {} };\n            },\n          },\n          {\n            key: 'getIncidentsByChannel',\n            value: function () {\n              return {};\n            },\n          },\n          { key: 'flash', value: function () {} },\n          { key: '_resize', value: function () {} },\n          { key: 'onProgress', value: function () {} },\n        ]),\n        t\n      );\n    })(),\n    Hr = (function () {\n      function t(e) {\n        o(this, t),\n          (this.runTimeInfo = { currentMillisecond: 0, state: 'transitional' }),\n          (this.id = rt()),\n          (this.realClip = e.descriptiveIncident.realClip);\n        var n = e.descriptiveIncident.realClip.exportConstructionArguments(),\n          i = p(\n            p({}, n.props),\n            {},\n            { selector: void 0, host: e.host, id: this.id },\n          );\n        (this.ownClip = new e.descriptiveIncident.constructor.Incident(\n          n.attrs,\n          i,\n        )),\n          e.descriptiveIncident.realClip.addContext(\n            {\n              clipId: this.id,\n              context: this.ownClip.ownContext,\n              synchronize: e.synchronize,\n              runTimeInfo: this.runTimeInfo,\n            },\n            !0,\n          );\n      }\n      return (\n        l(t, [\n          {\n            key: 'onProgress',\n            value: function (t, e) {\n              for (var n in this.realClip.instantiatedChannels) {\n                this.realClip.instantiatedChannels[n].moveTo(\n                  this.runTimeInfo.currentMillisecond,\n                  e,\n                  this.id,\n                  !0,\n                );\n              }\n              this.runTimeInfo.currentMillisecond = e;\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    Ur = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t) {\n        var i,\n          r,\n          s,\n          a =\n            arguments.length > 1 && void 0 !== arguments[1]\n              ? arguments[1]\n              : null;\n        o(this, n),\n          null === a ? ((r = {}), (s = t)) : ((r = t), (s = a)),\n          ((i = e.call(this, r, s)).initParams = s.initParams || {});\n        var u = i._validateProps();\n        if (!u.result) return y(i, u);\n        (i.isTheRootClip = !1),\n          (i.isExportableToJSONFormat = !0),\n          Object.prototype.hasOwnProperty.call(s, 'html') &&\n            U(s.html) &&\n            (i.isExportableToJSONFormat = !1);\n        var l = {\n          id: i.id,\n          attrs: r,\n          props: p(\n            p({}, s),\n            {},\n            {\n              html: Object.prototype.hasOwnProperty.call(s, 'html')\n                ? s.html\n                : i.html,\n              css: Object.prototype.hasOwnProperty.call(s, 'css')\n                ? s.css\n                : i.css,\n              fonts: Object.prototype.hasOwnProperty.call(s, 'fonts')\n                ? s.fonts\n                : i.fonts,\n              runTimeInfo: i.runTimeInfo,\n              subscribe: i.subscribe.bind(v(i)),\n            },\n          ),\n          plugin_npm_name: i.constructor.plugin_npm_name,\n          Channel: i.constructor.Channel,\n          DescriptiveIncident: v(i),\n        };\n        if (\n          ((i.audio = 'on'),\n          Object.prototype.hasOwnProperty.call(i.constructor, 'audio') &&\n            (i.audio = i.constructor.audio),\n          Object.prototype.hasOwnProperty.call(s, 'audio') &&\n            (i.audio = s.audio),\n          Object.prototype.hasOwnProperty.call(s, 'selector') &&\n            void 0 !== s.selector &&\n            !0 !== i.constructor.customClip)\n        )\n          l.Incident = Jr;\n        else if (\n          Object.prototype.hasOwnProperty.call(s, 'selector') &&\n          void 0 !== s.selector &&\n          !0 === i.constructor.customClip\n        ) {\n          delete l.props.selector;\n          var c = new Jr({ html: '<div id=\"clip-container\"></div>' });\n          (l.props.host = c.rootElement), (l.Incident = i.constructor.Incident);\n        } else\n          'only' === i.audio && !0 !== i.props.root\n            ? (i.isTheRootClip = !1)\n            : ((i.isTheRootClip = !0),\n              (i.blockingWaitings = {}),\n              (l.Incident = i.constructor.Incident));\n        if (\n          ('on' === i.audio || 'off' === i.audio\n            ? (i.realClip = Vt(l))\n            : (i.realClip = new Wr()),\n          'on' === i.audio || 'only' === i.audio)\n        ) {\n          var h = {\n            id: i.id,\n            attrs: {},\n            props: {\n              audioSources: Object.prototype.hasOwnProperty.call(\n                s,\n                'audioSources',\n              )\n                ? s.audioSources\n                : i.audioSources,\n              runTimeInfo: i.runTimeInfo,\n              subscribe: i.subscribe.bind(v(i)),\n            },\n            plugin_npm_name: i.constructor.plugin_npm_name,\n            Channel: i.constructor.Channel,\n            Incident: Ir,\n            DescriptiveIncident: v(i),\n          };\n          i.audioClip = Vt(h);\n        } else (i.audio = 'off'), (i.audioClip = new Wr());\n        return (\n          (i.passiveAddition = !0), i._buildTree(), (i.passiveAddition = !1), i\n        );\n      }\n      return (\n        l(n, [\n          {\n            key: '_validateProps',\n            value: function () {\n              return ot.validateProps(\n                { props: this.props },\n                Qi,\n                this.constructor,\n                this.id,\n              );\n            },\n          },\n          {\n            key: 'selectorToPassToChildren',\n            get: function () {\n              return null;\n            },\n          },\n          {\n            key: 'inheritedSelector',\n            get: function () {\n              return this._inheritedSelector;\n            },\n            set: function (t) {\n              this._inheritedSelector = t;\n            },\n          },\n          {\n            key: 'html',\n            get: function () {\n              return '';\n            },\n          },\n          {\n            key: 'css',\n            get: function () {\n              return '';\n            },\n          },\n          {\n            key: 'fonts',\n            get: function () {\n              return [];\n            },\n          },\n          {\n            key: 'audioSources',\n            get: function () {\n              return [];\n            },\n          },\n          {\n            key: 'exportLiveDefinition',\n            value: function () {\n              var t =\n                  !(arguments.length > 0 && void 0 !== arguments[0]) ||\n                  arguments[0],\n                e = k(f(n.prototype), 'exportLiveDefinition', this).call(\n                  this,\n                  t,\n                );\n              return (\n                this.constructor.isAnimation &&\n                  (e.props.duration = this.duration),\n                U(this.props.html) && (e.props.html = this.props.html),\n                U(this.props.css) && (e.props.css = this.props.css),\n                e\n              );\n            },\n          },\n          {\n            key: '_buildTree',\n            value: function () {\n              if (void 0 !== this.realClip) {\n                var t = this.props.duration;\n                this.buildTree(),\n                  t &&\n                    this.constructor.isAnimation &&\n                    this.duration !== t &&\n                    this.resize(t);\n              }\n            },\n          },\n          {\n            key: 'resize',\n            value: function (t) {\n              return (\n                this.realClip._resize(t / this.duration),\n                this.audioClip._resize(t / this.duration),\n                (this.duration = t),\n                this.putMessageOnPipe('recalcDuration', {}, 'Groups', {\n                  selfExecute: !1,\n                  direction: ht,\n                }),\n                this.putMessageOnPipe('flash', {}, 'RootClip', {\n                  selfExecute: !0,\n                  direction: ht,\n                }),\n                { result: !0 }\n              );\n            },\n          },\n          {\n            key: 'manageEditAttrProps',\n            value: function (t, e) {\n              return {\n                result: !1,\n                errors: ['Clips attributes and properties can not be edited'],\n              };\n            },\n          },\n          {\n            key: 'handleCheckForClip',\n            value: function (t, e) {\n              return !0;\n            },\n          },\n          {\n            key: 'handleGetElements',\n            value: function (t, e) {\n              return this.realClip.getElements(e.selector);\n            },\n          },\n          {\n            key: 'handleCheckAddition',\n            value: function (t, e) {\n              var n = this.realClip.addIncident(e),\n                i = this.audioClip.addIncident(e);\n              return !0 === n.result && !0 === i.result\n                ? (n.execute(),\n                  i.execute(),\n                  this.putMessageOnPipe('flash', {}, 'RootClip', {\n                    selfExecute: !0,\n                    direction: ht,\n                  }),\n                  { result: !0 })\n                : n;\n            },\n          },\n          {\n            key: 'handleCheckMove',\n            value: function (t, e) {\n              var n = this.realClip.moveIncident(e),\n                i = this.audioClip.moveIncident(e);\n              return !0 === n.result && !0 === i.result\n                ? (n.execute(),\n                  i.execute(),\n                  this.putMessageOnPipe('flash', {}, 'RootClip', {\n                    selfExecute: !0,\n                    direction: ht,\n                  }),\n                  { result: !0 })\n                : n;\n            },\n          },\n          {\n            key: 'handleCheckDeletion',\n            value: function (t, e) {\n              var n = this.realClip.removeIncident(e),\n                i = this.audioClip.removeIncident(e);\n              return !0 === n.result && !0 === i.result\n                ? (n.execute(),\n                  i.execute(),\n                  this.putMessageOnPipe('flash', {}, 'RootClip', {\n                    selfExecute: !0,\n                    direction: ht,\n                  }),\n                  { result: !0 })\n                : n;\n            },\n          },\n          {\n            key: 'handleCheckResize',\n            value: function (t, e) {\n              var n = this.realClip.resizeIncident(e),\n                i = this.audioClip.resizeIncident(e);\n              return !0 === n.result && !0 === i.result\n                ? (n.execute(),\n                  i.execute(),\n                  this.putMessageOnPipe('flash', {}, 'RootClip', {\n                    selfExecute: !0,\n                    direction: ht,\n                  }),\n                  { result: !0 })\n                : n;\n            },\n          },\n          {\n            key: 'handleFlash',\n            value: function (t, e) {\n              if (!this.isTheRootClip) return this.bypass();\n              this.flash();\n            },\n          },\n          {\n            key: 'exportDefinition',\n            value: function () {\n              var t = k(f(n.prototype), 'exportDefinition', this).call(this);\n              return (\n                this.constructor.isAnimation &&\n                  (t.props.duration = this.duration),\n                t\n              );\n            },\n          },\n          {\n            key: 'handleSetBlock',\n            value: function (t, e) {\n              if (!this.isTheRootClip) return this.bypass();\n              'transitional' !== this.runTimeInfo.state &&\n                ('blocked' !== this.runTimeInfo.state &&\n                  (this.statusBeforeBlock = this.runTimeInfo.state),\n                (this.blockingWaitings[e.id] = e),\n                this.block());\n            },\n          },\n          {\n            key: 'handleUnBlock',\n            value: function (t, e) {\n              if (!this.isTheRootClip) return this.bypass();\n              Object.prototype.hasOwnProperty.call(\n                this.blockingWaitings,\n                e.id,\n              ) &&\n                (delete this.blockingWaitings[e.id],\n                0 === Object.keys(this.blockingWaitings).length &&\n                  ('playing' === this.statusBeforeBlock\n                    ? ((this.previousTimeStamp = -1), this.play())\n                    : this.arm()));\n            },\n          },\n          {\n            key: 'stop',\n            value: function () {\n              k(f(n.prototype), 'stop', this).call(this),\n                (this.blockingWaitings = {});\n            },\n          },\n          {\n            key: 'onProgress',\n            value: function (t, e) {\n              this.realClip.onProgress(t, e), this.audioClip.onProgress(t, e);\n            },\n          },\n          {\n            key: 'paste',\n            value: function (t) {\n              return this.isTheRootClip\n                ? new Hr({ host: t, descriptiveIncident: this })\n                : null;\n            },\n          },\n          {\n            key: 'flash',\n            value: function () {\n              this.realClip.flash();\n            },\n          },\n          {\n            key: 'setVolume',\n            value: function (t) {\n              return t < 0 || t > 1\n                ? { result: !1, errors: [{ type: 'invalid volume number' }] }\n                : 'off' === this.audio\n                ? {\n                    result: !1,\n                    errors: [\n                      { type: 'can not set volume of Clip with audio off' },\n                    ],\n                  }\n                : (this.audioClip.setVolume(t), { result: !0 });\n            },\n          },\n        ]),\n        n\n      );\n    })(\n      (function (t) {\n        d(n, t);\n        var e = g(n);\n        function n(t, i) {\n          var r;\n          return (\n            o(this, n),\n            ((r = e.call(this, t, i)).runTimeInfo = {\n              currentMillisecond: 0,\n              state: 'idle',\n            }),\n            (r.listeners = {}),\n            (r.previousTimeStamp = -1),\n            (r.speed = 1),\n            r\n          );\n        }\n        return (\n          l(n, [\n            {\n              key: '_setState',\n              value: function (t) {\n                if (t !== this.runTimeInfo.state)\n                  for (var e in ((this.runTimeInfo.state = t),\n                  this.putMessageOnPipe('setState', t, 'Clips', {\n                    selfExecute: !1,\n                    direction: pt,\n                  }),\n                  this.listeners)) {\n                    this.listeners[e].funct(\n                      this.runTimeInfo.currentMillisecond,\n                      t,\n                    );\n                  }\n              },\n            },\n            {\n              key: 'handleSetState',\n              value: function (t, e) {\n                this._setState(e);\n              },\n            },\n            {\n              key: 'play',\n              value: function () {\n                var t = this,\n                  e =\n                    arguments.length > 0 &&\n                    void 0 !== arguments[0] &&\n                    arguments[0];\n                if (\n                  'idle' === this.runTimeInfo.state ||\n                  'paused' === this.runTimeInfo.state ||\n                  'armed' === this.runTimeInfo.state ||\n                  'transitional' === this.runTimeInfo.state ||\n                  'blocked' === this.runTimeInfo.state\n                ) {\n                  if ('paused' === this.runTimeInfo.state) {\n                    var n = new Date().getTime() - this.pauseMoment;\n                    this.previousTimeStamp += n;\n                  }\n                  this._setState('playing'),\n                    this.onPlay(),\n                    e ||\n                      window.requestAnimationFrame(function (e) {\n                        t.step(e);\n                      });\n                }\n              },\n            },\n            {\n              key: 'pause',\n              value: function () {\n                'playing' === this.runTimeInfo.state &&\n                  (this._setState('paused'),\n                  (this.pauseMoment = new Date().getTime()),\n                  this.onWait());\n              },\n            },\n            {\n              key: 'arm',\n              value: function () {\n                ('transitional' !== this.runTimeInfo.state &&\n                  'blocked' !== this.runTimeInfo.state) ||\n                  this._setState('armed');\n              },\n            },\n            {\n              key: 'complete',\n              value: function () {\n                this._setState('idle'), (this.previousTimeStamp = -1);\n              },\n            },\n            {\n              key: 'stop',\n              value: function () {\n                this._setState('transitional'), (this.previousTimeStamp = -1);\n              },\n            },\n            {\n              key: 'block',\n              value: function () {\n                this._setState('blocked'), (this.previousTimeStamp = -1);\n              },\n            },\n            { key: 'onPlay', value: function () {} },\n            { key: 'onWait', value: function () {} },\n            {\n              key: 'playableProgress',\n              value: function (t, e) {\n                if (this.isTheRootClip) {\n                  for (var n in this.listeners) {\n                    var i = this.listeners[n];\n                    !0 !== i.onlyOnStateChange &&\n                      (Math.abs(\n                        e + i.cavaDelta - this.runTimeInfo.currentMillisecond,\n                      ) > i.threshold\n                        ? (i.funct(et(e, i.roundTo), this.runTimeInfo.state),\n                          (i.cavaDelta = 0))\n                        : (i.cavaDelta += Math.abs(\n                            e - this.runTimeInfo.currentMillisecond,\n                          )));\n                  }\n                  return (\n                    this.onProgress(t, e),\n                    (this.runTimeInfo.currentMillisecond = e),\n                    !0\n                  );\n                }\n                return !1;\n              },\n            },\n            {\n              key: 'executionSpeed',\n              set: function (t) {\n                if (!this.isTheRootClip) return !1;\n                this.speed = parseFloat(t);\n              },\n            },\n            {\n              key: 'step',\n              value: function (t) {\n                var e =\n                  arguments.length > 1 &&\n                  void 0 !== arguments[1] &&\n                  arguments[1];\n                if ('playing' === this.runTimeInfo.state) {\n                  var n = this;\n                  -1 === this.previousTimeStamp && (this.previousTimeStamp = t);\n                  var i = {\n                    milliseconds: Math.round(\n                      this.runTimeInfo.currentMillisecond +\n                        (t - this.previousTimeStamp) * this.speed,\n                    ),\n                    fraction:\n                      (this.runTimeInfo.currentMillisecond +\n                        (t - this.previousTimeStamp) * this.speed) /\n                      this.duration,\n                  };\n                  if (i.fraction >= 1)\n                    return (\n                      this.playableProgress(1, this.duration),\n                      void this.complete()\n                    );\n                  if (i.fraction < 0)\n                    return this.playableProgress(0, 0), void this.complete();\n                  this.playableProgress(i.fraction, i.milliseconds),\n                    (this.previousTimeStamp = t),\n                    e || window.requestAnimationFrame(n.step.bind(n));\n                }\n              },\n            },\n            {\n              key: 'subscribe',\n              value: function (t, e, n, i) {\n                var r =\n                  arguments.length > 4 &&\n                  void 0 !== arguments[4] &&\n                  arguments[4];\n                n || (n = 0),\n                  i || (i = 1),\n                  (this.listeners[t] = {\n                    funct: e,\n                    threshold: n,\n                    roundTo: i,\n                    cavaDelta: 0,\n                    onlyOnStateChange: r,\n                  });\n              },\n            },\n            {\n              key: 'unsubscribe',\n              value: function (t) {\n                Object.prototype.hasOwnProperty.call(this.listeners, t) &&\n                  delete this.listeners[t];\n              },\n            },\n            {\n              key: 'subscribeToDurationChange',\n              value: function (t) {\n                return (\n                  !!this.isTheRootClip &&\n                  (this.realClip.subscribeToDurationChange(t), !0)\n                );\n              },\n            },\n          ]),\n          n\n        );\n      })(dr),\n    );\n  c(Ur, 'isClip', !0),\n    c(Ur, 'Incident', qr),\n    c(Ur, 'plugin_npm_name', '@kissmybutton/self-contained-incidents'),\n    c(Ur, 'version', Jt),\n    c(Ur, 'Channel', wt),\n    c(Ur, 'ClassName', 'HTMLClip'),\n    c(Ur, 'propsValidationRules', Qi);\n  var Qr = Vi.compile({\n      incidents: {\n        type: 'array',\n        items: {\n          type: 'object',\n          props: {\n            position: { type: 'amount', integer: !0, min: 0, optional: !1 },\n            attrs: { type: 'object', optional: !1 },\n            props: { type: 'object', optional: !1 },\n            incidentClass: { type: 'any', optional: !1 },\n          },\n        },\n      },\n    }),\n    Xr = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t, i) {\n        var r;\n        o(this, n),\n          null !== (r = e.call(this, t, i)).incidents &&\n            ((r.attrs.incidents = r.incidents),\n            (r.attributesStaggers = []),\n            (r.propsStaggers = []),\n            r.setupDynamicValues());\n        var s = ot.validateProps(r.props, Zi, r.constructor);\n        if (!s.result) return y(r, s);\n        var a = Qr(r.attrs);\n        if (a.length > 0)\n          return (\n            ot.error('The provided attributes for Combo Incident are invalid'),\n            y(r, { result: !1, errors: a })\n          );\n        for (var u = [], l = 0; l < r.attrs.length; l++) {\n          var c = r.attrs[l];\n          if (null !== c.incidentClass.attrsValidationRules) {\n            var h = c.incidentClass.attrsValidationMethod(c.attrs);\n            h.length > 0 && u.concat(h.errors);\n          }\n          var p = ot.validateProps(\n            c.props,\n            c.incidentClass.propsValidationRules,\n            c.incidentClass,\n          );\n          !1 === p.result && u.concat(p.errors);\n        }\n        return u.length > 0\n          ? y(r, { result: !1, errors: u })\n          : ((r.dynamicDurationValue = null), r);\n      }\n      return (\n        l(n, [\n          {\n            key: 'incidents',\n            get: function () {\n              return null;\n            },\n          },\n          {\n            key: 'duration',\n            get: function () {\n              return null !== this.dynamicDurationValue\n                ? this.dynamicDurationValue\n                : 'dynamic';\n            },\n          },\n          {\n            key: 'addIncident',\n            value: function () {\n              var t =\n                \"Combos don't accept any Incidents to be added on their timeline externally\";\n              return ot.error(t), { result: !1, errors: [t] };\n            },\n          },\n          {\n            key: 'moveIncident',\n            value: function () {\n              var t =\n                \"Combo Incidents don't allow external manipulation of their Incidents\";\n              return ot.error(t), { result: !1, errors: [t] };\n            },\n          },\n          {\n            key: 'removeIncident',\n            value: function () {\n              var t =\n                \"Combo Incidents don't allow external manipulation of their Incidents\";\n              return ot.error(t), { result: !1, errors: [t] };\n            },\n          },\n          {\n            key: 'handleCheckAddition',\n            value: function (t, e) {\n              return !1;\n            },\n          },\n          {\n            key: 'handleCheckMove',\n            value: function (t, e) {\n              return !1;\n            },\n          },\n          {\n            key: 'handleCheckDeletion',\n            value: function (t, e) {\n              return !1;\n            },\n          },\n          {\n            key: 'handleCheckResize',\n            value: function (t, e) {\n              return !1;\n            },\n          },\n          {\n            key: 'exportDefinition',\n            value: function () {\n              var t = p(\n                p({}, this.attrs),\n                {},\n                {\n                  incidents: (function t(e) {\n                    for (var n = [], i = 0; i < e.length; i++) {\n                      var r = e[i],\n                        s = r.attrs;\n                      'Combo' === r.incidentClass.ClassName &&\n                        (s = p(p({}, s), {}, { incidents: t(s.incidents) })),\n                        n.push({\n                          ClassName:\n                            r.incidentClass.ClassName ||\n                            r.incidentClass.targetClass.ClassName,\n                          plugin_npm_name:\n                            r.incidentClass.plugin_npm_name ||\n                            r.incidentClass.targetClass.plugin_npm_name,\n                          version:\n                            r.incidentClass.version ||\n                            r.incidentClass.targetClass.version,\n                          attrs: s,\n                          props: JSON.parse(JSON.stringify(r.props)),\n                          position: r.position,\n                        });\n                    }\n                    return n;\n                  })(this.attrs.incidents),\n                },\n              );\n              return {\n                ClassName: this.constructor.ClassName,\n                version: this.constructor.version,\n                plugin:\n                  this.constructor.plugin || this.constructor.plugin_npm_name,\n                plugin_npm_name: this.constructor.plugin_npm_name,\n                attrs: t,\n                props: JSON.parse(JSON.stringify(this.props)),\n                incidents: {},\n                duration: this.duration,\n              };\n            },\n          },\n          {\n            key: 'exportLiveDefinition',\n            value: function () {\n              var t =\n                  !(arguments.length > 0 && void 0 !== arguments[0]) ||\n                  arguments[0],\n                e = this.attrs;\n              null !== this.incidents &&\n                (e = p(p({}, this.attrs), {}, { incidents: void 0 }));\n              var n = JSON.parse(JSON.stringify(this.props));\n              !1 === t && delete n.id;\n              var i = {\n                Class: this.constructor,\n                attrs: e,\n                props: n,\n                incidents: {},\n              };\n              return i;\n            },\n          },\n        ]),\n        n\n      );\n    })(dr);\n  c(Xr, 'isCombo', !0),\n    c(Xr, 'ClassName', 'Combo'),\n    c(Xr, 'attrsValidationRules', null),\n    c(Xr, 'propsValidationRules', Zi);\n  var Zr = D(\n      null,\n      function (t, e) {\n        var n = (function (e) {\n          d(i, e);\n          var n = g(i);\n          function i(e, r) {\n            var s;\n            o(this, i),\n              void 0 === r && ((r = e), (e = {})),\n              (s = n.call(this, r)),\n              t(v(s));\n            var a = ot.validateProps(r, Wi, s.constructor, s.id);\n            return a.result\n              ? ((s.inheritedSelector = null),\n                (s.attrs = e),\n                Object.prototype.hasOwnProperty.call(r, 'duration') ||\n                  (r.duration = 0),\n                (s.props = r),\n                (s.attributesStaggers = []),\n                (s.propsStaggers = []),\n                s.setupDynamicValues(),\n                (s.dynamicDurationValue = null),\n                (s.passive = !1),\n                s)\n              : y(s, a);\n          }\n          return i;\n        })(e);\n        return {\n          F: n,\n          d: [\n            {\n              kind: 'field',\n              static: !0,\n              key: 'Incident',\n              value: function () {\n                return St;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'plugin_npm_name',\n              value: function () {\n                return 'motor-cortex-js-attribute';\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'version',\n              value: function () {\n                return Jt;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'Channel',\n              value: function () {\n                return Nr;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'ClassName',\n              value: function () {\n                return 'Incident';\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'attrsValidationRules',\n              value: function () {\n                return null;\n              },\n            },\n            {\n              kind: 'field',\n              static: !0,\n              key: 'propsValidationRules',\n              value: function () {\n                return Wi;\n              },\n            },\n            {\n              kind: 'method',\n              decorators: [nr],\n              key: 'editAttributes',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [ir],\n              key: 'editProperties',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [sr],\n              key: 'resize',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [tr],\n              key: 'clone',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [ar],\n              key: 'selector',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [rr],\n              key: 'getElements',\n              value: function () {},\n            },\n            {\n              kind: 'method',\n              decorators: [pr],\n              key: 'setupDynamicValues',\n              value: function () {},\n            },\n            {\n              kind: 'get',\n              key: 'duration',\n              value: function () {\n                return null !== this.dynamicDurationValue\n                  ? this.dynamicDurationValue\n                  : this.propsStaggers.length > 0\n                  ? 'dynamic'\n                  : k(f(n.prototype), 'duration', this);\n              },\n            },\n            {\n              kind: 'set',\n              key: 'duration',\n              value: function (t) {\n                if (this.propsStaggers.length > 0) {\n                  for (var e = 0; e < this.propsStaggers.length; e++)\n                    if ('repeats' !== this.propsStaggers[e].path) {\n                      var i = this.propsStaggers[e].stagger.resize(\n                        t / this.duration,\n                      );\n                      at(this.props, this.propsStaggers[e].path, i);\n                    }\n                  this.dynamicDurationValue = t;\n                } else w(f(n.prototype), 'duration', t, this, !0);\n              },\n            },\n            {\n              kind: 'method',\n              key: 'manageEditAttrProps',\n              value: function (t, e) {\n                var n = this.parentNode,\n                  i = n.getLeafPosition(this.id);\n                n.removeIncident(this.id);\n                var r = JSON.parse(JSON.stringify(this[e]));\n                this[e] = t;\n                var s = n.addIncident(this, i);\n                return (\n                  s.result ||\n                    (n.removeIncident(this.id),\n                    (this[e] = r),\n                    n.addIncident(this, i)),\n                  s\n                );\n              },\n            },\n            {\n              kind: 'method',\n              key: 'detachFromParent',\n              value: function () {\n                k(f(n.prototype), 'detachFromParent', this).call(this),\n                  (this.inheritedSelector = null);\n              },\n            },\n            {\n              kind: 'method',\n              key: 'handleCheckForInvalidSelectors',\n              value: function () {\n                var t = this.selector();\n                return null === t\n                  ? {\n                      id: this.id,\n                      ClassName: this.constructor.ClassName,\n                      plugin_npm_name: this.constructor.plugin_npm_name,\n                      error: 'null selector',\n                    }\n                  : '&' === t.charAt(0)\n                  ? {\n                      id: this.id,\n                      ClassName: this.constructor.ClassName,\n                      plugin_npm_name: this.constructor.plugin_npm_name,\n                      error: 'relative selector with no inherited selector',\n                      selector: t,\n                    }\n                  : this.bypass();\n              },\n            },\n            {\n              kind: 'method',\n              key: 'exportDefinition',\n              value: function () {\n                return {\n                  ClassName: this.constructor.ClassName,\n                  version: this.constructor.version,\n                  plugin:\n                    this.constructor.plugin || this.constructor.plugin_npm_name,\n                  plugin_npm_name: this.constructor.plugin_npm_name,\n                  attrs: this.attrs,\n                  props: this.props,\n                };\n              },\n            },\n            {\n              kind: 'method',\n              key: 'exportLiveDefinition',\n              value: function () {\n                var t =\n                    !(arguments.length > 0 && void 0 !== arguments[0]) ||\n                    arguments[0],\n                  e = JSON.parse(JSON.stringify(this.props));\n                return (\n                  !1 === t && delete e.id,\n                  {\n                    Class: this.constructor,\n                    attrs: JSON.parse(JSON.stringify(this.attrs)),\n                    props: e,\n                  }\n                );\n              },\n            },\n          ],\n        };\n      },\n      ft,\n    ),\n    Yr = (function () {\n      var t = function (t, e) {\n          return t.startsWith('on') && 'function' == typeof e;\n        },\n        e = function (t) {\n          return t.substr(2).toLowerCase();\n        },\n        n = function (t) {\n          return 'function' == typeof t;\n        };\n      function i(t) {\n        var e = document.createElement('div');\n        return (e.innerHTML = t.trim()), e.firstChild;\n      }\n      function r(n, i) {\n        if (!i) return n;\n        for (var r = 0, s = Object.entries(i); r < s.length; r++) {\n          var a = C(s[r], 2),\n            o = a[0],\n            u = a[1];\n          if (t(o)) n.addEventListener(e(o), u);\n          else if ('class' === o) {\n            var l,\n              c = Array.isArray(u) ? u : u.split(' ');\n            (l = n.classList).add.apply(l, O(c));\n          } else n.setAttribute(o, u);\n        }\n        return n;\n      }\n      return function (t, e) {\n        for (\n          var s = arguments.length, o = new Array(s > 2 ? s - 2 : 0), u = 2;\n          u < s;\n          u++\n        )\n          o[u - 2] = arguments[u];\n        if (n(t)) return t(p(p({}, e), {}, { children: o }));\n        var l = r(document.createElement(t), e);\n        return (\n          o.flat().forEach(function (t) {\n            if (!1 !== t) {\n              var e = 'object' === a(t) ? t : i(t.toString());\n              null !== e && l.appendChild(e);\n            }\n          }),\n          l.outerHTML\n        );\n      };\n    })(),\n    ts = (function () {\n      function t(e) {\n        if ((o(this, t), !Object.prototype.hasOwnProperty.call(e, 'incident')))\n          return (\n            ot.error(\n              'Journey constructor expects an Incident on its properties on the key \"incident\"',\n            ),\n            !1\n          );\n        (this.memory = e.capsuleMemory),\n          (this.stations = []),\n          (this.incident = e.incident),\n          (this.startMillisecond =\n            1 * this.incident.runTimeInfo.currentMillisecond),\n          (this.startState = ''.concat(this.incident.runTimeInfo.state)),\n          this.incident.stop();\n      }\n      return (\n        l(t, [\n          {\n            key: 'station',\n            value: function (t) {\n              this.stations.length > 0 &&\n                this.stations[this.stations.length - 1],\n                this.stations.push(t),\n                this.incident.playableProgress(t / this.incident.duration, t);\n            },\n          },\n          {\n            key: 'destination',\n            value: function () {\n              var t =\n                arguments.length > 0 && void 0 !== arguments[0]\n                  ? arguments[0]\n                  : null;\n              null != t\n                ? this.station(t)\n                : (t = this.stations[this.stations.length - 1]),\n                this.incident.playableProgress(t / this.incident.duration, t),\n                'playing' === this.startState ||\n                ('blocked' === this.startState &&\n                  'playing' === this.incident.statusBeforeBlock)\n                  ? this.incident.play()\n                  : t >= this.incident.duration\n                  ? this.incident.complete()\n                  : this.incident.arm(),\n                this.memory.push(this.exportJourneyLog);\n            },\n          },\n          {\n            key: 'exportJourneyLog',\n            value: function () {\n              return {\n                startMillisecond: this.startMillisecond,\n                startState: this.startState,\n                stations: this.stations,\n              };\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    es = (function () {\n      function t() {\n        o(this, t), (this.memory = []);\n      }\n      return (\n        l(t, [\n          {\n            key: 'startJourney',\n            value: function (t) {\n              return t\n                ? new ts({ incident: t, capsuleMemory: this.memory })\n                : (ot.error('startJourney expects an Incident as an argument'),\n                  !1);\n            },\n          },\n        ]),\n        t\n      );\n    })(),\n    ns = (function (t) {\n      d(n, t);\n      var e = g(n);\n      function n(t) {\n        var i =\n          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n        o(this, n);\n        var r = { audio: 'only', audioSources: t };\n        return null !== i && (r.id = i), e.call(this, r);\n      }\n      return n;\n    })(Ur);\n  function is(t) {\n    if (\n      (Object.prototype.hasOwnProperty.call(t, 'default') && (t = t.default),\n      Object.prototype.hasOwnProperty.call(t, 'npm_name') ||\n        (t.npm_name = 'plugin_'.concat(new Date().getTime())),\n      !(function (t) {\n        Object.prototype.hasOwnProperty.call(t, 'default') && (t = t.default);\n        var e = t.npm_name,\n          n = !0;\n        if (\n          (Object.prototype.hasOwnProperty.call(t, 'name') ||\n            ot.notice(\n              'Notice on plugin '.concat(\n                e,\n                '. A plugin is always good to have its name on\\n        its main.js file, under the key \"name\". It\\'s missing from this plugin',\n              ),\n            ),\n          Object.prototype.hasOwnProperty.call(t, 'incidents') ||\n            Object.prototype.hasOwnProperty.call(t, 'Clip') ||\n            (ot.error(\n              'Error on plugin '.concat(\n                e,\n                '. A plugin must expose at least one Incident or a Clip.\\n        Exposed plugin Incidents should be defined on the \"incidents\" key of the main.js file while Clips on the \"Clip\".',\n              ),\n            ),\n            (n = !1)),\n          Object.prototype.hasOwnProperty.call(t, 'incidents') &&\n            !Array.isArray(t.incidents))\n        )\n          ot.error(\n            'Error on plugin '.concat(\n              e,\n              '. thePlugin exposed Incidents are defined on the \"incidents\" key of the main.js file in array format.\\n        Please refer to the documentation',\n            ),\n          ),\n            (n = !1);\n        else if (Object.prototype.hasOwnProperty.call(t, 'incidents'))\n          for (var i = 0; i < t.incidents.length; i++) {\n            var r = t.incidents[i];\n            'object' === a(r.exportable) &&\n              Object.prototype.hasOwnProperty.call(r.exportable, 'default') &&\n              (r.exportable = r.exportable.default);\n            var s = r.exportable.prototype;\n            s instanceof dr ||\n              s instanceof Ur ||\n              s instanceof St ||\n              s instanceof _r ||\n              (ot.error(\n                'Error on plugin '\n                  .concat(\n                    e,\n                    '. Exportable Incidents by any plugin must extend one of the base classes provided by MotorCortex.\\n                ',\n                  )\n                  .concat(\n                    r.exportable.constructor.name,\n                    \" doesn't.\\n                Please refer to documentation\",\n                  ),\n              ),\n              (n = !1)),\n              s instanceof Ur &&\n                (Object.prototype.hasOwnProperty.call(r, 'originalDims')\n                  ? !1 === Z(r.originalDims).result &&\n                    (ot.error(\n                      'Error on plugin '\n                        .concat(e, '. Invalid originalDims value passed on ')\n                        .concat(r.name),\n                    ),\n                    (n = !1))\n                  : ot.log(\n                      'Warning on plugin '.concat(\n                        e,\n                        '. It\\'s always good to provide originalDims\\n            when exposing Incidents extending DOMClip. By defining their original dims the users\\n            of your plugin will be able to define the desired dimensions of your Incident by\\n            the \"containerParams object\"',\n                      ),\n                    )),\n              Object.prototype.hasOwnProperty.call(r, 'name') ||\n                (ot.error(\n                  'Error on plugin '.concat(\n                    e,\n                    '. Exportable Incidents by any plugin must have the \"name\" key which defines the name of the exported Incident.\\n                Please refer to documentation',\n                  ),\n                ),\n                (n = !1));\n          }\n        return n;\n      })(t))\n    )\n      return !1;\n    var e = {};\n    if (Object.prototype.hasOwnProperty.call(t, 'Clip'))\n      if (Object.prototype.hasOwnProperty.call(t.Clip, 'exportable')) {\n        var n,\n          i,\n          r,\n          s =\n            ((i = n = (function (t) {\n              d(n, t);\n              var e = g(n);\n              function n() {\n                return o(this, n), e.apply(this, arguments);\n              }\n              return n;\n            })(Ur)),\n            c(n, 'Incident', t.Clip.exportable),\n            c(n, 'plugin', t.npm_name),\n            c(n, 'version', t.version || '*'),\n            c(n, 'audio', t.audio || 'off'),\n            c(n, 'customClip', !0),\n            i);\n        Object.prototype.hasOwnProperty.call(\n          t.Clip,\n          'attributesValidationRules',\n        ) && (r = Vi.compile(t.Clip.attributesValidationRules));\n        e.Clip = function e(n, i) {\n          o(this, e);\n          var a,\n            u = n,\n            l = i;\n          if (\n            (void 0 === i && ((u = {}), (l = n)),\n            Object.prototype.hasOwnProperty.call(\n              t.Clip,\n              'attributesValidationRules',\n            ))\n          ) {\n            var c = r(u);\n            if (c.length > 0) {\n              for (\n                var h = 'Error on plugin\\'s \"'.concat(\n                    t.npm_name,\n                    '\" Clip instantiation. Errors:',\n                  ),\n                  p = 0;\n                p < c.length;\n                p++\n              )\n                h += '\\n - '\n                  .concat(c[p].message, '. ')\n                  .concat(c[p].actual, ' provided');\n              return ot.error(h), ot.log('breaking'), { result: !1, errors: c };\n            }\n            ot.log('instantiating'),\n              ((a = new s(u, l)).attrsValidationRules =\n                t.Clip.attributesValidationRules),\n              (a.attrsValidationMethod = r);\n          } else\n            ot.log('instantiating'),\n              ((a = new s(u, l)).attrsValidationRules = null),\n              ot.warning(\n                \"It's always good to provide attributesValidationRules to the exported incidents. \"\n                  .concat(t.npm_name, '.')\n                  .concat(a.constructor.name, \" doesn't provide it\"),\n              );\n          return a;\n        };\n      } else {\n        var u,\n          l,\n          h =\n            ((l = u = (function (t) {\n              d(n, t);\n              var e = g(n);\n              function n() {\n                return o(this, n), e.apply(this, arguments);\n              }\n              return n;\n            })(Ur)),\n            c(u, 'Incident', t.Clip),\n            c(u, 'plugin', t.npm_name),\n            c(u, 'version', t.version || '*'),\n            c(u, 'audio', t.audio || 'off'),\n            c(u, 'customClip', !0),\n            l);\n        ot.warning(\n          \"It's always good to provide attributesValidationRules to the exported incidents. \".concat(\n            t.npm_name,\n            \".Clip doesn't provide it\",\n          ),\n        ),\n          (e.Clip = h);\n      }\n    var p = Nr;\n    if (\n      (Object.prototype.hasOwnProperty.call(t, 'compositeAttributes') &&\n        (p = (function (e) {\n          d(i, e);\n          var n = g(i);\n          function i(e) {\n            return (\n              o(this, i),\n              (e.comboAttributes = t.compositeAttributes),\n              n.call(this, e)\n            );\n          }\n          return i;\n        })(Nr)),\n      Object.prototype.hasOwnProperty.call(t, 'incidents'))\n    )\n      for (\n        var f = function (n) {\n            var i = t.incidents[n].exportable,\n              r = null,\n              s = null,\n              a = !1;\n            if (\n              Object.prototype.hasOwnProperty.call(\n                t.incidents[n],\n                'attributesValidationRules',\n              )\n            ) {\n              a = !0;\n              var u = JSON.parse(\n                JSON.stringify(t.incidents[n].attributesValidationRules),\n              );\n              Object.prototype.hasOwnProperty.call(\n                t.incidents[n].attributesValidationRules,\n                'animatedAttrs',\n              ) &&\n                (u.initialValues = ot.buildInitialValuesValidationRules(\n                  u.animatedAttrs,\n                )),\n                (s = u),\n                (r = Vi.compile(u));\n            }\n            var l,\n              h,\n              f = void 0;\n            if (i.prototype instanceof St)\n              (h = l = (function (t) {\n                d(n, t);\n                var e = g(n);\n                function n() {\n                  return o(this, n), e.apply(this, arguments);\n                }\n                return n;\n              })(Zr)),\n                c(l, 'Incident', i),\n                c(l, 'plugin_npm_name', t.npm_name),\n                c(l, 'plugin', t.npm_name),\n                c(l, 'version', t.version || '*'),\n                c(l, 'ClassName', t.incidents[n].name),\n                c(l, 'Channel', p),\n                c(l, 'audio', t.audio ? t.audio : 'off'),\n                c(l, 'attrsValidationRules', s),\n                c(l, 'attrsValidationMethod', r),\n                (f = h);\n            else if (i.prototype instanceof _r) {\n              var m, v;\n              (v = m = (function (t) {\n                d(n, t);\n                var e = g(n);\n                function n() {\n                  return o(this, n), e.apply(this, arguments);\n                }\n                return n;\n              })(Zr)),\n                c(m, 'Incident', i),\n                c(m, 'plugin_npm_name', '@kissmybutton/media-playback'),\n                c(m, 'plugin', t.npm_name),\n                c(m, 'version', t.version || '*'),\n                c(m, 'ClassName', t.incidents[n].name),\n                c(m, 'Channel', Ar),\n                c(m, 'audio', t.audio ? t.audio : 'off'),\n                c(m, 'attrsValidationRules', s),\n                c(m, 'attrsValidationMethod', r),\n                (f = v);\n            } else if (i.prototype instanceof Ur) {\n              var y, b;\n              (b = y = (function (t) {\n                d(n, t);\n                var e = g(n);\n                function n() {\n                  return o(this, n), e.apply(this, arguments);\n                }\n                return n;\n              })(i)),\n                c(y, 'plugin', t.npm_name),\n                c(y, 'version', t.version || '*'),\n                c(y, 'ClassName', t.incidents[n].name),\n                c(y, 'audio', t.audio ? t.audio : 'on'),\n                c(y, 'originalDims', Z(t.incidents[n].originalDims).analysis),\n                c(y, 'attrsValidationRules', s),\n                c(y, 'attrsValidationMethod', r),\n                c(y, 'isAnimation', !0),\n                (f = b);\n            } else if (i.prototype instanceof dr) {\n              var k, x;\n              (x = k = (function (t) {\n                d(n, t);\n                var e = g(n);\n                function n() {\n                  return o(this, n), e.apply(this, arguments);\n                }\n                return n;\n              })(i)),\n                c(k, 'plugin', t.npm_name),\n                c(k, 'version', t.version || '*'),\n                c(k, 'ClassName', t.incidents[n].name),\n                c(k, 'attrsValidationRules', s),\n                c(k, 'attrsValidationMethod', r),\n                (f = x);\n            }\n            Object.defineProperty(e, t.incidents[n].name, {\n              enumerable: !0,\n              get: function () {\n                var e = function e(i, s) {\n                  var u;\n                  if ((o(this, e), a)) {\n                    var l = r(i);\n                    if (l.length > 0) {\n                      for (\n                        var c = 'Error on plugin\\'s \"'\n                            .concat(t.npm_name, '\" \"')\n                            .concat(\n                              t.incidents[n].name,\n                              '\" instantiation. Errors:',\n                            ),\n                          h = 0;\n                        h < l.length;\n                        h++\n                      )\n                        c += '\\n - '\n                          .concat(l[h].message, '. ')\n                          .concat(l[h].actual, ' provided');\n                      return ot.error(c), { result: !1, errors: l };\n                    }\n                  }\n                  return (\n                    (u = new f(i, s)).result &&\n                      !a &&\n                      ot.warning(\n                        \"It's always good to provide attributesValidationRules to the exported incidents. \".concat(\n                          t.npm_name,\n                          \" doesn't provide it\",\n                        ),\n                      ),\n                    u\n                  );\n                };\n                return c(e, 'targetClass', f), e;\n              },\n            });\n          },\n          m = 0;\n        m < t.incidents.length;\n        m++\n      )\n        f(m);\n    return e;\n  }\n  window.fs = {};\n  var rs = { createDOMElement: Yr, easings: Nt, clipFromDefinition: Yi },\n    ss = is(Tr),\n    as = ss.Clip,\n    os = ss.AudioEffect,\n    us = ss.AudioPlayback,\n    ls = ns,\n    cs = {\n      version: Jt,\n      Effect: St,\n      utils: rs,\n      HTMLClip: Ur,\n      Group: dr,\n      Combo: Xr,\n      BrowserClip: qr,\n      loadPlugin: is,\n      AudioClip: ls,\n      CoreAudioClip: as,\n      AudioPlayback: us,\n      AudioEffect: os,\n      MediaPlayback: _r,\n      TimeCapsule: es,\n    };\n  (t.AudioClip = ls),\n    (t.AudioEffect = os),\n    (t.AudioPlayback = us),\n    (t.BrowserClip = qr),\n    (t.Combo = Xr),\n    (t.CoreAudioClip = as),\n    (t.Effect = St),\n    (t.Group = dr),\n    (t.HTMLClip = Ur),\n    (t.MediaPlayback = _r),\n    (t.TimeCapsule = es),\n    (t.default = cs),\n    (t.loadPlugin = is),\n    (t.utils = rs),\n    Object.defineProperty(t, '__esModule', { value: !0 });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\n");

/***/ }),

/***/ "../node_modules/es6-promise/dist/es6-promise.js":
/*!*******************************************************!*\
  !*** ../node_modules/es6-promise/dist/es6-promise.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, global) {/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\tundefined;\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../node_modules/process/browser.js\"), __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/es6-promise/dist/es6-promise.js\n");

/***/ }),

/***/ "../node_modules/node-libs-browser/mock/empty.js":
/*!*******************************************************!*\
  !*** ../node_modules/node-libs-browser/mock/empty.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL25vZGUtbGlicy1icm93c2VyL21vY2svZW1wdHkuanMuanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/node-libs-browser/mock/empty.js\n");

/***/ }),

/***/ "../node_modules/path-browserify/index.js":
/*!************************************************!*\
  !*** ../node_modules/path-browserify/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"../node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/path-browserify/index.js\n");

/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/process/browser.js\n");

/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanM/YTQyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "../package.json":
/*!***********************!*\
  !*** ../package.json ***!
  \***********************/
/*! exports provided: name, version, description, main, module, browser, author, repository, license, engines, scripts, keywords, lint-staged, release, config, dependencies, peerDependencies, devDependencies, husky, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"name\\\":\\\"@kissmybutton/motorcortex-textfxs\\\",\\\"version\\\":\\\"0.1.5\\\",\\\"description\\\":\\\"textfxs plugin for MotorCortex\\\",\\\"main\\\":\\\"dist/motorcortex-textfxs.cjs.js\\\",\\\"module\\\":\\\"dist/motorcortex-textfxs.esm.js\\\",\\\"browser\\\":\\\"dist/motorcortex-textfxs.umd.js\\\",\\\"author\\\":\\\"KissMyButton PC (kissmybutton.gr) <opensource@kissmybutton.gr>\\\",\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/kissmybutton/motorcortex-textfxs.git\\\"},\\\"license\\\":\\\"MIT\\\",\\\"engines\\\":{\\\"node\\\":\\\">=8.3.2\\\"},\\\"scripts\\\":{\\\"update-force:packages\\\":\\\"./node_modules/npm-check-updates/bin/ncu -u && npm i\\\",\\\"update:packages\\\":\\\"npm update --save/--save-dev\\\",\\\"concurrently\\\":\\\"concurrently -c \\\\\\\"cyan.bold,magenta.bold\\\\\\\" --names \\\\\\\"JS,Styles\\\\\\\"\\\",\\\"lint:styles\\\":\\\"stylelint  \\\\\\\"src/**.css\\\\\\\" \\\\\\\"src/**/*.scss\\\\\\\" --config .stylelintrc.json\\\",\\\"lint:js\\\":\\\"eslint -c .eslintrc src/**/*.js\\\",\\\"lint\\\":\\\"npm run concurrently \\\\\\\"npm run lint:js\\\\\\\" \\\\\\\"npm run lint:styles\\\\\\\"\\\",\\\"lint:fix\\\":\\\"npm run concurrently  \\\\\\\"npm run lint:js -- --fix\\\\\\\" \\\\\\\"npm run lint:styles -- --fix\\\\\\\"\\\",\\\"build\\\":\\\"npm run build:lib && npm run build:demo\\\",\\\"build:lib\\\":\\\"rollup -c\\\",\\\"start\\\":\\\"npm run build:lib && concurrently -c \\\\\\\"cyan.bold,magenta.bold\\\\\\\" \\\\\\\"npm:build:lib -- -w\\\\\\\"  \\\\\\\"npm:start:demo\\\\\\\" \\\",\\\"start:demo\\\":\\\"webpack-dev-server --inline --hot --disableHostCheck --config ./demo/webpack.config.js\\\",\\\"build:demo\\\":\\\"webpack --config ./demo/webpack.config.js\\\",\\\"test\\\":\\\"HERE GOES YOUR TEST TASK\\\",\\\"test:prod\\\":\\\"npm run lint\\\",\\\"report-coverage\\\":\\\"cat ./coverage/lcov.info | coveralls\\\",\\\"commit\\\":\\\"git-cz\\\",\\\"prebuild\\\":\\\"rimraf dist\\\"},\\\"keywords\\\":[\\\"motorcortex\\\",\\\"animation\\\"],\\\"lint-staged\\\":{\\\"linters\\\":{\\\"*.json\\\":[\\\"prettier --write\\\",\\\"git add\\\"],\\\"*.{css,scss}\\\":[\\\"stylelint  \\\\\\\"src/**.css\\\\\\\" \\\\\\\"src/**/*.scss\\\\\\\" --config .stylelintrc.json --fix\\\",\\\"git add\\\"],\\\"*.{js,jsx}\\\":[\\\"eslint --fix\\\",\\\"git add\\\"]}},\\\"release\\\":{\\\"verifyConditions\\\":[\\\"@semantic-release/changelog\\\",\\\"@semantic-release/npm\\\",\\\"@semantic-release/github\\\",\\\"@semantic-release/git\\\"],\\\"prepare\\\":[\\\"@semantic-release/changelog\\\",\\\"@semantic-release/npm\\\",\\\"@semantic-release/git\\\"]},\\\"config\\\":{\\\"commitizen\\\":{\\\"path\\\":\\\"cz-conventional-changelog\\\"}},\\\"dependencies\\\":{\\\"@kissmybutton/motorcortex-anime\\\":\\\"^2.1.11\\\",\\\"browserslist\\\":\\\"^4.7.0\\\",\\\"caniuse-lite\\\":\\\"^1.0.30000997\\\",\\\"rollup\\\":\\\"^2.42.3\\\",\\\"rollup-plugin-babel\\\":\\\"^4.4.0\\\",\\\"rollup-plugin-commonjs\\\":\\\"^10.1.0\\\",\\\"rollup-plugin-node-resolve\\\":\\\"^5.2.0\\\",\\\"rollup-plugin-terser\\\":\\\"^7.0.2\\\"},\\\"peerDependencies\\\":{\\\"@kissmybutton/motorcortex\\\":\\\"^6.3.2\\\"},\\\"devDependencies\\\":{\\\"@babel/cli\\\":\\\"7.13.14\\\",\\\"@babel/core\\\":\\\"7.13.15\\\",\\\"@babel/preset-env\\\":\\\"7.13.15\\\",\\\"@commitlint/cli\\\":\\\"7.6.1\\\",\\\"@commitlint/config-conventional\\\":\\\"7.6.0\\\",\\\"@kissmybutton/motorcortex\\\":\\\"6.3.3\\\",\\\"@kissmybutton/motorcortex-anime\\\":\\\"2.1.12\\\",\\\"@kissmybutton/motorcortex-player\\\":\\\"1.9.0\\\",\\\"@rollup/plugin-json\\\":\\\"4.1.0\\\",\\\"@semantic-release/changelog\\\":\\\"3.0.6\\\",\\\"@semantic-release/git\\\":\\\"7.0.18\\\",\\\"@semantic-release/github\\\":\\\"5.5.8\\\",\\\"@semantic-release/npm\\\":\\\"5.3.5\\\",\\\"babel-eslint\\\":\\\"10.1.0\\\",\\\"babel-loader\\\":\\\"8.2.2\\\",\\\"babel-preset-es2015-node5\\\":\\\"1.2.0\\\",\\\"commitizen\\\":\\\"3.1.2\\\",\\\"concurrently\\\":\\\"4.1.2\\\",\\\"coveralls\\\":\\\"3.1.0\\\",\\\"css-loader\\\":\\\"2.1.1\\\",\\\"cz-conventional-changelog\\\":\\\"2.1.0\\\",\\\"es6-promise\\\":\\\"4.2.8\\\",\\\"eslint\\\":\\\"5.16.0\\\",\\\"eslint-config-prettier\\\":\\\"3.6.0\\\",\\\"eslint-config-standard\\\":\\\"12.0.0\\\",\\\"eslint-plugin-babel\\\":\\\"5.3.1\\\",\\\"eslint-plugin-import\\\":\\\"2.22.1\\\",\\\"eslint-plugin-node\\\":\\\"8.0.1\\\",\\\"eslint-plugin-prettier\\\":\\\"3.3.1\\\",\\\"eslint-plugin-promise\\\":\\\"4.3.1\\\",\\\"eslint-plugin-standard\\\":\\\"4.1.0\\\",\\\"exports-loader\\\":\\\"0.7.0\\\",\\\"husky\\\":\\\"1.3.1\\\",\\\"imports-loader\\\":\\\"0.8.0\\\",\\\"json-stringify-safe\\\":\\\"5.0.1\\\",\\\"lint-staged\\\":\\\"8.2.1\\\",\\\"npm-check-updates\\\":\\\"*\\\",\\\"npx\\\":\\\"*\\\",\\\"prettier\\\":\\\"1.19.1\\\",\\\"rimraf\\\":\\\"2.7.1\\\",\\\"sass-loader\\\":\\\"7.3.1\\\",\\\"semantic-release\\\":\\\"^15.13.2\\\",\\\"shelljs\\\":\\\"0.8.4\\\",\\\"stylelint\\\":\\\"9.10.1\\\",\\\"stylelint-config-prettier\\\":\\\"4.0.0\\\",\\\"stylelint-config-recommended\\\":\\\"2.2.0\\\",\\\"stylelint-config-recommended-scss\\\":\\\"3.3.0\\\",\\\"stylelint-config-sass-guidelines\\\":\\\"5.4.0\\\",\\\"stylelint-config-standard\\\":\\\"18.3.0\\\",\\\"stylelint-scss\\\":\\\"3.19.0\\\",\\\"webpack\\\":\\\"4.46.0\\\",\\\"webpack-cli\\\":\\\"3.3.12\\\",\\\"webpack-dev-server\\\":\\\"3.11.2\\\",\\\"whatwg-fetch\\\":\\\"3.6.2\\\"},\\\"husky\\\":{\\\"hooks\\\":{\\\"commit-msg\\\":\\\"commitlint -E HUSKY_GIT_PARAMS\\\",\\\"pre-commit\\\":\\\"lint-staged\\\",\\\"pre-push\\\":\\\"npm run test:prod\\\"}}}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vcGFja2FnZS5qc29uLmpzIiwic291cmNlcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../package.json\n");

/***/ }),

/***/ "../src/FontWeight.js":
/*!****************************!*\
  !*** ../src/FontWeight.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FontWeight; });\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kissmybutton/motorcortex-anime */ \"../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar Anime = _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.loadPlugin(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default.a);\n\nvar FontWeight = /*#__PURE__*/function (_MotorCortex$HTMLClip) {\n  _inherits(FontWeight, _MotorCortex$HTMLClip);\n\n  var _super = _createSuper(FontWeight);\n\n  function FontWeight() {\n    _classCallCheck(this, FontWeight);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FontWeight, [{\n    key: \"fonts\",\n    get: function get() {\n      var wordlist = this.attrs.fontFamily.split(\" \").join(\"+\");\n      wordlist += \":wght@\".concat(this.attrs.fontWeightList.join(\";\"));\n      var font = [{\n        type: \"google-font\",\n        src: \"https://fonts.googleapis.com/css2?family=\".concat(wordlist, \"&display=swap\")\n      }];\n      return font;\n    }\n  }, {\n    key: \"html\",\n    get: function get() {\n      var textList = [];\n\n      for (var i = 1; i <= this.attrs.repeats; i++) {\n        textList.push(\"<div class=\\\"text-item\\\">\".concat(this.attrs.text, \"</div>\"));\n      }\n\n      return \"\\n    <div class=\\\"wrapper\\\">\\n      <div class=\\\"text\\\">\\n      \".concat(textList.join(\"\"), \"\\n      </div>\\n    </div>\\n    \");\n    }\n  }, {\n    key: \"css\",\n    get: function get() {\n      return \"\\n    .wrapper{\\n      width: \".concat(this.attrs.width, \"px;\\n      height: \").concat(this.attrs.height, \"px;\\n      display: flex;\\n      align-content: center;\\n      justify-content: center;\\n      align-items: center;\\n    }\\n    .text{\\n      font-size:\").concat(this.attrs.fontSize, \"px;\\n      color:\").concat(this.attrs.textColor, \";\\n      text-transform:uppercase;\\n      font-family: \").concat(this.attrs.fontFamily, \";\\n      position: absolute;\\n      font-weight: 100;\\n      transform:rotate(\").concat(this.attrs.rotate || 0, \"deg);\\n    }\\n   \\n  \");\n    }\n  }, {\n    key: \"buildTree\",\n    value: function buildTree() {\n      var fontWeight = new _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.Combo({\n        incidents: [{\n          incidentClass: Anime.Anime,\n          attrs: {\n            animatedAttrs: {\n              fontWeight: \"900\"\n            }\n          },\n          props: {\n            duration: 300\n          },\n          position: 0\n        }, {\n          incidentClass: Anime.Anime,\n          attrs: {\n            animatedAttrs: {\n              fontWeight: \"100\"\n            }\n          },\n          props: {\n            duration: 300\n          },\n          position: 300\n        }]\n      }, {\n        selector: \".text-item\",\n        delay: \"@expression(index * 20)\"\n      });\n      this.addIncident(fontWeight, 0);\n    }\n  }]);\n\n  return FontWeight;\n}(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.HTMLClip);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL0ZvbnRXZWlnaHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0ZvbnRXZWlnaHQuanM/NDA5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW90b3JDb3J0ZXggZnJvbSBcIkBraXNzbXlidXR0b24vbW90b3Jjb3J0ZXhcIjtcbmltcG9ydCBBbmltZURlZmluaXRpb24gZnJvbSBcIkBraXNzbXlidXR0b24vbW90b3Jjb3J0ZXgtYW5pbWVcIjtcbmNvbnN0IEFuaW1lID0gTW90b3JDb3J0ZXgubG9hZFBsdWdpbihBbmltZURlZmluaXRpb24pO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb250V2VpZ2h0IGV4dGVuZHMgTW90b3JDb3J0ZXguSFRNTENsaXAge1xuICBnZXQgZm9udHMoKSB7XG4gICAgbGV0IHdvcmRsaXN0ID0gdGhpcy5hdHRycy5mb250RmFtaWx5LnNwbGl0KFwiIFwiKS5qb2luKFwiK1wiKTtcbiAgICB3b3JkbGlzdCArPSBgOndnaHRAJHt0aGlzLmF0dHJzLmZvbnRXZWlnaHRMaXN0LmpvaW4oXCI7XCIpfWA7XG4gICAgY29uc3QgZm9udCA9IFtcbiAgICAgIHtcbiAgICAgICAgdHlwZTogYGdvb2dsZS1mb250YCxcbiAgICAgICAgc3JjOiBgaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT0ke3dvcmRsaXN0fSZkaXNwbGF5PXN3YXBgXG4gICAgICB9XG4gICAgXTtcbiAgICByZXR1cm4gZm9udDtcbiAgfVxuXG4gIGdldCBodG1sKCkge1xuICAgIGNvbnN0IHRleHRMaXN0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gdGhpcy5hdHRycy5yZXBlYXRzOyBpKyspIHtcbiAgICAgIHRleHRMaXN0LnB1c2goYDxkaXYgY2xhc3M9XCJ0ZXh0LWl0ZW1cIj4ke3RoaXMuYXR0cnMudGV4dH08L2Rpdj5gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYFxuICAgIDxkaXYgY2xhc3M9XCJ3cmFwcGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwidGV4dFwiPlxuICAgICAgJHt0ZXh0TGlzdC5qb2luKFwiXCIpfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgYDtcbiAgfVxuXG4gIGdldCBjc3MoKSB7XG4gICAgcmV0dXJuIGBcbiAgICAud3JhcHBlcntcbiAgICAgIHdpZHRoOiAke3RoaXMuYXR0cnMud2lkdGh9cHg7XG4gICAgICBoZWlnaHQ6ICR7dGhpcy5hdHRycy5oZWlnaHR9cHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAudGV4dHtcbiAgICAgIGZvbnQtc2l6ZToke3RoaXMuYXR0cnMuZm9udFNpemV9cHg7XG4gICAgICBjb2xvcjoke3RoaXMuYXR0cnMudGV4dENvbG9yfTtcbiAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgIGZvbnQtZmFtaWx5OiAke3RoaXMuYXR0cnMuZm9udEZhbWlseX07XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBmb250LXdlaWdodDogMTAwO1xuICAgICAgdHJhbnNmb3JtOnJvdGF0ZSgke3RoaXMuYXR0cnMucm90YXRlIHx8IDB9ZGVnKTtcbiAgICB9XG4gICBcbiAgYDtcbiAgfVxuXG4gIGJ1aWxkVHJlZSgpIHtcbiAgICBjb25zdCBmb250V2VpZ2h0ID0gbmV3IE1vdG9yQ29ydGV4LkNvbWJvKFxuICAgICAge1xuICAgICAgICBpbmNpZGVudHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbmNpZGVudENsYXNzOiBBbmltZS5BbmltZSxcbiAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgIGFuaW1hdGVkQXR0cnM6IHtcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBcIjkwMFwiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcG9zaXRpb246IDBcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGluY2lkZW50Q2xhc3M6IEFuaW1lLkFuaW1lLFxuICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgYW5pbWF0ZWRBdHRyczoge1xuICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiMTAwXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwb3NpdGlvbjogMzAwXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogYC50ZXh0LWl0ZW1gLFxuICAgICAgICBkZWxheTogYEBleHByZXNzaW9uKGluZGV4ICogMjApYFxuICAgICAgfVxuICAgICk7XG4gICAgdGhpcy5hZGRJbmNpZGVudChmb250V2VpZ2h0LCAwKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUZBO0FBS0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BOzs7QUFFQTtBQUNBO0FBb0JBOzs7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBREE7QUFLQTtBQUNBO0FBREE7QUFHQTtBQVZBO0FBYUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQURBO0FBS0E7QUFDQTtBQURBO0FBR0E7QUFWQTtBQWRBO0FBNkJBO0FBQ0E7QUFGQTtBQUtBO0FBQ0E7Ozs7QUF2RkE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/FontWeight.js\n");

/***/ }),

/***/ "../src/Shadow/IncidentTree.js":
/*!*************************************!*\
  !*** ../src/Shadow/IncidentTree.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (Anime, colorsRGB, duration) {\n  return [new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 0), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",0), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 0), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 0), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 1), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 1), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 1), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 1), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 1), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 1)\")\n    },\n    initialValues: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 1), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), ///REVERSE\n  new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 1), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 1), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 1), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 1), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 1), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 1)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 1), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 1), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 1), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 0), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 1), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  }), new Anime.Anime({\n    animatedAttrs: {\n      textShadow: \"5px 5px 0px rgba(\".concat(colorsRGB[0], \",0), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 0), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    },\n    initialValues: {\n      textShadow: \" 5px 5px 0px rgba(\".concat(colorsRGB[0], \",1), \\n          10px 10px 0px rgba(\").concat(colorsRGB[1], \", 0), \\n          15px 15px 0px rgba(\").concat(colorsRGB[2], \", 0), \\n          20px 20px 0px rgba(\").concat(colorsRGB[3], \", 0), \\n          25px 25px 0px rgba(\").concat(colorsRGB[4], \", 0), \\n          30px 30px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          35px 35px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          40px 40px 0px rgba(\").concat(colorsRGB[5], \", 0), \\n          45px 45px 0px rgba(\").concat(colorsRGB[5], \", 0)\")\n    }\n  }, {\n    duration: duration,\n    selector: \".text\"\n  })];\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/Shadow/IncidentTree.js\n");

/***/ }),

/***/ "../src/Shadow/index.js":
/*!******************************!*\
  !*** ../src/Shadow/index.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Shadow; });\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kissmybutton/motorcortex-anime */ \"../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _IncidentTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IncidentTree */ \"../src/Shadow/IncidentTree.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar Anime = _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.loadPlugin(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default.a);\n\nvar _require = __webpack_require__(/*! ../helpers */ \"../src/helpers.js\"),\n    fontFamilyHelper = _require.fontFamilyHelper;\n\n\n\nvar Shadow = /*#__PURE__*/function (_MotorCortex$HTMLClip) {\n  _inherits(Shadow, _MotorCortex$HTMLClip);\n\n  var _super = _createSuper(Shadow);\n\n  function Shadow() {\n    _classCallCheck(this, Shadow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Shadow, [{\n    key: \"fonts\",\n    get: function get() {\n      var font = [{\n        type: \"google-font\",\n        src: \"https://fonts.googleapis.com/css2?family=\".concat(fontFamilyHelper(this.attrs.fontFamily, this.attrs.fontWeight), \"&display=swap\")\n      }];\n      return font;\n    }\n  }, {\n    key: \"html\",\n    get: function get() {\n      return \"\\n        <div class=\\\"container\\\">\\n          <div class=\\\"text\\\">\".concat(this.attrs.text, \"</div>\\n        </div>\\n    \");\n    }\n  }, {\n    key: \"css\",\n    get: function get() {\n      function hexToRGB(h) {\n        var r = 0,\n            g = 0,\n            b = 0; // 3 digits\n\n        if (h.length === 4) {\n          r = \"0x\" + h[1] + h[1];\n          g = \"0x\" + h[2] + h[2];\n          b = \"0x\" + h[3] + h[3]; // 6 digits\n        } else if (h.length === 7) {\n          r = \"0x\" + h[1] + h[2];\n          g = \"0x\" + h[3] + h[4];\n          b = \"0x\" + h[5] + h[6];\n        }\n\n        return \"\".concat(+r, \",\").concat(+g, \",\").concat(+b);\n      }\n\n      this.colorsRGB = this.attrs.colors.map(function (c) {\n        return hexToRGB(c);\n      });\n      return \"\\n      .container {\\n        width: \".concat(this.attrs.width, \"px;\\n        height: \").concat(this.attrs.height, \"px;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: center;\\n        overflow: hidden;\\n        color: \").concat(this.attrs.textColor, \";\\n      }\\n\\n      .text{\\n        font-size: \").concat(this.attrs.fontSize, \"px;\\n        text-align: center;\\n        width: 100%;\\n        color: \").concat(this.attrs.textColor, \";\\n        background: \").concat(this.attrs.background, \";\\n        font-family: \").concat(this.attrs.fontFamily, \", cursive;\\n        font-weight: 700;\\n    \");\n    }\n  }, {\n    key: \"buildTree\",\n    value: function buildTree() {\n      var incidents = Object(_IncidentTree__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Anime, this.colorsRGB, 500);\n      var length = this.attrs.reverse ? incidents.length : incidents.length / 2;\n\n      for (var i = 0; i < length; i++) {\n        this.addIncident(incidents[i], i * 500);\n      }\n    }\n  }]);\n\n  return Shadow;\n}(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.HTMLClip);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL1NoYWRvdy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvU2hhZG93L2luZGV4LmpzPzY1YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vdG9yQ29ydGV4IGZyb20gXCJAa2lzc215YnV0dG9uL21vdG9yY29ydGV4XCI7XG5pbXBvcnQgQW5pbWVEZWZpbml0aW9uIGZyb20gXCJAa2lzc215YnV0dG9uL21vdG9yY29ydGV4LWFuaW1lXCI7XG5cbmNvbnN0IEFuaW1lID0gTW90b3JDb3J0ZXgubG9hZFBsdWdpbihBbmltZURlZmluaXRpb24pO1xuY29uc3QgeyBmb250RmFtaWx5SGVscGVyIH0gPSByZXF1aXJlKFwiLi4vaGVscGVyc1wiKTtcbmltcG9ydCBsb2FkSW5jaWRlbnRzIGZyb20gXCIuL0luY2lkZW50VHJlZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaGFkb3cgZXh0ZW5kcyBNb3RvckNvcnRleC5IVE1MQ2xpcCB7XG4gIGdldCBmb250cygpIHtcbiAgICBjb25zdCBmb250ID0gW1xuICAgICAge1xuICAgICAgICB0eXBlOiBgZ29vZ2xlLWZvbnRgLFxuICAgICAgICBzcmM6IGBodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PSR7Zm9udEZhbWlseUhlbHBlcihcbiAgICAgICAgICB0aGlzLmF0dHJzLmZvbnRGYW1pbHksXG4gICAgICAgICAgdGhpcy5hdHRycy5mb250V2VpZ2h0XG4gICAgICAgICl9JmRpc3BsYXk9c3dhcGBcbiAgICAgIH1cbiAgICBdO1xuICAgIHJldHVybiBmb250O1xuICB9XG5cbiAgZ2V0IGh0bWwoKSB7XG4gICAgcmV0dXJuIGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0XCI+JHt0aGlzLmF0dHJzLnRleHR9PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cblxuICBnZXQgY3NzKCkge1xuICAgIGZ1bmN0aW9uIGhleFRvUkdCKGgpIHtcbiAgICAgIGxldCByID0gMCxcbiAgICAgICAgZyA9IDAsXG4gICAgICAgIGIgPSAwO1xuXG4gICAgICAvLyAzIGRpZ2l0c1xuICAgICAgaWYgKGgubGVuZ3RoID09PSA0KSB7XG4gICAgICAgIHIgPSBcIjB4XCIgKyBoWzFdICsgaFsxXTtcbiAgICAgICAgZyA9IFwiMHhcIiArIGhbMl0gKyBoWzJdO1xuICAgICAgICBiID0gXCIweFwiICsgaFszXSArIGhbM107XG5cbiAgICAgICAgLy8gNiBkaWdpdHNcbiAgICAgIH0gZWxzZSBpZiAoaC5sZW5ndGggPT09IDcpIHtcbiAgICAgICAgciA9IFwiMHhcIiArIGhbMV0gKyBoWzJdO1xuICAgICAgICBnID0gXCIweFwiICsgaFszXSArIGhbNF07XG4gICAgICAgIGIgPSBcIjB4XCIgKyBoWzVdICsgaFs2XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGAkeytyfSwkeytnfSwkeytifWA7XG4gICAgfVxuICAgIHRoaXMuY29sb3JzUkdCID0gdGhpcy5hdHRycy5jb2xvcnMubWFwKGMgPT4gaGV4VG9SR0IoYykpO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgIC5jb250YWluZXIge1xuICAgICAgICB3aWR0aDogJHt0aGlzLmF0dHJzLndpZHRofXB4O1xuICAgICAgICBoZWlnaHQ6ICR7dGhpcy5hdHRycy5oZWlnaHR9cHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBjb2xvcjogJHt0aGlzLmF0dHJzLnRleHRDb2xvcn07XG4gICAgICB9XG5cbiAgICAgIC50ZXh0e1xuICAgICAgICBmb250LXNpemU6ICR7dGhpcy5hdHRycy5mb250U2l6ZX1weDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgY29sb3I6ICR7dGhpcy5hdHRycy50ZXh0Q29sb3J9O1xuICAgICAgICBiYWNrZ3JvdW5kOiAke3RoaXMuYXR0cnMuYmFja2dyb3VuZH07XG4gICAgICAgIGZvbnQtZmFtaWx5OiAke3RoaXMuYXR0cnMuZm9udEZhbWlseX0sIGN1cnNpdmU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgYDtcbiAgfVxuXG4gIGJ1aWxkVHJlZSgpIHtcbiAgICBjb25zdCBpbmNpZGVudHMgPSBsb2FkSW5jaWRlbnRzKEFuaW1lLCB0aGlzLmNvbG9yc1JHQiwgNTAwKTtcbiAgICBjb25zdCBsZW5ndGggPSB0aGlzLmF0dHJzLnJldmVyc2UgPyBpbmNpZGVudHMubGVuZ3RoIDogaW5jaWRlbnRzLmxlbmd0aCAvIDI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5hZGRJbmNpZGVudChpbmNpZGVudHNbaV0sIGkgKiA1MDApO1xuICAgIH1cbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFGQTtBQVFBO0FBQ0E7OztBQUVBO0FBQ0E7QUFLQTs7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQXFCQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7OztBQTFFQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/Shadow/index.js\n");

/***/ }),

/***/ "../src/SvgExplosion.js":
/*!******************************!*\
  !*** ../src/SvgExplosion.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SvgExplosion; });\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kissmybutton/motorcortex-anime */ \"../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar Anime = _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.loadPlugin(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default.a);\n\nvar _require = __webpack_require__(/*! ./helpers */ \"../src/helpers.js\"),\n    fontFamilyHelper = _require.fontFamilyHelper;\n\nvar SvgExplosion = /*#__PURE__*/function (_MotorCortex$HTMLClip) {\n  _inherits(SvgExplosion, _MotorCortex$HTMLClip);\n\n  var _super = _createSuper(SvgExplosion);\n\n  function SvgExplosion() {\n    _classCallCheck(this, SvgExplosion);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SvgExplosion, [{\n    key: \"fonts\",\n    get: function get() {\n      var family = fontFamilyHelper(this.attrs.fontFamily, this.attrs.fontWeight);\n      var font = [{\n        type: \"google-font\",\n        src: \"https://fonts.googleapis.com/css2?family=\".concat(family, \"&display=swap\")\n      }];\n      return font;\n    }\n  }, {\n    key: \"html\",\n    get: function get() {\n      var _this$attrs = this.attrs,\n          text = _this$attrs.text,\n          colors = _this$attrs.colors,\n          width = _this$attrs.width;\n      this.textSize = width / text.length;\n      var allCharElements = \"\";\n      var polygons = \"\";\n      var circles = \"\";\n\n      for (var i = 0; i < text.length; i++) {\n        var style = \"color : \".concat(colors[i % colors.length], \";\");\n        var singleChar = text.slice(i, i + 1);\n        var singleCharElement = \"<span \\n          id=\\\"text\\\"\\n          style=\\\"\".concat(style, \"\\\"\\n          class=\\\"letter letter-\").concat(i, \"\\\"\\n        >\\n            \").concat(singleChar, \"\\n        </span>\");\n        allCharElements += singleCharElement;\n\n        for (var j = 0; j < 8; j++) {\n          var point1 = this.textSize * 0.1 * 2;\n          var point2 = this.textSize * 0.1;\n          var point3 = this.textSize * 0.1 * 2;\n          polygons += \"\\n          <polygon \\n            class=\\\"poligon-\".concat(i, \"-\").concat(j, \" poligon\\\"\\n            points=\\\"0,0 \").concat(point1, \",0 \").concat(point2, \",\").concat(point3, \"\\\"\\n            style=\\\"fill: \").concat(colors[i % colors.length], \";\\\"\\n          ></polygon>\");\n          circles += \"\\n          <circle \\n            r=\\\"\".concat(this.textSize * 0.052, \"\\\"\\n            class=\\\"circ circ-\").concat(i, \"-\").concat(j, \"\\\"\\n            style=\\\"fill:rgb(238, 238, 238);\\\"\\n          ></circle>\");\n        }\n      }\n\n      var html = \"\\n      <div class=\\\"wrapper\\\">\\n        <div class=\\\"container\\\">\\n          <p \\n            id=\\\"text\\\"\\n            style=\\\"font-size:\".concat(this.textSize, \"px\\\"\\n            class=\\\"text\\\"\\n          >\").concat(allCharElements, \"</p>\\n          <svg id=\\\"svg\\\">\\n          \").concat(polygons, \"\\n          \").concat(circles, \"\\n          </svg>\\n        </div>\\n      </div>\\n      \");\n      return html;\n    }\n  }, {\n    key: \"css\",\n    get: function get() {\n      return \"\\n      svg {\\n        width: 100%;\\n        position: absolute;\\n        top: 0px;\\n        left: 0px;\\n        z-index: 0;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        overflow: overlay;\\n      }\\n      \\n      .text, .offscreen-text {\\n        width: 100%;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        display: block;\\n        margin: 0;\\n        text-align: center;\\n        font-family: \".concat(this.attrs.fontFamily, \"\\n      }\\n      \\n      .offscreen-text {\\n        text-align: center;\\n        top: -9999px;\\n      }\\n      \\n      .letter{\\n        display:inline-block;\\n        font-weight: 800;\\n      }\\n\\n      .poligon{\\n        opacity:0\\n      }\\n\\n      .container{\\n        width: \").concat(this.attrs.width, \"px;\\n        height: \").concat(this.attrs.height, \"px;\\n        overflow: hidden;\\n        background: \").concat(this.attrs.background, \";\\n        display: flex;\\n        align-content: center;\\n        align-items: center;\\n        position: relative;\\n      }\\n\\n      .wrapper{\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        align-content: center;\\n        justify-content: center;\\n        align-items: center;\\n      }\\n  \");\n    }\n  }, {\n    key: \"buildTree\",\n    value: function buildTree() {\n      var polyPosition = this.textSize * this.attrs.text.length / 2;\n\n      for (var i = 0; i < this.attrs.text.length; i++) {\n        var rotation = -50 + Math.random() * 100;\n        var textAnimation = new Anime.Anime({\n          animatedAttrs: {\n            width: \"\".concat(this.textSize, \"px\"),\n            opacity: 1,\n            transform: {\n              translateY: \"0%\",\n              scale: 1,\n              rotate: rotation + \"deg\"\n            }\n          },\n          initialValues: {\n            width: \"0px\",\n            opacity: 0,\n            transform: {\n              translateY: \"100%\",\n              scale: 0\n            }\n          }\n        }, {\n          duration: 200,\n          selector: \".letter-\" + i,\n          easing: \"easeOutExpo\"\n        });\n        var polyMcGrou = new _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.Group();\n        var waitTIme = 0;\n\n        for (var j = 0; j < 8; j++) {\n          var a = Math.random();\n          var a2 = a + (-0.2 + Math.random() * 0.4);\n          var r = this.textSize * 0.52;\n          var r2 = r + this.textSize * Math.random() * 0.2;\n          var x = polyPosition + r * Math.cos(2 * Math.PI * a);\n          var y = 50 + r * Math.sin(2 * Math.PI * a);\n          var x2 = polyPosition + r2 * Math.cos(2 * Math.PI * a2);\n          var y2 = 50 + r2 * Math.sin(2 * Math.PI * a2);\n          var triSize = this.textSize * 0.1;\n          var scale = 0.3 + Math.random() * 0.7;\n          var offset = triSize * scale;\n          var circSize = this.textSize * 0.05 * Math.random();\n          var polyAnimationOp = new Anime.Anime({\n            animatedAttrs: {\n              opacity: 1\n            },\n            initialValues: {\n              opacity: 0\n            }\n          }, {\n            duration: 1,\n            selector: \".poligon-\".concat(i, \"-\").concat(j, \",.circ-\").concat(i, \"-\").concat(j),\n            easing: \"easeOutExpo\"\n          });\n          var circAnimation = new Anime.Anime({\n            animatedAttrs: {\n              transform: {\n                rotate: Math.random() * 360 + \"deg\",\n                translateX: x2 - circSize + \"px\",\n                translateY: y2 - circSize + \"px\"\n              },\n              opacity: 0\n            },\n            initialValues: {\n              transform: {\n                scale: circSize * 0.15,\n                rotate: Math.random() * 360 + \"deg\",\n                translateX: x - offset + \"px\",\n                translateY: y - offset + \"px\"\n              },\n              opacity: 1\n            }\n          }, {\n            duration: 600,\n            selector: \".circ-\".concat(i, \"-\").concat(j),\n            easing: \"easeOutQuint\"\n          });\n          var polyAnimation = new Anime.Anime({\n            animatedAttrs: {\n              transform: {\n                rotate: Math.random() * 360 + \"deg\",\n                translateX: x2 - offset + \"px\",\n                translateY: y2 - offset + \"px\"\n              },\n              opacity: 0\n            },\n            initialValues: {\n              transform: {\n                scale: scale,\n                rotate: Math.random() * 360 + \"deg\",\n                translateX: x - offset + \"px\",\n                translateY: y - offset + \"px\"\n              },\n              opacity: 1\n            }\n          }, {\n            duration: 600,\n            selector: \".poligon-\".concat(i, \"-\").concat(j),\n            easing: \"easeOutQuint\"\n          });\n          polyMcGrou.addIncident(polyAnimationOp, 0);\n          polyMcGrou.addIncident(polyAnimation, 1);\n          polyMcGrou.addIncident(circAnimation, 1);\n        }\n\n        polyPosition += this.textSize / 2;\n        var textAnimation2 = new Anime.Anime({\n          animatedAttrs: {\n            transform: {\n              translateY: \"50%\",\n              rotate: \"0deg\"\n            }\n          },\n          initialValues: {\n            transform: {\n              translateY: \"0%\" // rotate: rotation+\"deg\"\n\n            }\n          }\n        }, {\n          duration: 200,\n          selector: \".letter-\" + i,\n          easing: \"easeOutExpo\"\n        });\n        this.addIncident(textAnimation, 200 * (i + 1) + waitTIme);\n        this.addIncident(polyMcGrou, 200 * (i + 1) + waitTIme);\n        this.addIncident(textAnimation2, 200 + 200 * (i + 1) + waitTIme);\n        waitTIme = 200 * (i + 1);\n      }\n    }\n  }]);\n\n  return SvgExplosion;\n}(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.HTMLClip);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/SvgExplosion.js\n");

/***/ }),

/***/ "../src/SvgLines.js":
/*!**************************!*\
  !*** ../src/SvgLines.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SvgLines; });\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kissmybutton/motorcortex-anime */ \"../node_modules/@kissmybutton/motorcortex-anime/dist/motorcortex-anime.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar Anime = _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.loadPlugin(_kissmybutton_motorcortex_anime__WEBPACK_IMPORTED_MODULE_1___default.a);\n\nvar _require = __webpack_require__(/*! ./helpers */ \"../src/helpers.js\"),\n    fontFamilyHelper = _require.fontFamilyHelper;\n\nvar SvgLines = /*#__PURE__*/function (_MotorCortex$HTMLClip) {\n  _inherits(SvgLines, _MotorCortex$HTMLClip);\n\n  var _super = _createSuper(SvgLines);\n\n  function SvgLines() {\n    _classCallCheck(this, SvgLines);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SvgLines, [{\n    key: \"fonts\",\n    get: function get() {\n      var font = [{\n        type: \"google-font\",\n        src: \"https://fonts.googleapis.com/css2?family=\".concat(fontFamilyHelper(this.attrs.fontFamily, this.attrs.fontWeight), \"&display=swap\")\n      }];\n      return font;\n    }\n  }, {\n    key: \"html\",\n    get: function get() {\n      var y = this.attrs.verticalAlign || \"50%\";\n      return \"\\n        <div class=\\\"container\\\">\\n          <svg>\\n            <symbol id=\\\"s-text\\\">\\n              <text text-anchor=\\\"middle\\\" x=\\\"50%\\\" y=\\\"\".concat(y, \"\\\" class=\\\"text--line\\\">\").concat(this.attrs.text, \"</text>\\n            </symbol>\\n            <g class=\\\"g-ants\\\">\\n              <use xlink:href=\\\"#s-text\\\" class=\\\"text-copy\\\"></use>\\n              <use xlink:href=\\\"#s-text\\\" class=\\\"text-copy\\\"></use>\\n              <use xlink:href=\\\"#s-text\\\" class=\\\"text-copy\\\"></use>\\n              <use xlink:href=\\\"#s-text\\\" class=\\\"text-copy\\\"></use>\\n              <use xlink:href=\\\"#s-text\\\" class=\\\"text-copy\\\"></use>\\n            </g>\\n          </svg> \\n        </div>\\n    \");\n    }\n  }, {\n    key: \"css\",\n    get: function get() {\n      return \"\\n    .container{\\n      width: \".concat(this.attrs.width, \"px;\\n      height: \").concat(this.attrs.height, \"px;\\n      overflow: hidden;\\n      background: \").concat(this.attrs.background, \";\\n      display: flex;\\n      align-content: center;\\n      align-items: center;\\n      position: relative;\\n    }\\n    .g-ants{\\n      position: relative;\\n    }\\n    .text--line {\\n      font-size: \").concat(this.attrs.fontSize, \"px;\\n      font-family: \").concat(this.attrs.fontFamily, \"\\n    }\\n    svg {\\n      width: 100%;\\n      height: 100%;\\n    }\\n    .text-copy {\\n      fill: none;\\n      stroke: white;\\n      stroke-dasharray: 100% 28%;\\n      stroke-width: \").concat(this.attrs.strokeWidth, \"px;\\n    }\\n    .text-copy:nth-child(1) {\\n      stroke: \").concat(this.attrs.colors[0], \";\\n      stroke-dashoffset: 7%;\\n    }\\n    .text-copy:nth-child(2) {\\n      stroke: \").concat(this.attrs.colors[1], \";\\n      stroke-dashoffset: 14%;\\n    }\\n    .text-copy:nth-child(3) {\\n      stroke: \").concat(this.attrs.colors[2], \";\\n      stroke-dashoffset: 21%;\\n    }\\n    .text-copy:nth-child(4) {\\n      stroke: \").concat(this.attrs.colors[3], \";\\n      stroke-dashoffset: 28%;\\n    }\\n    .text-copy:nth-child(5) {\\n      stroke: \").concat(this.attrs.colors[4], \";\\n      stroke-dashoffset: 35%;\\n    }\\n  \");\n    }\n  }, {\n    key: \"buildTree\",\n    value: function buildTree() {\n      var svgline = new Anime.Anime({\n        animatedAttrs: {\n          strokeDashoffset: \"35%\",\n          strokeDasharray: \" 0 87.5%\"\n        }\n      }, {\n        duration: 4000,\n        selector: \".text-copy\"\n      });\n      this.addIncident(svgline, 0);\n    }\n  }]);\n\n  return SvgLines;\n}(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default.a.HTMLClip);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL1N2Z0xpbmVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9TdmdMaW5lcy5qcz9lMGQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb3RvckNvcnRleCBmcm9tIFwiQGtpc3NteWJ1dHRvbi9tb3RvcmNvcnRleFwiO1xuaW1wb3J0IEFuaW1lRGVmaW5pdGlvbiBmcm9tIFwiQGtpc3NteWJ1dHRvbi9tb3RvcmNvcnRleC1hbmltZVwiO1xuXG5jb25zdCBBbmltZSA9IE1vdG9yQ29ydGV4LmxvYWRQbHVnaW4oQW5pbWVEZWZpbml0aW9uKTtcbmNvbnN0IHsgZm9udEZhbWlseUhlbHBlciB9ID0gcmVxdWlyZShcIi4vaGVscGVyc1wiKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3ZnTGluZXMgZXh0ZW5kcyBNb3RvckNvcnRleC5IVE1MQ2xpcCB7XG4gIGdldCBmb250cygpIHtcbiAgICBjb25zdCBmb250ID0gW1xuICAgICAge1xuICAgICAgICB0eXBlOiBgZ29vZ2xlLWZvbnRgLFxuICAgICAgICBzcmM6IGBodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PSR7Zm9udEZhbWlseUhlbHBlcihcbiAgICAgICAgICB0aGlzLmF0dHJzLmZvbnRGYW1pbHksXG4gICAgICAgICAgdGhpcy5hdHRycy5mb250V2VpZ2h0XG4gICAgICAgICl9JmRpc3BsYXk9c3dhcGBcbiAgICAgIH1cbiAgICBdO1xuICAgIHJldHVybiBmb250O1xuICB9XG5cbiAgZ2V0IGh0bWwoKSB7XG4gICAgY29uc3QgeSA9IHRoaXMuYXR0cnMudmVydGljYWxBbGlnbiB8fCBcIjUwJVwiO1xuICAgIHJldHVybiBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICAgICAgICA8c3ZnPlxuICAgICAgICAgICAgPHN5bWJvbCBpZD1cInMtdGV4dFwiPlxuICAgICAgICAgICAgICA8dGV4dCB0ZXh0LWFuY2hvcj1cIm1pZGRsZVwiIHg9XCI1MCVcIiB5PVwiJHt5fVwiIGNsYXNzPVwidGV4dC0tbGluZVwiPiR7dGhpcy5hdHRycy50ZXh0fTwvdGV4dD5cbiAgICAgICAgICAgIDwvc3ltYm9sPlxuICAgICAgICAgICAgPGcgY2xhc3M9XCJnLWFudHNcIj5cbiAgICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPVwiI3MtdGV4dFwiIGNsYXNzPVwidGV4dC1jb3B5XCI+PC91c2U+XG4gICAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj1cIiNzLXRleHRcIiBjbGFzcz1cInRleHQtY29weVwiPjwvdXNlPlxuICAgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9XCIjcy10ZXh0XCIgY2xhc3M9XCJ0ZXh0LWNvcHlcIj48L3VzZT5cbiAgICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPVwiI3MtdGV4dFwiIGNsYXNzPVwidGV4dC1jb3B5XCI+PC91c2U+XG4gICAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj1cIiNzLXRleHRcIiBjbGFzcz1cInRleHQtY29weVwiPjwvdXNlPlxuICAgICAgICAgICAgPC9nPlxuICAgICAgICAgIDwvc3ZnPiBcbiAgICAgICAgPC9kaXY+XG4gICAgYDtcbiAgfVxuXG4gIGdldCBjc3MoKSB7XG4gICAgcmV0dXJuIGBcbiAgICAuY29udGFpbmVye1xuICAgICAgd2lkdGg6ICR7dGhpcy5hdHRycy53aWR0aH1weDtcbiAgICAgIGhlaWdodDogJHt0aGlzLmF0dHJzLmhlaWdodH1weDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBiYWNrZ3JvdW5kOiAke3RoaXMuYXR0cnMuYmFja2dyb3VuZH07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gICAgLmctYW50c3tcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gICAgLnRleHQtLWxpbmUge1xuICAgICAgZm9udC1zaXplOiAke3RoaXMuYXR0cnMuZm9udFNpemV9cHg7XG4gICAgICBmb250LWZhbWlseTogJHt0aGlzLmF0dHJzLmZvbnRGYW1pbHl9XG4gICAgfVxuICAgIHN2ZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gICAgLnRleHQtY29weSB7XG4gICAgICBmaWxsOiBub25lO1xuICAgICAgc3Ryb2tlOiB3aGl0ZTtcbiAgICAgIHN0cm9rZS1kYXNoYXJyYXk6IDEwMCUgMjglO1xuICAgICAgc3Ryb2tlLXdpZHRoOiAke3RoaXMuYXR0cnMuc3Ryb2tlV2lkdGh9cHg7XG4gICAgfVxuICAgIC50ZXh0LWNvcHk6bnRoLWNoaWxkKDEpIHtcbiAgICAgIHN0cm9rZTogJHt0aGlzLmF0dHJzLmNvbG9yc1swXX07XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogNyU7XG4gICAgfVxuICAgIC50ZXh0LWNvcHk6bnRoLWNoaWxkKDIpIHtcbiAgICAgIHN0cm9rZTogJHt0aGlzLmF0dHJzLmNvbG9yc1sxXX07XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogMTQlO1xuICAgIH1cbiAgICAudGV4dC1jb3B5Om50aC1jaGlsZCgzKSB7XG4gICAgICBzdHJva2U6ICR7dGhpcy5hdHRycy5jb2xvcnNbMl19O1xuICAgICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDIxJTtcbiAgICB9XG4gICAgLnRleHQtY29weTpudGgtY2hpbGQoNCkge1xuICAgICAgc3Ryb2tlOiAke3RoaXMuYXR0cnMuY29sb3JzWzNdfTtcbiAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAyOCU7XG4gICAgfVxuICAgIC50ZXh0LWNvcHk6bnRoLWNoaWxkKDUpIHtcbiAgICAgIHN0cm9rZTogJHt0aGlzLmF0dHJzLmNvbG9yc1s0XX07XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogMzUlO1xuICAgIH1cbiAgYDtcbiAgfVxuXG4gIGJ1aWxkVHJlZSgpIHtcbiAgICBjb25zdCBzdmdsaW5lID0gbmV3IEFuaW1lLkFuaW1lKFxuICAgICAge1xuICAgICAgICBhbmltYXRlZEF0dHJzOiB7XG4gICAgICAgICAgc3Ryb2tlRGFzaG9mZnNldDogXCIzNSVcIixcbiAgICAgICAgICBzdHJva2VEYXNoYXJyYXk6IFwiIDAgODcuNSVcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBkdXJhdGlvbjogNDAwMCxcbiAgICAgICAgc2VsZWN0b3I6IGAudGV4dC1jb3B5YFxuICAgICAgfVxuICAgICk7XG4gICAgdGhpcy5hZGRJbmNpZGVudChzdmdsaW5lLCAwKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRkE7QUFRQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFnQkE7OztBQUVBO0FBQ0E7QUFpREE7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQURBO0FBT0E7QUFDQTtBQUZBO0FBS0E7QUFDQTs7OztBQXBHQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/SvgLines.js\n");

/***/ }),

/***/ "../src/helpers.js":
/*!*************************!*\
  !*** ../src/helpers.js ***!
  \*************************/
/*! exports provided: fontFamilyHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fontFamilyHelper\", function() { return fontFamilyHelper; });\nvar fontFamilyHelper = function fontFamilyHelper(fontFamily, fontWeight) {\n  var wordlist = fontFamily.split(\" \").join(\"+\");\n\n  if (fontWeight) {\n    wordlist += \":wght@\".concat(fontWeight);\n  }\n\n  return wordlist;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2hlbHBlcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2hlbHBlcnMuanM/YmMxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZm9udEZhbWlseUhlbHBlciA9IChmb250RmFtaWx5LCBmb250V2VpZ2h0KSA9PiB7XG4gIGxldCB3b3JkbGlzdCA9IGZvbnRGYW1pbHkuc3BsaXQoXCIgXCIpLmpvaW4oXCIrXCIpO1xuICBpZiAoZm9udFdlaWdodCkge1xuICAgIHdvcmRsaXN0ICs9IGA6d2dodEAke2ZvbnRXZWlnaHR9YDtcbiAgfVxuICByZXR1cm4gd29yZGxpc3Q7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/helpers.js\n");

/***/ }),

/***/ "../src/index.js":
/*!***********************!*\
  !*** ../src/index.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _SvgExplosion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SvgExplosion */ \"../src/SvgExplosion.js\");\n/* harmony import */ var _SvgLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SvgLines */ \"../src/SvgLines.js\");\n/* harmony import */ var _Shadow_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Shadow/index.js */ \"../src/Shadow/index.js\");\n/* harmony import */ var _FontWeight__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FontWeight */ \"../src/FontWeight.js\");\n/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validation */ \"../src/validation.js\");\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../package.json */ \"../package.json\");\nvar _package_json__WEBPACK_IMPORTED_MODULE_5___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../package.json */ \"../package.json\", 1);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  npm_name: _package_json__WEBPACK_IMPORTED_MODULE_5__[\"name\"],\n  version: _package_json__WEBPACK_IMPORTED_MODULE_5__[\"version\"],\n  incidents: [{\n    exportable: _SvgExplosion__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    name: \"SvgExplosion\",\n    attributesValidationRules: _validation__WEBPACK_IMPORTED_MODULE_4__[\"SvgExplosionValidation\"]\n  }, {\n    exportable: _SvgLines__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    name: \"SvgLines\",\n    attributesValidationRules: _validation__WEBPACK_IMPORTED_MODULE_4__[\"SvgLineValidation\"]\n  }, {\n    exportable: _Shadow_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    name: \"Shadow\",\n    attributesValidationRules: _validation__WEBPACK_IMPORTED_MODULE_4__[\"ShadowValidation\"]\n  }, {\n    exportable: _FontWeight__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    name: \"FontWeight\",\n    attributesValidationRules: _validation__WEBPACK_IMPORTED_MODULE_4__[\"FontWeightValidation\"]\n  }]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9pbmRleC5qcz9hMTc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdmdFeHBsb3Npb24gZnJvbSBcIi4vU3ZnRXhwbG9zaW9uXCI7XG5pbXBvcnQgU3ZnTGluZXMgZnJvbSBcIi4vU3ZnTGluZXNcIjtcbmltcG9ydCBTaGFkb3cgZnJvbSBcIi4vU2hhZG93L2luZGV4LmpzXCI7XG5pbXBvcnQgRm9udFdlaWdodCBmcm9tIFwiLi9Gb250V2VpZ2h0XCI7XG5pbXBvcnQge1xuICBTaGFkb3dWYWxpZGF0aW9uLFxuICBTdmdFeHBsb3Npb25WYWxpZGF0aW9uLFxuICBTdmdMaW5lVmFsaWRhdGlvbixcbiAgRm9udFdlaWdodFZhbGlkYXRpb25cbn0gZnJvbSBcIi4vdmFsaWRhdGlvblwiO1xuXG5pbXBvcnQgeyBuYW1lLCB2ZXJzaW9uIH0gZnJvbSBcIi4uL3BhY2thZ2UuanNvblwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5wbV9uYW1lOiBuYW1lLFxuICB2ZXJzaW9uOiB2ZXJzaW9uLFxuICBpbmNpZGVudHM6IFtcbiAgICB7XG4gICAgICBleHBvcnRhYmxlOiBTdmdFeHBsb3Npb24sXG4gICAgICBuYW1lOiBcIlN2Z0V4cGxvc2lvblwiLFxuICAgICAgYXR0cmlidXRlc1ZhbGlkYXRpb25SdWxlczogU3ZnRXhwbG9zaW9uVmFsaWRhdGlvblxuICAgIH0sXG4gICAge1xuICAgICAgZXhwb3J0YWJsZTogU3ZnTGluZXMsXG4gICAgICBuYW1lOiBcIlN2Z0xpbmVzXCIsXG4gICAgICBhdHRyaWJ1dGVzVmFsaWRhdGlvblJ1bGVzOiBTdmdMaW5lVmFsaWRhdGlvblxuICAgIH0sXG4gICAge1xuICAgICAgZXhwb3J0YWJsZTogU2hhZG93LFxuICAgICAgbmFtZTogXCJTaGFkb3dcIixcbiAgICAgIGF0dHJpYnV0ZXNWYWxpZGF0aW9uUnVsZXM6IFNoYWRvd1ZhbGlkYXRpb25cbiAgICB9LFxuICAgIHtcbiAgICAgIGV4cG9ydGFibGU6IEZvbnRXZWlnaHQsXG4gICAgICBuYW1lOiBcIkZvbnRXZWlnaHRcIixcbiAgICAgIGF0dHJpYnV0ZXNWYWxpZGF0aW9uUnVsZXM6IEZvbnRXZWlnaHRWYWxpZGF0aW9uXG4gICAgfVxuICBdXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFIQTtBQW5CQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/index.js\n");

/***/ }),

/***/ "../src/validation.js":
/*!****************************!*\
  !*** ../src/validation.js ***!
  \****************************/
/*! exports provided: SvgExplosionValidation, SvgLineValidation, ShadowValidation, FontWeightValidation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SvgExplosionValidation\", function() { return SvgExplosionValidation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SvgLineValidation\", function() { return SvgLineValidation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShadowValidation\", function() { return ShadowValidation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontWeightValidation\", function() { return FontWeightValidation; });\nvar SvgExplosionValidation = {\n  text: {\n    type: \"string\"\n  },\n  colors: {\n    optional: true,\n    type: \"array\",\n    min: 2,\n    items: {\n      optional: true,\n      type: \"color\"\n    }\n  },\n  width: {\n    type: \"number\"\n  },\n  height: {\n    type: \"number\"\n  },\n  background: {\n    optional: true,\n    type: \"color\"\n  },\n  fontFamily: {\n    type: \"string\"\n  }\n};\nvar SvgLineValidation = {\n  text: {\n    type: \"string\"\n  },\n  colors: {\n    optional: true,\n    type: \"array\",\n    min: 2,\n    items: {\n      optional: true,\n      type: \"color\"\n    }\n  },\n  width: {\n    type: \"number\"\n  },\n  fontSize: {\n    type: \"number\"\n  },\n  strokeWidth: {\n    type: \"number\"\n  },\n  height: {\n    type: \"number\"\n  },\n  background: {\n    optional: true,\n    type: \"color\"\n  },\n  fontFamily: {\n    type: \"string\"\n  },\n  verticalAlign: {\n    type: \"string\"\n  }\n};\nvar ShadowValidation = {\n  text: {\n    type: \"string\"\n  },\n  colors: {\n    optional: true,\n    type: \"array\",\n    min: 2,\n    items: {\n      optional: true,\n      type: \"color\"\n    }\n  },\n  width: {\n    type: \"number\"\n  },\n  fontSize: {\n    type: \"number\"\n  },\n  fontFamily: {\n    type: \"string\"\n  },\n  textColor: {\n    type: \"string\"\n  },\n  height: {\n    type: \"number\"\n  },\n  background: {\n    optional: true,\n    type: \"color\"\n  },\n  reverse: {\n    type: \"boolean\"\n  }\n};\nvar FontWeightValidation = {\n  text: {\n    type: \"string\"\n  },\n  fontWeightList: {\n    type: \"array\",\n    items: {\n      type: \"number\"\n    }\n  },\n  repeats: {\n    type: \"number\",\n    min: 1\n  },\n  width: {\n    type: \"number\"\n  },\n  height: {\n    type: \"number\"\n  },\n  fontSize: {\n    type: \"number\"\n  },\n  fontFamily: {\n    type: \"string\"\n  },\n  textColor: {\n    type: \"color\"\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3ZhbGlkYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3ZhbGlkYXRpb24uanM/NTg5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU3ZnRXhwbG9zaW9uVmFsaWRhdGlvbiA9IHtcbiAgdGV4dDoge1xuICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgfSxcbiAgY29sb3JzOiB7XG4gICAgb3B0aW9uYWw6IHRydWUsXG4gICAgdHlwZTogXCJhcnJheVwiLFxuICAgIG1pbjogMixcbiAgICBpdGVtczoge1xuICAgICAgb3B0aW9uYWw6IHRydWUsXG4gICAgICB0eXBlOiBcImNvbG9yXCJcbiAgICB9XG4gIH0sXG4gIHdpZHRoOiB7XG4gICAgdHlwZTogXCJudW1iZXJcIlxuICB9LFxuICBoZWlnaHQ6IHsgdHlwZTogXCJudW1iZXJcIiB9LFxuICBiYWNrZ3JvdW5kOiB7IG9wdGlvbmFsOiB0cnVlLCB0eXBlOiBcImNvbG9yXCIgfSxcbiAgZm9udEZhbWlseToge1xuICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IFN2Z0xpbmVWYWxpZGF0aW9uID0ge1xuICB0ZXh0OiB7XG4gICAgdHlwZTogXCJzdHJpbmdcIlxuICB9LFxuICBjb2xvcnM6IHtcbiAgICBvcHRpb25hbDogdHJ1ZSxcbiAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgbWluOiAyLFxuICAgIGl0ZW1zOiB7XG4gICAgICBvcHRpb25hbDogdHJ1ZSxcbiAgICAgIHR5cGU6IFwiY29sb3JcIlxuICAgIH1cbiAgfSxcbiAgd2lkdGg6IHtcbiAgICB0eXBlOiBcIm51bWJlclwiXG4gIH0sXG4gIGZvbnRTaXplOiB7XG4gICAgdHlwZTogXCJudW1iZXJcIlxuICB9LFxuICBzdHJva2VXaWR0aDoge1xuICAgIHR5cGU6IFwibnVtYmVyXCJcbiAgfSxcbiAgaGVpZ2h0OiB7IHR5cGU6IFwibnVtYmVyXCIgfSxcbiAgYmFja2dyb3VuZDogeyBvcHRpb25hbDogdHJ1ZSwgdHlwZTogXCJjb2xvclwiIH0sXG4gIGZvbnRGYW1pbHk6IHtcbiAgICB0eXBlOiBcInN0cmluZ1wiXG4gIH0sXG4gIHZlcnRpY2FsQWxpZ246IHtcbiAgICB0eXBlOiBcInN0cmluZ1wiXG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBTaGFkb3dWYWxpZGF0aW9uID0ge1xuICB0ZXh0OiB7XG4gICAgdHlwZTogXCJzdHJpbmdcIlxuICB9LFxuICBjb2xvcnM6IHtcbiAgICBvcHRpb25hbDogdHJ1ZSxcbiAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgbWluOiAyLFxuICAgIGl0ZW1zOiB7XG4gICAgICBvcHRpb25hbDogdHJ1ZSxcbiAgICAgIHR5cGU6IFwiY29sb3JcIlxuICAgIH1cbiAgfSxcbiAgd2lkdGg6IHtcbiAgICB0eXBlOiBcIm51bWJlclwiXG4gIH0sXG4gIGZvbnRTaXplOiB7XG4gICAgdHlwZTogXCJudW1iZXJcIlxuICB9LFxuICBmb250RmFtaWx5OiB7XG4gICAgdHlwZTogXCJzdHJpbmdcIlxuICB9LFxuICB0ZXh0Q29sb3I6IHtcbiAgICB0eXBlOiBcInN0cmluZ1wiXG4gIH0sXG4gIGhlaWdodDogeyB0eXBlOiBcIm51bWJlclwiIH0sXG4gIGJhY2tncm91bmQ6IHsgb3B0aW9uYWw6IHRydWUsIHR5cGU6IFwiY29sb3JcIiB9LFxuICByZXZlcnNlOiB7IHR5cGU6IFwiYm9vbGVhblwiIH1cbn07XG5cbmV4cG9ydCBjb25zdCBGb250V2VpZ2h0VmFsaWRhdGlvbiA9IHtcbiAgdGV4dDoge1xuICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgfSxcbiAgZm9udFdlaWdodExpc3Q6IHsgdHlwZTogXCJhcnJheVwiLCBpdGVtczogeyB0eXBlOiBcIm51bWJlclwiIH0gfSxcbiAgcmVwZWF0czogeyB0eXBlOiBcIm51bWJlclwiLCBtaW46IDEgfSxcbiAgd2lkdGg6IHtcbiAgICB0eXBlOiBcIm51bWJlclwiXG4gIH0sXG4gIGhlaWdodDogeyB0eXBlOiBcIm51bWJlclwiIH0sXG4gIGZvbnRTaXplOiB7XG4gICAgdHlwZTogXCJudW1iZXJcIlxuICB9LFxuICBmb250RmFtaWx5OiB7XG4gICAgdHlwZTogXCJzdHJpbmdcIlxuICB9LFxuICB0ZXh0Q29sb3I6IHtcbiAgICB0eXBlOiBcImNvbG9yXCJcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUpBO0FBU0E7QUFDQTtBQURBO0FBR0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBREE7QUFsQkE7QUF1QkE7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSkE7QUFTQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTtBQTNCQTtBQWdDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFKQTtBQVNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTtBQUdBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBM0JBO0FBOEJBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFoQkEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/validation.js\n");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kissmybutton/motorcortex */ \"../node_modules/@kissmybutton/motorcortex/dist/motorcortex.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kissmybutton_motorcortex_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kissmybutton/motorcortex-player */ \"../node_modules/@kissmybutton/motorcortex-player/dist/motorcortex-player.umd.js\");\n/* harmony import */ var _kissmybutton_motorcortex_player__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kissmybutton_motorcortex_player__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/index */ \"../src/index.js\");\n\n\n\nvar Clip = Object(_kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__[\"loadPlugin\"])(_src_index__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nvar clip = new _kissmybutton_motorcortex__WEBPACK_IMPORTED_MODULE_0__[\"HTMLClip\"]({\n  css: \"\\n    body { \\n      background-color : white; \\n    }              \\n    .container {\\n      width: 1900px;\\n      height: 300px;\\n      overflow: hidden;\\n      display: flex;\\n      justify-content: center;\\n    }\\n    .wrapper{\\n      display: flex;\\n      justify-content: center;\\n      flex-direction: column;\\n      background: gainsboro;\\n    }\\n  \",\n  html: \" \\n    <div class=\\\"wrapper\\\">\\n      <div class=\\\"container container1\\\"></div>\\n      <div class=\\\"container container2\\\"></div>\\n      <div class=\\\"container container3\\\"></div>\\n      <div class=\\\"container container4\\\"></div>\\n    </div> \\n  \",\n  host: document.getElementById(\"clip\"),\n  containerParams: {\n    width: \"1900px\",\n    height: \"1200px\"\n  },\n  id: \"root\"\n});\nvar SvgExplosion = new Clip.SvgExplosion({\n  text: \"SvgExplosion\",\n  width: 1920,\n  height: 300,\n  background: \"#22292C\",\n  colors: [\"#FBDB4A\", \"#F3934A\", \"#EB547D\", \"#9F6AA7\", \"#5476B3\", \"#2BB19B\", \"#70B984\"],\n  fontFamily: \"Rubik Mono One\",\n  fontWeight: 400\n}, {\n  selector: \".container1\"\n});\nvar Shadow = new Clip.Shadow({\n  text: \"Shadow\",\n  width: 1920,\n  height: 300,\n  background: \"#d52e3f\",\n  colors: [\"#e942f5\", \"#efa032\", \"#46b59b\", \"#017e7f\", \"#052939\", \"#c11a2b\"],\n  fontSize: 130,\n  textColor: \"#fcedd8\",\n  fontFamily: \"Arial\",\n  reverse: true\n}, {\n  selector: \".container2\"\n});\nvar SvgLines = new Clip.SvgLines({\n  text: \"SvgLines\",\n  width: 1920,\n  height: 300,\n  background: \"#22292C\",\n  colors: [\"#64d3ce\", \"#2a92ce82\", \"#ff003c\", \"#2a92ce2e\", \"#2a92ce1c\"],\n  strokeWidth: 3,\n  fontSize: 250,\n  verticalAlign: \"80%\",\n  fontFamily: \"Rubik Mono One\"\n}, {\n  selector: \".container3\"\n});\nvar FontWeight = new Clip.FontWeight({\n  width: 1920,\n  height: 300,\n  text: \"FontWeight Animation\",\n  textColor: \"#ff0000\",\n  repeats: 70,\n  fontSize: 20,\n  fontFamily: \"Commissioner\",\n  fontWeightList: [100, 200, 300, 400, 500, 600, 700, 800, 900],\n  rotate: 90\n}, {\n  selector: \".container4\"\n});\nclip.addIncident(SvgExplosion, 0);\nclip.addIncident(Shadow, 0);\nclip.addIncident(SvgLines, 0);\nclip.addIncident(FontWeight, 0);\nnew _kissmybutton_motorcortex_player__WEBPACK_IMPORTED_MODULE_1___default.a({\n  clip: clip,\n  scaleToFit: true,\n  pointerEvents: true\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2luZGV4LmpzPzQxZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZFBsdWdpbiwgSFRNTENsaXAgfSBmcm9tIFwiQGtpc3NteWJ1dHRvbi9tb3RvcmNvcnRleFwiO1xuaW1wb3J0IFBsYXllciBmcm9tIFwiQGtpc3NteWJ1dHRvbi9tb3RvcmNvcnRleC1wbGF5ZXJcIjtcbmltcG9ydCB0ZXh0ZnhzIGZyb20gXCIuLi9zcmMvaW5kZXhcIjtcblxuY29uc3QgQ2xpcCA9IGxvYWRQbHVnaW4odGV4dGZ4cyk7XG5cbmNvbnN0IGNsaXAgPSBuZXcgSFRNTENsaXAoe1xuICBjc3M6IGBcbiAgICBib2R5IHsgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yIDogd2hpdGU7IFxuICAgIH0gICAgICAgICAgICAgIFxuICAgIC5jb250YWluZXIge1xuICAgICAgd2lkdGg6IDE5MDBweDtcbiAgICAgIGhlaWdodDogMzAwcHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cbiAgICAud3JhcHBlcntcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBiYWNrZ3JvdW5kOiBnYWluc2Jvcm87XG4gICAgfVxuICBgLFxuICBodG1sOiBgIFxuICAgIDxkaXYgY2xhc3M9XCJ3cmFwcGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyIGNvbnRhaW5lcjFcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXIgY29udGFpbmVyMlwiPjwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBjb250YWluZXIzXCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyIGNvbnRhaW5lcjRcIj48L2Rpdj5cbiAgICA8L2Rpdj4gXG4gIGAsXG4gIGhvc3Q6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2xpcFwiKSxcbiAgY29udGFpbmVyUGFyYW1zOiB7XG4gICAgd2lkdGg6IFwiMTkwMHB4XCIsXG4gICAgaGVpZ2h0OiBcIjEyMDBweFwiXG4gIH0sXG4gIGlkOiBcInJvb3RcIlxufSk7XG5cbmNvbnN0IFN2Z0V4cGxvc2lvbiA9IG5ldyBDbGlwLlN2Z0V4cGxvc2lvbihcbiAge1xuICAgIHRleHQ6IFwiU3ZnRXhwbG9zaW9uXCIsXG4gICAgd2lkdGg6IDE5MjAsXG4gICAgaGVpZ2h0OiAzMDAsXG4gICAgYmFja2dyb3VuZDogXCIjMjIyOTJDXCIsXG4gICAgY29sb3JzOiBbXG4gICAgICBcIiNGQkRCNEFcIixcbiAgICAgIFwiI0YzOTM0QVwiLFxuICAgICAgXCIjRUI1NDdEXCIsXG4gICAgICBcIiM5RjZBQTdcIixcbiAgICAgIFwiIzU0NzZCM1wiLFxuICAgICAgXCIjMkJCMTlCXCIsXG4gICAgICBcIiM3MEI5ODRcIlxuICAgIF0sXG4gICAgZm9udEZhbWlseTogXCJSdWJpayBNb25vIE9uZVwiLFxuICAgIGZvbnRXZWlnaHQ6IDQwMFxuICB9LFxuICB7XG4gICAgc2VsZWN0b3I6IFwiLmNvbnRhaW5lcjFcIlxuICB9XG4pO1xuXG5jb25zdCBTaGFkb3cgPSBuZXcgQ2xpcC5TaGFkb3coXG4gIHtcbiAgICB0ZXh0OiBcIlNoYWRvd1wiLFxuICAgIHdpZHRoOiAxOTIwLFxuICAgIGhlaWdodDogMzAwLFxuICAgIGJhY2tncm91bmQ6IFwiI2Q1MmUzZlwiLFxuICAgIGNvbG9yczogW1wiI2U5NDJmNVwiLCBcIiNlZmEwMzJcIiwgXCIjNDZiNTliXCIsIFwiIzAxN2U3ZlwiLCBcIiMwNTI5MzlcIiwgXCIjYzExYTJiXCJdLFxuICAgIGZvbnRTaXplOiAxMzAsXG4gICAgdGV4dENvbG9yOiBcIiNmY2VkZDhcIixcbiAgICBmb250RmFtaWx5OiBcIkFyaWFsXCIsXG4gICAgcmV2ZXJzZTogdHJ1ZVxuICB9LFxuICB7XG4gICAgc2VsZWN0b3I6IFwiLmNvbnRhaW5lcjJcIlxuICB9XG4pO1xuXG5jb25zdCBTdmdMaW5lcyA9IG5ldyBDbGlwLlN2Z0xpbmVzKFxuICB7XG4gICAgdGV4dDogXCJTdmdMaW5lc1wiLFxuICAgIHdpZHRoOiAxOTIwLFxuICAgIGhlaWdodDogMzAwLFxuICAgIGJhY2tncm91bmQ6IFwiIzIyMjkyQ1wiLFxuICAgIGNvbG9yczogW1wiIzY0ZDNjZVwiLCBcIiMyYTkyY2U4MlwiLCBcIiNmZjAwM2NcIiwgXCIjMmE5MmNlMmVcIiwgXCIjMmE5MmNlMWNcIl0sXG4gICAgc3Ryb2tlV2lkdGg6IDMsXG4gICAgZm9udFNpemU6IDI1MCxcbiAgICB2ZXJ0aWNhbEFsaWduOiBcIjgwJVwiLFxuICAgIGZvbnRGYW1pbHk6IFwiUnViaWsgTW9ubyBPbmVcIlxuICB9LFxuICB7XG4gICAgc2VsZWN0b3I6IFwiLmNvbnRhaW5lcjNcIlxuICB9XG4pO1xuXG5jb25zdCBGb250V2VpZ2h0ID0gbmV3IENsaXAuRm9udFdlaWdodChcbiAge1xuICAgIHdpZHRoOiAxOTIwLFxuICAgIGhlaWdodDogMzAwLFxuICAgIHRleHQ6IFwiRm9udFdlaWdodCBBbmltYXRpb25cIixcbiAgICB0ZXh0Q29sb3I6IFwiI2ZmMDAwMFwiLFxuICAgIHJlcGVhdHM6IDcwLFxuICAgIGZvbnRTaXplOiAyMCxcbiAgICBmb250RmFtaWx5OiBcIkNvbW1pc3Npb25lclwiLFxuICAgIGZvbnRXZWlnaHRMaXN0OiBbMTAwLCAyMDAsIDMwMCwgNDAwLCA1MDAsIDYwMCwgNzAwLCA4MDAsIDkwMF0sXG4gICAgcm90YXRlOiA5MFxuICB9LFxuICB7XG4gICAgc2VsZWN0b3I6IFwiLmNvbnRhaW5lcjRcIlxuICB9XG4pO1xuXG5jbGlwLmFkZEluY2lkZW50KFN2Z0V4cGxvc2lvbiwgMCk7XG5jbGlwLmFkZEluY2lkZW50KFNoYWRvdywgMCk7XG5jbGlwLmFkZEluY2lkZW50KFN2Z0xpbmVzLCAwKTtcbmNsaXAuYWRkSW5jaWRlbnQoRm9udFdlaWdodCwgMCk7XG5cbm5ldyBQbGF5ZXIoeyBjbGlwLCBzY2FsZVRvRml0OiB0cnVlLCBwb2ludGVyRXZlbnRzOiB0cnVlIH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFrQkE7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFoQ0E7QUFtQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQWZBO0FBa0JBO0FBREE7QUFLQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBWUE7QUFEQTtBQUtBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFZQTtBQURBO0FBS0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFUQTtBQVlBO0FBREE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ })

/******/ });